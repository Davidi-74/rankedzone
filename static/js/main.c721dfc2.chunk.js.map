{"version":3,"sources":["mui/icons.js","comps/utils.js","mui/homepagePlatforms.js","icons/RANKEDZONE.png","comps/LogoComp.js","comps/HomePage.js","mui/rankingDesign.js","comps/SpecificRankedStat.js","comps/HowWeRank.js","mui/nextRankTooltip.js","comps/SingleStatComp.js","mui/plainStatDesign.js","comps/PlainStatComp.js","mui/helpOutlineDesign.js","comps/skeletons/LifetimeCompSkel.js","comps/LifetimeComp.js","comps/skeletons/WeeklyCompSkel.js","comps/WeeklyComp.js","mui/placementPaper.js","icons/verdansk84.jpg","icons/rebirthisland.jpg","mui/matchBgImage.js","mui/miniMatchSummary.js","comps/MiniMatchSummary.js","mui/sessionSummaryWin.js","comps/SessionSummaryWins.js","comps/skeletons/SessionSummarySkel.js","comps/SessionSummary.js","comps/MatchesComp.js","mui/stickyLifetime.js","comps/PlayerComp.js","mui/matchMVPPlacement.js","comps/MatchMVPs.js","mui/tablePlacementPaper.js","mui/styledTableCell.js","mui/styledTableRow.js","mui/teamCompDesign.js","comps/TeamComp.js","mui/sortButtons.js","mui/specificTableCell.js","comps/GroupedByPlayers.js","comps/skeletons/SpecificMatchSkel.js","comps/SpecificMatchComp.js","comps/RouterComp.js","mui/theme.js","App.js","reportWebVitals.js","index.js"],"names":["SvgIcon","require","BattleIcon","props","color","d","PSNIcon","XBLIcon","serverURL","getProfile","username","platform","a","query","weeklyModeData","fetch","method","headers","body","JSON","stringify","variables","then","r","json","data","resp","errors","searchProfile","getLifetimeStats","getWeeklyStats","getMatches","getMatchesByPlayer","getMatchDetails","matchID","getMatchByID","showSelectedValueIcon","value","getRankingDesign","statType","stat","design","nextLevel","modeName","mode","ordinalNumbers","num","numString","String","lastNum","length","formatDate","milis","formatMilis","parseInt","matchStart","Date","time","toTimeString","substring","date","toDateString","homepagePlatforms","makeStyles","root","backgroundColor","LogoComp","theme","useTheme","screenSize","useMediaQuery","breakpoints","up","href","style","marginTop","src","rankedzone","width","HomePage","useState","setUsername","setPlatform","alert","setAlert","e","preventDefault","LinearProgress","utils","message","fontSize","history","push","encodeURIComponent","platformsStyle","Container","height","Grid","container","direction","item","xs","marginBottom","onSubmit","justify","alignItems","margin","padding","flexBasis","TextField","type","label","InputLabelProps","shrink","placeholder","onChange","target","paddingTop","Select","paddingBottom","MenuProps","classes","paper","anchorOrigin","vertical","horizontal","transformOrigin","getContentAnchorEl","renderValue","ListItemIcon","MenuItem","Button","onClick","ButtonBase","ranking","wood","background","bronze","silver","gold","platinum","damascus","obsidian","SpecificRankedStat","rankingData","setRankingData","useEffect","currentRank","i","statData","obj","console","log","reverse","getStats","rankingDesign","map","rank","Paper","elevation","Box","className","fontWeight","borderTopLeftRadius","borderTopRightRadius","toUpperCase","toLocaleString","HowWeRank","md","nextRankTooltip","SingleStatComp","setDesign","setNextLevel","getDesign","designData","formatNextLevel","nextLevelName","toFixed","tooltipDesign","Tooltip","title","tooltip","displayStat","borderBottomRightRadius","borderBottomLeftRadius","plainDesign","PlainStatComp","secondsToDhms","seconds","Number","dDisplay","hDisplay","Math","floor","h","m","hs","hsString","formatHsPercentage","helpOutlineDesign","verticalAlign","borderRadius","LifetimeCompSkel","spacing","Skeleton","LifetimeComp","stats","setStats","otherStats","setOtherStats","decodeURIComponent","temp","helpDesign","component","Link","to","window","open","lifetime","kdRatio","kills","gamesPlayed","wins","display","deaths","topFive","topTen","downs","revives","contracts","score","timePlayed","WeeklyCompSkel","WeeklyComp","currentMode","setCurrentMode","optionalModes","setOptionalModes","formatModeName","modes","weekly","Object","keys","forEach","getOptionalModes","selectDesign","defaultValue","variant","textAlign","selectList","killsPerGame","damageDone","damageTaken","headshots","headshotPercentage","avgLifetime","placement","other","flexDirection","justifyContent","first","second","third","bgImage","verdansk","backgroundImage","verdansk84","backgroundSize","backgroundPositionY","rebirth","rebirthIsland","miniMatchSummary","MiniMatchSummary","match","setMatch","items","setItems","placementStyle","placementColor","matchData","paperDesign","teamStats","utcStartSeconds","Divider","flexItem","playerStats","orientation","minWidth","matchBgImage","uno","pickBgImage","sessionSummaryWins","win","noWin","SessionSummaryWins","winDesign","SessionSummarySkel","SessionSummary","session","sessionStats","setSessionStats","summarizeSession","MatchesComp","matches","setMatches","userData","setUserData","clantag","splitToSessions","prevTime","sessions","currentSession","index","isSticky","position","top","PlayerComp","params","stickyLifetime","MatchMVPs","teamKills","playerKills","showComp","setShowComp","teammates","teamNum","teammatesString","players","specificTeammates","flag","player","placementDesign","fullWidth","paddingLeft","maxWidth","withStyles","TableCell","StyledTableCell","head","borderBottom","TableRow","StyledTableRow","teamCompDesign","general","specific","boxShadow","TeamComp","team","specificTeam","setSpecificTeam","unoExists","isSpecificPlayer","teamPaper","sm","teamPlacement","TableContainer","Table","aria-label","TableHead","align","TableBody","scope","sortButtons","picked","SpecificTableCell","GroupedByPlayers","SpecificMatchSkel","jusity","SpecificMatchComp","teams","setTeams","setMatchData","topTeamKills","setTopTeamKills","topPlayerKills","setTopPlayerKills","sort","setSort","groupBy","setGroupBy","group","setGroup","groupSort","setGroupSort","teamComps","setTeamComps","setPlayers","getMatch","playerCount","sortBy","prop","teamsCopy","b","sortPlayersByKills","scrollTo","createTeamsDesign","slice","getTopTeamKills","concat","getTopPlayerKills","sortButtonsDesign","ButtonGroup","size","getPlayers","sorted","sortPlayersByDamage","RouterComp","path","exact","createMuiTheme","darkTheme","overrides","MuiContainer","fontFamily","MuiButton","borderColor","MuiInputLabel","MuiFilledInput","MuiSelect","icon","MuiMenuItem","MuiPaper","MuiSkeleton","MuiTextField","animation","palette","primary","main","secondary","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename","document","getElementById"],"mappings":"mVAAQA,EAAYC,EAAQ,IAApBD,QAEFE,EAAa,SAACC,GAChB,OACI,cAACH,EAAD,2BAAaG,GAAb,IAAoBC,MAAM,UAA1B,SACI,sBAAMC,EAAE,i3DAKdC,EAAU,SAACH,GACb,OACI,cAACH,EAAD,2BAAaG,GAAb,IAAoBC,MAAM,UAA1B,SACI,sBAAMC,EAAE,qrBAKdE,EAAU,SAACJ,GACb,OACI,cAACH,EAAD,2BAAaG,GAAb,IAAoBC,MAAM,UAA1B,SACI,sBAAMC,EAAE,k4BClBdG,EAAY,kDA0jBH,GACXC,WAxjBY,uCAAG,WAAOC,EAAUC,GAAjB,mBAAAC,EAAA,6DAmBTC,EAnBS,ipBAETC,EAFS,kXA8CGA,EA9CH,8EAiDGA,EAjDH,+EAoDGA,EApDH,+EAuDGA,EAvDH,mFA0DGA,EA1DH,oFA6DGA,EA7DH,oFAgEGA,EAhEH,iEAsEEC,MAAMP,EAAW,CAC9BQ,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,OAAU,oBAEdC,KAAMC,KAAKC,UAAU,CACjBP,QACAQ,UAAW,CAAEX,WAAUC,gBAE5BW,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACVF,MAAK,SAAAG,GAAU,OAAOA,KAjFZ,YAsEXC,EAtEW,QAmFNC,OAnFM,yCAoFJD,GApFI,gCAuFJA,EAAKD,KAAKhB,YAvFN,4CAAH,wDAwjBAmB,cA7dG,uCAAG,WAAOlB,EAAUC,GAAjB,eAAAC,EAAA,oQAUDG,MAAMP,EAAW,CAC9BQ,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,OAAU,oBAEdC,KAAMC,KAAKC,UAAU,CACjBP,MAjBU,+LAkBVQ,UAAW,CAAEX,WAAUC,gBAE5BW,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACVF,MAAK,SAAAG,GAAU,OAAOA,KArBT,YAUdC,EAVc,QAuBTC,OAvBS,yCAwBPD,GAxBO,gCA2BPA,EAAKD,KAAKhB,YA3BH,2CAAH,wDA6dYoB,iBA9bT,uCAAG,WAAOnB,EAAUC,GAAjB,eAAAC,EAAA,8pBA0BJG,MAAMP,EAAW,CAC9BQ,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,OAAU,oBAEdC,KAAMC,KAAKC,UAAU,CACjBP,MAjCa,ylBAkCbQ,UAAW,CAAEX,WAAUC,gBAE5BW,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACVF,MAAK,SAAAG,GAAU,OAAOA,KArCN,YA0BjBC,EA1BiB,QAuCZC,OAvCY,yCAwCVD,GAxCU,gCA2CVA,EAAKD,KAAKhB,YA3CA,2CAAH,wDA8b2BqB,eA/Y7B,uCAAG,WAAOpB,EAAUC,GAAjB,mBAAAC,EAAA,6DAkBbC,EAlBa,gSACbC,EADa,kXA8BDA,EA9BC,8EAiCDA,EAjCC,+EAoCDA,EApCC,+EAuCDA,EAvCC,mFA0CDA,EA1CC,oFA6CDA,EA7CC,oFAgDDA,EAhDC,sFAmDDA,EAnDC,uFAsDDA,EAtDC,uFAyDDA,EAzDC,iEA+DFC,MAAMP,EAAW,CAC9BQ,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,OAAU,oBAEdC,KAAMC,KAAKC,UAAU,CACjBP,QACAQ,UAAW,CAAEX,WAAUC,gBAE5BW,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACVF,MAAK,SAAAG,GAAU,OAAOA,KA1ER,YA+DfC,EA/De,QA4EVC,OA5EU,yCA6ERD,GA7EQ,gCAgFRA,EAAKD,KAAKhB,YAhFF,4CAAH,wDA+Y6CsB,WA3TjD,uCAAG,WAAOrB,EAAUC,GAAjB,eAAAC,EAAA,+sBA4BEG,MAAMP,EAAW,CAC9BQ,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,OAAU,oBAEdC,KAAMC,KAAKC,UAAU,CACjBP,MAnCO,0oBAoCPQ,UAAW,CAAEX,WAAUC,gBAE5BW,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACVF,MAAK,SAAAG,GAAU,OAAOA,KAvCZ,YA4BXC,EA5BW,QAyCNC,OAzCM,yCA0CJD,GA1CI,gCA6CJA,EAAKD,KAAKO,oBA7CN,2CAAH,wDA4TZC,gBA3QiB,uCAAG,WAAOC,GAAP,eAAAtB,EAAA,q0BAkCHG,MAAMP,EAAW,CAC9BQ,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,OAAU,oBAEdC,KAAMC,KAAKC,UAAU,CACjBP,MAzCY,gwBA0CZQ,UAAW,CAAEa,eAElBZ,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACVF,MAAK,SAAAG,GAAU,OAAOA,KA7CP,YAkChBC,EAlCgB,QA+CXC,OA/CW,yCAgDTD,GAhDS,gCAmDTA,EAAKD,KAAKU,cAnDD,2CAAH,sDA2QAC,sBApNS,SAACC,GAC3B,MAAc,WAAVA,EACO,cAAC,EAAD,IAEG,QAAVA,EACO,cAAC,EAAD,IAEG,QAAVA,EACO,cAAC,EAAD,SADX,GA6MwCC,iBAvMnB,SAACC,EAAUC,GAChC,OAAQD,GACJ,IAAK,KACD,GAAIC,EAAO,IACP,MAAO,CAAEC,OAAQ,OAAQC,UAAW,CAAC,SAAU,MAEnD,GAAIF,GAAQ,KAAQA,EAAO,IACvB,MAAO,CAAEC,OAAQ,SAAUC,UAAW,CAAC,SAAU,MAErD,GAAIF,GAAQ,KAAQA,EAAO,IACvB,MAAO,CAAEC,OAAQ,SAAUC,UAAW,CAAC,OAAQ,MAEnD,GAAIF,GAAQ,KAAQA,EAAO,KACvB,MAAO,CAAEC,OAAQ,OAAQC,UAAW,CAAC,WAAY,OAErD,GAAIF,GAAQ,MAAQA,EAAO,KACvB,MAAO,CAAEC,OAAQ,WAAYC,UAAW,CAAC,WAAY,OAEzD,GAAIF,GAAQ,MAAQA,EAAO,KACvB,MAAO,CAAEC,OAAQ,WAAYC,UAAW,CAAC,WAAY,OAEzD,GAAIF,GAAQ,KACR,MAAO,CAAEC,OAAQ,YAIzB,IAAK,QACD,GAAID,EAAO,IACP,MAAO,CAAEC,OAAQ,OAAQC,UAAW,CAAC,SAAU,MAEnD,GAAIF,GAAQ,KAAOA,EAAO,IACtB,MAAO,CAAEC,OAAQ,SAAUC,UAAW,CAAC,SAAU,MAErD,GAAIF,GAAQ,KAAOA,EAAO,KACtB,MAAO,CAAEC,OAAQ,SAAUC,UAAW,CAAC,OAAQ,OAEnD,GAAIF,GAAQ,MAAQA,EAAO,KACvB,MAAO,CAAEC,OAAQ,OAAQC,UAAW,CAAC,WAAY,OAErD,GAAIF,GAAQ,MAAQA,EAAO,KACvB,MAAO,CAAEC,OAAQ,WAAYC,UAAW,CAAC,WAAY,OAEzD,GAAIF,GAAQ,MAAQA,EAAO,MACvB,MAAO,CAAEC,OAAQ,WAAYC,UAAW,CAAC,WAAY,QAEzD,GAAIF,GAAQ,MACR,MAAO,CAAEC,OAAQ,YAIzB,IAAK,cACD,GAAID,EAAO,IACP,MAAO,CAAEC,OAAQ,OAAQC,UAAW,CAAC,SAAU,MAEnD,GAAIF,GAAQ,KAAOA,EAAO,IACtB,MAAO,CAAEC,OAAQ,SAAUC,UAAW,CAAC,SAAU,MAErD,GAAIF,GAAQ,KAAOA,EAAO,IACtB,MAAO,CAAEC,OAAQ,SAAUC,UAAW,CAAC,OAAQ,MAEnD,GAAIF,GAAQ,KAAOA,EAAO,IACtB,MAAO,CAAEC,OAAQ,OAAQC,UAAW,CAAC,WAAY,MAErD,GAAIF,GAAQ,KAAOA,EAAO,IACtB,MAAO,CAAEC,OAAQ,WAAYC,UAAW,CAAC,WAAY,MAEzD,GAAIF,GAAQ,KAAQA,EAAO,KACvB,MAAO,CAAEC,OAAQ,WAAYC,UAAW,CAAC,WAAY,OAEzD,GAAIF,GAAQ,KACR,MAAO,CAAEC,OAAQ,YAIzB,IAAK,OACD,GAAID,EAAO,EACP,MAAO,CAAEC,OAAQ,OAAQC,UAAW,CAAC,SAAU,IAEnD,GAAIF,GAAQ,GAAKA,EAAO,EACpB,MAAO,CAAEC,OAAQ,SAAUC,UAAW,CAAC,SAAU,IAErD,GAAIF,GAAQ,GAAKA,EAAO,EACpB,MAAO,CAAEC,OAAQ,SAAUC,UAAW,CAAC,OAAQ,IAEnD,GAAIF,GAAQ,GAAKA,EAAO,GACpB,MAAO,CAAEC,OAAQ,OAAQC,UAAW,CAAC,WAAY,KAErD,GAAIF,GAAQ,IAAMA,EAAO,IACrB,MAAO,CAAEC,OAAQ,WAAYC,UAAW,CAAC,WAAY,MAEzD,GAAIF,GAAQ,KAAOA,EAAO,IACtB,MAAO,CAAEC,OAAQ,WAAYC,UAAW,CAAC,WAAY,MAEzD,GAAIF,GAAQ,IACR,MAAO,CAAEC,OAAQ,YAIzB,IAAK,gBACD,GAAID,EAAO,IACP,MAAO,CAAEC,OAAQ,OAAQC,UAAW,CAAC,SAAU,MAEnD,GAAIF,GAAQ,KAAQA,EAAO,IACvB,MAAO,CAAEC,OAAQ,SAAUC,UAAW,CAAC,SAAU,MAErD,GAAIF,GAAQ,KAAQA,EAAO,KACvB,MAAO,CAAEC,OAAQ,SAAUC,UAAW,CAAC,OAAQ,OAEnD,GAAIF,GAAQ,MAAQA,EAAO,KACvB,MAAO,CAAEC,OAAQ,OAAQC,UAAW,CAAC,WAAY,OAErD,GAAIF,GAAQ,MAAQA,EAAO,KACvB,MAAO,CAAEC,OAAQ,WAAYC,UAAW,CAAC,WAAY,OAEzD,GAAIF,GAAQ,MAAQA,EAAO,GACvB,MAAO,CAAEC,OAAQ,WAAYC,UAAW,CAAC,WAAY,KAEzD,GAAIF,GAAQ,GACR,MAAO,CAAEC,OAAQ,YAIzB,IAAK,eACD,GAAID,EAAO,KACP,MAAO,CAAEC,OAAQ,OAAQC,UAAW,CAAC,SAAU,OAEnD,GAAIF,GAAQ,MAAQA,EAAO,KACvB,MAAO,CAAEC,OAAQ,SAAUC,UAAW,CAAC,SAAU,OAErD,GAAIF,GAAQ,MAAQA,EAAO,KACvB,MAAO,CAAEC,OAAQ,SAAUC,UAAW,CAAC,OAAQ,OAEnD,GAAIF,GAAQ,MAAQA,EAAO,KACvB,MAAO,CAAEC,OAAQ,OAAQC,UAAW,CAAC,WAAY,OAErD,GAAIF,GAAQ,MAAQA,EAAO,KACvB,MAAO,CAAEC,OAAQ,WAAYC,UAAW,CAAC,WAAY,OAEzD,GAAIF,GAAQ,MAAQA,EAAO,KACvB,MAAO,CAAEC,OAAQ,WAAYC,UAAW,CAAC,WAAY,OAEzD,GAAIF,GAAQ,KACR,MAAO,CAAEC,OAAQ,YAGzB,QAAS,MAAO,YAsDsCE,SAjD7C,SAACC,GACd,OAAQA,GACJ,IAAK,YAAa,MAAO,UACzB,IAAK,YAAa,MAAO,UACzB,IAAK,aAAc,MAAO,WAC1B,IAAK,aAAc,MAAO,WAC1B,IAAK,uBAAwB,MAAO,0BACpC,IAAK,wBAAyB,MAAO,2BACrC,IAAK,uBAAwB,MAAO,2BACpC,IAAK,6BAA8B,MAAO,2BAC1C,IAAK,8BAA+B,MAAO,4BAC3C,IAAK,8BAA+B,MAAO,4BAC3C,IAAK,uBAAwB,MAAO,aACpC,IAAK,gBAAiB,MAAO,UAC7B,QAAS,OAAOA,IAmCgDC,eA/BjD,SAACC,GACpB,GAAY,OAARA,EACA,MAAO,MAEX,IAAIC,EAAYC,OAAOF,GACnBG,EAAUF,EAAUA,EAAUG,OAAS,GAC3C,OAAiB,IAAbH,GAAgC,IAAbA,GAAgC,IAAbA,GAAgC,KAAbA,GAAiC,KAAbA,GAAiC,KAAbA,EAC1FD,EAAM,KAEF,GAAXG,EACOH,EAAM,KAEF,GAAXG,EACOH,EAAM,KAEF,GAAXG,EACOH,EAAM,KAEVA,EAAM,MAauEK,WAVrE,SAACC,GAChB,IAAIC,EAAcC,SAASF,EAAQ,OAC/BG,EAAa,IAAIC,KAAKH,GACtBI,EAAOF,EAAWG,eAAeC,UAAU,EAAG,GAC9CC,EAAOL,EAAWM,eACtB,OAAOb,OAAOY,EAAKD,UAAU,EAAG,GAAK,KAAOC,EAAKD,UAAU,EAAG,IAAM,MAAQF,K,SCxjB1EK,EAAoBC,YAAW,CACjCC,KAAM,CACFC,gBAAiB,aCJV,MAA0B,uC,iBCuB1BC,EApBE,SAAC/D,GACd,IAAMgE,EAAQC,cACRC,EAAaC,YAAcH,EAAMI,YAAYC,GAAG,OAEtD,OACI,8BAEQH,EACI,mBAAGI,KAAK,mBAAR,SACI,qBAAKC,MAAO,CAAEC,UAAW,QAAUC,IAAKC,EAAYC,MAAM,UAG9D,mBAAGL,KAAK,mBAAR,SACI,qBAAKC,MAAO,CAAEC,UAAW,QAAUC,IAAKC,EAAYC,MAAM,a,2BCuFnEC,EA9FE,SAAC5E,GAAW,IAAD,EACQ6E,mBAAS,IADjB,mBACjBtE,EADiB,KACPuE,EADO,OAEQD,mBAAS,UAFjB,mBAEjBrE,EAFiB,KAEPuE,EAFO,OAGEF,mBAAS,IAHX,mBAGjBG,EAHiB,KAGVC,EAHU,KAKlB3E,EAAU,uCAAG,WAAO4E,GAAP,eAAAzE,EAAA,yDACfyE,EAAEC,iBACc,IAAZ5E,EAFW,uBAGX0E,EAAS,+BAAM,cAACG,EAAA,EAAD,CAAgBb,MAAO,CAAEI,MAAO,SAAW1E,MAAM,iBAHrD,SAIMoF,EAAM5D,cAAclB,EAAUC,GAJpC,QAIPe,EAJO,QAKFC,OAC0B,oEAA3BD,EAAKC,OAAO,GAAG8D,SACfL,EAAS,mBAAGV,MAAO,CAAEC,UAAW,QAASe,SAAU,IAA1C,kCAIbvF,EAAMwF,QAAQC,KAAd,kBAA8BlE,EAAKf,SAAnC,YAA+CkF,mBAAmBnE,EAAKhB,YAXhE,uBAeX0E,EAAS,mBAAGV,MAAO,CAAEC,UAAW,QAASe,SAAU,IAA1C,uCAfE,4CAAH,sDAmBVI,EAAiBhC,IACvB,OACI,eAACiC,EAAA,EAAD,CAAWrB,MAAO,CAAEsB,OAAQ,SAA5B,UACI,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAA1B,UACI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAI3B,MAAO,CAAEC,UAAW,QAAS2B,aAAc,OAA9D,SACI,cAAC,EAAD,MACG,uBAAM,uBACb,sBAAMC,SAAU,SAAClB,GAAD,OAAO5E,EAAW4E,IAAlC,SACI,eAACY,EAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACD,UAAU,MAAMK,QAAQ,SAASC,WAAW,SAAjE,UACI,cAACR,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAI3B,MAAO,CAAEgC,OAAQ,EAAGC,QAAS,EAAGC,UAAW,OAA9D,SACI,cAACC,EAAA,EAAD,CAAWC,KAAK,OAAOC,MAAM,WAAWC,gBAAiB,CAAEC,QAAQ,GAAQC,YAAY,uBAAuBxC,MAAO,CAAEI,MAAO,QAAUqC,SAAU,SAAA9B,GAAC,OAAIJ,EAAYI,EAAE+B,OAAO/E,YAEhL,eAAC4D,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAG3B,MAAO,CAAEgC,OAAQ,EAAGC,QAAS,EAAGC,UAAW,EAAGS,WAAY,QAA5E,UACI,eAACC,EAAA,EAAD,CAAQjF,MAAO1B,EAAU+D,MAAO,CAAEI,MAAO,OAAQkB,OAAQ,SAAUuB,cAAe,OAASC,UAAW,CAClGC,QAAS,CAAEC,MAAO5B,EAAe9B,MACjC2D,aAAc,CAAEC,SAAU,SAAUC,WAAY,QAChDC,gBAAiB,CAAEF,SAAU,MAAOC,WAAY,QAChDE,mBAAoB,MAEpBC,YAAa,SAAC3F,GAAD,OAAW,cAAC4F,EAAA,EAAD,UAAezC,EAAMpD,sBAAsBC,MACnE8E,SAAU,SAAA9B,GAAC,OAAIH,EAAYG,EAAE+B,OAAO/E,QAPxC,UAQI,eAAC6F,EAAA,EAAD,CAAU7F,MAAM,SAAhB,UACI,cAAC4F,EAAA,EAAD,UACI,cAAC,EAAD,MAFR,gBAMA,eAACC,EAAA,EAAD,CAAU7F,MAAM,MAAhB,UACI,cAAC4F,EAAA,EAAD,UACI,cAAC,EAAD,MAFR,iBAMA,eAACC,EAAA,EAAD,CAAU7F,MAAM,MAAhB,UACI,cAAC4F,EAAA,EAAD,UACI,cAAC,EAAD,MAFR,aAMK,uBAAM,0BAEnB,cAAChC,EAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACI,QAAQ,SAASH,GAAI,GAAI3B,MAAO,CAAEsB,OAAQ,QAA/D,SAEiB,IAATb,EACIA,EAEA,OAGZ,cAACc,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAAC8B,EAAA,EAAD,CAAQC,QAAS3H,EAAYqG,KAAK,SAASpC,MAAO,CAAEI,MAAO,SAA3D,8BAMhB,mCACI,uBAAM,uBAAM,wLAE6B,uBAAM,uBAFnC,2CAGgC,uBAHhC,IAGuC,uBAC/C,cAACuD,EAAA,EAAD,CAAY5D,KAAK,+BAAjB,SACI,cAAC,IAAD,gBCpET6D,EAxBCvE,YAAW,CACvBwE,KAAM,CACFC,WAAY,+EAEhBC,OAAQ,CACJD,WAAY,+EAEhBE,OAAQ,CACJF,WAAY,iDAEhBG,KAAM,CACFH,WAAY,mFAEhBI,SAAU,CACNJ,WAAY,2EAEhBK,SAAU,CACNL,WAAY,gFAEhBM,SAAU,CACNN,WAAY,6E,kBCiCLO,EAnDY,SAAC5I,GAAW,IAAD,EACN6E,mBAAS7E,EAAMoC,UADT,mBAC3BA,EAD2B,aAEIyC,mBAAS,KAFb,mBAE3BgE,EAF2B,KAEdC,EAFc,KAuBlCC,qBAAU,YAnBO,WAGb,IAFA,IAAIC,EAAc,EACdH,EAAc,GACTI,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,IAAIC,EAAW7D,EAAMlD,iBAAiBC,EAAU4G,GAChD,GAAuB,YAAnBE,EAAS5G,OAAsB,CAC/B,IAAI6G,EAAM,CAACD,EAAS5G,OAAQ0G,EAAaE,EAAS3G,UAAU,IAC5DsG,EAAYpD,KAAK0D,GACjBH,EAAcE,EAAS3G,UAAU,OAEhC,CACD,IAAI4G,EAAM,CAACD,EAAS5G,OAAQ0G,GAC5BH,EAAYpD,KAAK0D,IAGzBC,QAAQC,IAAIR,GACZC,EAAeD,EAAYS,WAI3BC,KACD,IAEH,IAAMC,EAAgBrB,IACtB,OACI,8BAEQU,EAAY9F,OAAS,EAEb8F,EAAYY,KAAI,SAACC,GACb,OACI,eAACC,EAAA,EAAD,CAAOC,UAAW,EAAGrF,MAAO,CAAEI,MAAO,OAAQwB,aAAc,OAA3D,UACI,cAAC0D,EAAA,EAAD,CAAKC,UAAWN,EAAcE,EAAK,IAAKzJ,MAAM,QAAQ8J,WAAW,OAAOxF,MAAO,CAAEyF,oBAAqB,MAAOC,qBAAsB,OAAnI,SACKP,EAAK,GAAGQ,gBAEA,aAAZR,EAAK,GAAoBA,EAAK,GAAGS,eAAe,GAAK,IAAMT,EAAK,GAAGS,eAAe,GAAKT,EAAK,GAAGS,eAAe,GAAK,UAMpI,MCkBLC,EAhEG,SAACpK,GAEf,OACI,cAAC4F,EAAA,EAAD,UACI,eAACE,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMM,WAAW,SAASD,QAAQ,SAAS9B,MAAO,CAAE4B,aAAc,SAA5F,UACI,cAACL,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAAC,EAAD,MAEJ,cAACJ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,+CAEJ,eAACJ,EAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,GAAImE,GAAI,EAAGrE,UAAU,SAASM,WAAW,SAAlE,UACI,cAACR,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,6CAEJ,cAACJ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAI3B,MAAO,CAAEI,MAAO,OAAnC,SACI,cAAC,EAAD,CAAoBvC,SAAS,YAGrC,eAAC0D,EAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,GAAImE,GAAI,EAAGrE,UAAU,SAASM,WAAW,SAAlE,UACI,cAACR,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,yCAEJ,cAACJ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAI3B,MAAO,CAAEI,MAAO,OAAnC,SACI,cAAC,EAAD,CAAoBvC,SAAS,eAGrC,eAAC0D,EAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,GAAImE,GAAI,EAAGrE,UAAU,SAASM,WAAW,SAAlE,UACI,cAACR,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,gDAEJ,cAACJ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAI3B,MAAO,CAAEI,MAAO,OAAnC,SACI,cAAC,EAAD,CAAoBvC,SAAS,qBAGrC,eAAC0D,EAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,GAAImE,GAAI,EAAGrE,UAAU,SAASM,WAAW,SAAlE,UACI,cAACR,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,wCAEJ,cAACJ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAI3B,MAAO,CAAEI,MAAO,OAAnC,SACI,cAAC,EAAD,CAAoBvC,SAAS,cAGrC,eAAC0D,EAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,GAAImE,GAAI,EAAGrE,UAAU,SAASM,WAAW,SAAlE,UACI,cAACR,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,0CAEJ,cAACJ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAI3B,MAAO,CAAEI,MAAO,OAAnC,SACI,cAAC,EAAD,CAAoBvC,SAAS,uBAGrC,eAAC0D,EAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,GAAImE,GAAI,EAAGrE,UAAU,SAASM,WAAW,SAAlE,UACI,cAACR,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,kDAEJ,cAACJ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAI3B,MAAO,CAAEI,MAAO,OAAnC,SACI,cAAC,EAAD,CAAoBvC,SAAS,4B,iBClBtCkI,EAvCS1G,YAAW,CAC/BwE,KAAM,CACFC,WAAY,8EACZ9C,SAAU,OACVwE,WAAY,QAEhBzB,OAAQ,CACJD,WAAY,8EACZ9C,SAAU,OACVwE,WAAY,QAEhBxB,OAAQ,CACJF,WAAY,gDACZ9C,SAAU,OACVwE,WAAY,QAEhBvB,KAAM,CACFH,WAAY,kFACZ9C,SAAU,OACVwE,WAAY,QAEhBtB,SAAU,CACNJ,WAAY,0EACZ9C,SAAU,OACVwE,WAAY,QAEhBrB,SAAU,CACNL,WAAY,+EACZ9C,SAAU,OACVwE,WAAY,QAGhBpB,SAAU,CACNN,WAAY,0EACZ9C,SAAU,OACVwE,WAAY,UC2BLQ,EA3DQ,SAACvK,GAAW,IAAD,EACE6E,mBAAS7E,EAAMoC,UADjB,mBACvBA,EADuB,aAENyC,mBAAS7E,EAAMqC,OAFT,mBAEvBA,EAFuB,aAGFwC,mBAAS,KAHP,mBAGvBvC,EAHuB,KAGfkI,EAHe,OAII3F,mBAAS,YAJb,mBAIvBtC,EAJuB,KAIZkI,EAJY,KAMxBC,EAAY,WACd,IAAIC,EAAatF,EAAMlD,iBAAiBC,EAAUC,GAClDmI,EAAUG,EAAWrI,QACjBqI,EAAWpI,WACXkI,EAAaG,EAAgBD,EAAWpI,aAe1CqI,EAAkB,SAACrI,GACrB,IAAMsI,EAAgBtI,EAAU,GAAG2H,cACnC,MAAiB,OAAb9H,GAAkC,iBAAbA,EACdG,EAAU,GAAGuI,QAAQ,GAAK,iBAASD,EAE7B,kBAAbzI,EACOG,EAAU,GAAGuI,QAAQ,GAArBvI,kBAAyCsI,EAE7CtI,EAAU,GAAG4H,iBAAmB,iBAASU,GAGpD9B,qBAAU,WACN2B,MACD,IAEH3B,qBAAU,WACN2B,MACD,CAACrI,IAEJ,IAAMmH,EAAgBrB,IAChB4C,EAAgBT,IACtB,OACI,cAACU,EAAA,EAAD,CAASC,MAAO1I,EAAW+E,QAAS,CAAE4D,QAASH,EAAczI,IAA7D,SACI,eAACqH,EAAA,EAAD,CAAOG,UAAWN,EAAclH,GAASsH,UAAW,EAApD,UACI,cAACC,EAAA,EAAD,CAAKtF,MAAO,CAAEtE,MAAO,QAAS+J,oBAAqB,MAAOC,qBAAsB,OAASF,WAAW,SAApG,SAnCQ,SAAC1H,GACjB,OAAQA,GACJ,IAAK,KAAM,MAAO,YAClB,IAAK,QACL,IAAK,cAAe,MAAO,QAC3B,IAAK,OAAQ,MAAO,OACpB,IAAK,gBAAiB,MAAO,SAC7B,IAAK,eAAgB,MAAO,gBA4BsF8I,CAAY/I,KAC1H,cAACyH,EAAA,EAAD,CAAKtE,SAAS,OAAOhB,MAAO,CAAE8D,WAAY,SAA1C,SACkB,OAAbjG,GAAkC,iBAAbA,EAA8BC,EAAKyI,QAAQ,GAAkB,kBAAb1I,EAA+BC,EAAKyI,QAAQ,GAAK,IAAMzI,EAAK8H,mBAEtI,cAACN,EAAA,EAAD,CAAKtF,MAAO,CAAEtE,MAAO,QAASsF,SAAU,OAAQ6F,wBAAyB,MAAOC,uBAAwB,OAAStB,WAAW,SAA5H,SAAgJ,WAAVzH,EAAsB,GAAKA,EAAO4H,sB,oCClDzKoB,EAPK1H,YAAW,CAC3BC,KAAM,CACFwE,WAAY,8EACZpI,MAAO,WCuDAsL,EAxDO,SAACvL,GAAW,IAAD,EACG6E,mBAAS7E,EAAMoC,UADlB,mBACtBA,EADsB,aAELyC,mBAAS7E,EAAMqC,OAFV,mBAEtBA,EAFsB,KAuBvBmJ,GAvBuB,KAuBP,SAACC,GACnBA,EAAUC,OAAOD,GACjB,IAIIE,EAAUC,EAJV1L,EAAI2L,KAAKC,MAAML,EAAO,OACtBM,EAAIF,KAAKC,MAAML,EAAO,MAAiB,MACvCO,EAAIH,KAAKC,MAAML,EAAU,KAAO,IAMpC,OAHAE,EAAWzL,EAAI,EAAIA,EAAI,IAAM,KAC7B0L,EAAWG,EAAI,EAAIJ,EAAW,KAAOI,EAAI,IAAMA,EAAI,IAAM,KAC9CC,EAAI,EAAIL,GAAYC,EAAW,KAAOI,EAAI,IAAMA,EAAI,WAAa,MAa1E1J,EAASgJ,IACf,OACI,eAAC3B,EAAA,EAAD,CAAOG,UAAWxH,EAAOuB,KAAM+F,UAAW,EAA1C,UACI,cAACC,EAAA,EAAD,CAAKtF,MAAO,CAAEyF,oBAAqB,MAAOC,qBAAsB,OAASF,WAAW,SAApF,SA5CY,SAAC1H,GACjB,OAAQA,GACJ,IAAK,UAAW,MAAO,UACvB,IAAK,SAAU,MAAO,SACtB,IAAK,UAAW,MAAO,QACvB,IAAK,SAAU,MAAO,SACtB,IAAK,QAAS,MAAO,QACrB,IAAK,UAAW,MAAO,UACvB,IAAK,YAAa,MAAO,YACzB,IAAK,QAAS,MAAO,QACrB,IAAK,aAAc,MAAO,cAC1B,IAAK,aAAc,MAAO,cAC1B,IAAK,cAAe,MAAO,eAC3B,IAAK,cAAe,MAAO,gBAC3B,IAAK,YAAa,MAAO,YACzB,IAAK,qBAAsB,MAAO,eA6B4D8I,CAAY/I,KAC1G,cAACyH,EAAA,EAAD,CAAKtE,SAAS,OAAOhB,MAAO,CAAE8D,WAAY,QAASpI,MAAO,UAAWoL,uBAAwB,MAAOD,wBAAyB,OAA7H,SACkB,eAAbhJ,GAA+D,gBAAbA,EAAtBoJ,EAAcnJ,GAAwE,uBAAbD,EAdvF,SAAC6J,GACxB,GAAW,IAAPA,EACA,MAAO,KAEX,IACIC,EAAWrJ,OADC,IAALoJ,GAEX,OAAOC,EAAS,GAAKA,EAAS,GAAK,IAQ+GC,CAAmB9J,GAAQA,EAAK8H,uB,mBCpC3KiC,GAhBWxI,YAAW,CACjCC,KAAM,CACFwI,cAAe,OACf7F,QAAS,MACT8F,aAAc,MACd,UAAW,CACPjE,WAAY,YAGpB6C,QAAS,CACL7C,WAAY,UACZ9C,SAAU,OACVwE,WAAY,U,UCeLwC,GA1BU,SAACvM,GAEtB,OACI,eAAC8F,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMK,QAAQ,SAASC,WAAW,UAAUkG,QAAS,EAA/E,UACI,cAAC1G,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACuG,GAAA,EAAD,CAAU5G,OAAQ,SAEtB,cAACC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACuG,GAAA,EAAD,CAAU5G,OAAQ,SAEtB,cAACC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACuG,GAAA,EAAD,CAAU5G,OAAQ,SAEtB,cAACC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACuG,GAAA,EAAD,CAAU5G,OAAQ,SAEtB,cAACC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACuG,GAAA,EAAD,CAAU5G,OAAQ,SAEtB,cAACC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACuG,GAAA,EAAD,CAAU5G,OAAQ,cC2EnB6G,GAtFM,SAAC1M,GAAW,IAAD,EACF6E,mBAAS,IADP,mBACrB8H,EADqB,KACdC,EADc,OAEQ/H,oBAAS,GAFjB,mBAErBgI,EAFqB,KAETC,EAFS,KAItBpL,EAAgB,uCAAG,4BAAAjB,EAAA,sEACJ4E,EAAM3D,iBAAiBqL,mBAAmB/M,EAAMO,UAAWP,EAAMQ,UAD7D,OACjBwM,EADiB,OAErBJ,EAASI,GAFY,2CAAH,qDAKtBjE,qBAAU,WACNrH,MACD,IAEH,IAAMuL,EAAab,KACnB,OACI,eAACvC,EAAA,EAAD,CAAKtF,MAAO,CAAE2C,WAAY,SAA1B,UACI,qBAAI3C,MAAO,CAAE6C,cAAe,OAA5B,kCAEI,cAAC4D,EAAA,EAAD,CAASC,MAAM,cAAc3D,QAAS,CAAE4D,QAAS+B,EAAW/B,SAA5D,SACI,cAAChD,EAAA,EAAD,CAAYgF,UAAWC,IAAMC,GAAG,WAAWnF,QAAS,SAAC/C,GAAQA,EAAEC,iBAAkBkI,OAAOC,KAAK,6BAA7F,SACI,cAAC,KAAD,CAAiB/H,SAAS,QAAQuE,UAAWmD,EAAWpJ,cAIpE,cAACgG,EAAA,EAAD,CAAKlF,MAAM,OAAX,SACc,IAATgI,EACG,eAAC7G,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMK,QAAQ,SAASC,WAAW,UAA5D,UACI,cAACR,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAAC,EAAD,CAAgB9D,SAAS,KAAKC,KAAMsK,EAAMY,SAASC,YAEvD,cAAC1H,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAAC,EAAD,CAAgB9D,SAAS,QAAQC,KAAMsK,EAAMY,SAASE,UAE1D,cAAC3H,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAAC,EAAD,CAAgB9D,SAAS,eAAeC,KAAMsK,EAAMY,SAASE,MAAQd,EAAMY,SAASG,gBAExF,cAAC5H,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAAC,EAAD,CAAgB9D,SAAS,OAAOC,KAAMsK,EAAMY,SAASI,SAEzD,cAAC7H,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAAC,EAAD,CAAgB9D,SAAS,gBAAgBC,KAAMsK,EAAMY,SAASI,KAAOhB,EAAMY,SAASG,YAAc,QAEtG,cAAC5H,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAAC8B,EAAA,EAAD,CAAQzD,MAAO,CAAEI,MAAO,SAAWsD,QAAS,WAAQ6E,GAAeD,IAAnE,SACKA,EAAa,eAAChD,EAAA,EAAD,0BAAkB,cAAC,IAAD,CAAgBtF,MAAO,CAAE8H,cAAe,eAAuB,eAACxC,EAAA,EAAD,0BAAkB,cAAC,IAAD,CAAgBtF,MAAO,CAAE8H,cAAe,mBAGjK,cAACxC,EAAA,EAAD,CAAK+D,QAASf,EAAa,OAAS,OAAQlI,MAAM,OAAlD,SACI,eAACmB,EAAA,EAAD,CAAMC,WAAS,EAAf,UACI,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAAC,EAAD,CAAe9D,SAAS,UAAUC,KAAMsK,EAAMY,SAASG,gBAE3D,cAAC5H,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAAC,EAAD,CAAe9D,SAAS,SAASC,KAAMsK,EAAMY,SAASM,WAE1D,cAAC/H,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAAC,EAAD,CAAe9D,SAAS,UAAUC,KAAMsK,EAAMY,SAASO,YAE3D,cAAChI,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAAC,EAAD,CAAe9D,SAAS,SAASC,KAAMsK,EAAMY,SAASQ,WAE1D,cAACjI,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAAC,EAAD,CAAe9D,SAAS,QAAQC,KAAMsK,EAAMY,SAASS,UAEzD,cAAClI,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAAC,EAAD,CAAe9D,SAAS,UAAUC,KAAMsK,EAAMY,SAASU,YAE3D,cAACnI,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAAC,EAAD,CAAe9D,SAAS,YAAYC,KAAMsK,EAAMY,SAASW,cAE7D,cAACpI,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAAC,EAAD,CAAe9D,SAAS,QAAQC,KAAMsK,EAAMY,SAASY,UAEzD,cAACrI,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAAC,EAAD,CAAe9D,SAAS,aAAaC,KAAMsK,EAAMY,SAASa,uBAM1E,cAAC,GAAD,UChDLC,GAzCQ,SAACrO,GAEpB,OACI,eAAC8F,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMK,QAAQ,SAASC,WAAW,UAAUkG,QAAS,EAAGjI,MAAO,CAAEgC,OAAQ,GAAnG,UACI,cAACT,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAImE,GAAI,EAAvB,SACI,cAACoC,GAAA,EAAD,CAAU5G,OAAQ,SAEtB,cAACC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGmE,GAAI,EAAtB,SACI,cAACoC,GAAA,EAAD,CAAU5G,OAAQ,SAEtB,cAACC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGmE,GAAI,EAAtB,SACI,cAACoC,GAAA,EAAD,CAAU5G,OAAQ,SAEtB,cAACC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGmE,GAAI,EAAtB,SACI,cAACoC,GAAA,EAAD,CAAU5G,OAAQ,SAEtB,cAACC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGmE,GAAI,EAAtB,SACI,cAACoC,GAAA,EAAD,CAAU5G,OAAQ,SAEtB,cAACC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGmE,GAAI,EAAtB,SACI,cAACoC,GAAA,EAAD,CAAU5G,OAAQ,SAEtB,cAACC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGmE,GAAI,EAAtB,SACI,cAACoC,GAAA,EAAD,CAAU5G,OAAQ,SAEtB,cAACC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGmE,GAAI,EAAtB,SACI,cAACoC,GAAA,EAAD,CAAU5G,OAAQ,SAEtB,cAACC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGmE,GAAI,EAAtB,SACI,cAACoC,GAAA,EAAD,CAAU5G,OAAQ,SAEtB,cAACC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGmE,GAAI,EAAtB,SACI,cAACoC,GAAA,EAAD,CAAU5G,OAAQ,SAEtB,cAACC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGmE,GAAI,EAAtB,SACI,cAACoC,GAAA,EAAD,CAAU5G,OAAQ,aC4GnByI,GA1II,SAACtO,GAAW,IAAD,EACA6E,mBAAS,IADT,mBACnB8H,EADmB,KACZC,EADY,OAEY/H,mBAAS,OAFrB,mBAEnB0J,EAFmB,KAENC,EAFM,OAGgB3J,mBAAS,MAHzB,mBAGnB4J,EAHmB,KAGJC,EAHI,KAKpB/M,EAAc,uCAAG,4BAAAlB,EAAA,sEACF4E,EAAM1D,eAAeoL,mBAAmB/M,EAAMO,UAAWP,EAAMQ,UAD7D,OACfwM,EADe,OAEnBJ,EAASI,GAFU,2CAAH,qDAkBd2B,EAAiB,SAAClM,GACpB,MAAa,QAATA,EACO,YAEE,WAATA,EACO,UAEE,WAATA,EACO,UAEE,YAATA,EACO,WAEE,YAATA,EACO,WAEE,mBAATA,EACO,kBAEE,oBAATA,EACO,mBAEE,oBAATA,EACO,mBAEE,gBAATA,EACO,eAEE,iBAATA,EACO,gBAEE,iBAATA,EACO,qBADX,GAcJsG,qBAAU,WACNpH,MACD,IAEHoH,qBAAU,YA9De,WACrB,IAAI6F,EAAQ,GACZxF,QAAQC,IAAIsD,EAAMkC,QACdlC,EAAMkC,QACNC,OAAOC,KAAKpC,EAAMkC,QAAQG,SAAQ,SAAAvM,GAC1BkK,EAAMkC,OAAOpM,IACbmM,EAAMnJ,KAAKhD,MAIvBiM,EAAiBE,GAqDjBK,KACD,CAACtC,IAEJ,IAAMuC,EAAevL,IACrB,OACI,gCACI,qBAAIY,MAAO,CAAEtE,MAAO,SAApB,+CAEI,cAACkH,EAAA,EAAD,CAAQE,UAAW,CACfC,QAAS,CAAEC,MAAO2H,EAAarL,MAC/B2D,aAAc,CAAEC,SAAU,SAAUC,WAAY,QAChDC,gBAAiB,CAAEF,SAAU,MAAOC,WAAY,QAChDE,mBAAoB,MAEpBuH,aAAa,MACbC,QAAQ,WACR7K,MAAO,CAAEI,MAAO,QAASkB,OAAQ,OAAQwJ,UAAW,OAAQ9J,SAAU,OAAQwE,WAAY,QAC1F/C,SAAU,SAAC9B,GAAD,OAAOsJ,EAAetJ,EAAE+B,OAAO/E,QAT7C,SAtBO,WACf,GAAIuM,EAIA,OAHYA,EAAchF,KAAI,SAAChH,GAC3B,OAAO,cAACsF,EAAA,EAAD,CAAqB7F,MAAOO,EAA5B,SAAmCkM,EAAelM,IAAnCA,MA6BjB6M,QAIK,KAAV3C,EACI,eAAC7G,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAA1B,UACI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAImE,GAAI,EAAvB,SACI,cAAC,EAAD,CAAwDjI,SAAS,KAAKC,KAAMsK,EAAMkC,OAAON,GAAaf,SAAjFb,EAAMkC,OAAON,GAAaf,WAEnD,cAAC1H,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGmE,GAAI,EAAtB,SACI,cAAC,EAAD,CAAsDjI,SAAS,cAAcC,KAAMsK,EAAMkC,OAAON,GAAad,OAAxFd,EAAMkC,OAAON,GAAad,SAEnD,cAAC3H,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGmE,GAAI,EAAtB,SACI,cAAC,EAAD,CAA6DjI,SAAS,eAAeC,KAAMsK,EAAMkC,OAAON,GAAagB,cAAhG5C,EAAMkC,OAAON,GAAagB,gBAEnD,cAACzJ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGmE,GAAI,EAAtB,SACI,cAAC,EAAD,CAA0DjI,SAAU,aAAcC,KAAMsK,EAAMkC,OAAON,GAAaiB,YAA9F7C,EAAMkC,OAAON,GAAaiB,cAElD,cAAC1J,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGmE,GAAI,EAAtB,SACI,cAAC,EAAD,CAA2DjI,SAAU,cAAeC,KAAMsK,EAAMkC,OAAON,GAAakB,aAAhG9C,EAAMkC,OAAON,GAAakB,eAElD,cAAC3J,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGmE,GAAI,EAAtB,SACI,cAAC,EAAD,CAAyDjI,SAAU,YAAaC,KAAMsK,EAAMkC,OAAON,GAAamB,WAA5F/C,EAAMkC,OAAON,GAAamB,aAElD,cAAC5J,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGmE,GAAI,EAAtB,SACI,cAAC,EAAD,CAAkEjI,SAAU,qBAAsBC,KAAMsK,EAAMkC,OAAON,GAAaoB,oBAA9GhD,EAAMkC,OAAON,GAAaoB,sBAElD,cAAC7J,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGmE,GAAI,EAAtB,SACI,cAAC,EAAD,CAA0DjI,SAAU,aAAcC,KAAMsK,EAAMkC,OAAON,GAAaH,YAA9FzB,EAAMkC,OAAON,GAAaH,cAElD,cAACtI,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGmE,GAAI,EAAtB,SACI,cAAC,EAAD,CAA2DjI,SAAU,cAAeC,KAAMsK,EAAMkC,OAAON,GAAaqB,aAAhGjD,EAAMkC,OAAON,GAAaqB,eAElD,cAAC9J,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGmE,GAAI,EAAtB,SACI,cAAC,EAAD,CAAsDjI,SAAU,SAAUC,KAAMsK,EAAMkC,OAAON,GAAaV,QAAtFlB,EAAMkC,OAAON,GAAaV,UAElD,cAAC/H,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGmE,GAAI,EAAtB,SACI,cAAC,EAAD,CAAqDjI,SAAU,QAASC,KAAMsK,EAAMkC,OAAON,GAAaJ,OAApFxB,EAAMkC,OAAON,GAAaJ,YAItD,cAAC,GAAD,Q,UC9EL0B,GA5DGjM,aAAW,SAACI,GAAD,MAAY,CACrC8L,MAAO,CACHjK,OAAQ,OACRlB,MAAO,OACP4B,OAAQ,EACR8I,UAAW,SACXhH,WAAY,yEACZpI,MAAO,QACPgK,qBAAsB,EACtBmB,wBAAyB,EACzBwC,QAAS,OACTmC,cAAe,SACfC,eAAgB,SAChBzK,SAAU,IAEd0K,MAAO,CACHpK,OAAQ,OAERlB,MAAO,OACP4B,OAAQ,EACR8I,UAAW,SACXhH,WAAY,8EACZpI,MAAO,QACPgK,qBAAsB,EACtBmB,wBAAyB,EACzBwC,QAAS,OACTmC,cAAe,SACfC,eAAgB,SAChBzK,SAAU,IAEd2K,OAAQ,CACJrK,OAAQ,OACRlB,MAAO,OACP4B,OAAQ,EACR8I,UAAW,SACXhH,WAAY,+EACZpI,MAAO,QACPgK,qBAAsB,EACtBmB,wBAAyB,EACzBwC,QAAS,OACTmC,cAAe,SACfC,eAAgB,SAChBzK,SAAU,IAEd4K,MAAO,CACHtK,OAAQ,OACRlB,MAAO,OACP4B,OAAQ,EACR8I,UAAW,SACXhH,WAAY,8EACZpI,MAAO,QACPgK,qBAAsB,EACtBmB,wBAAyB,EACzBwC,QAAS,OACTmC,cAAe,SACfC,eAAgB,SAChBzK,SAAU,QC1DH,OAA0B,uCCA1B,OAA0B,0CCqB1B6K,GAjBCxM,YAAW,CACvByM,SAAU,CACNC,gBAAgB,OAAD,OAASC,GAAT,KACfC,eAAgB,QAChBC,oBAAqB,MACrBlK,OAAQ,MACR5B,MAAO,0BAEX+L,QAAS,CACLJ,gBAAgB,OAAD,OAASK,GAAT,KACfH,eAAgB,QAChBC,oBAAqB,MACrBlK,OAAQ,MACR5B,MAAO,4BCFAiM,GAbUhN,YAAW,CAChCC,KAAM,CACFc,MAAO,yBACP4B,OAAQ,EACRhB,SAAU,GACVzB,gBAAiB,kBACjB7D,MAAO,QACP,UAAW,CACP6D,gBAAiB,sBCkJd+M,GApJU,SAAC7Q,GAAW,IAAD,EACN6E,mBAAS,MADH,mBACzBiM,EADyB,KAClBC,EADkB,OAENlM,mBAAS,IAFH,mBAEzBmM,EAFyB,KAElBC,EAFkB,KAG1BjN,EAAQC,cACRC,EAAaC,YAAcH,EAAMI,YAAYC,GAAG,OAEhD6M,EAAiBrB,KACjBsB,EAAiB,SAACtB,GACpB,OAAkB,IAAdA,EACOqB,EAAejB,MAER,IAAdJ,EACOqB,EAAehB,OAER,IAAdL,EACOqB,EAAef,MAEnBe,EAAepB,OAG1B/G,qBAAU,WACNgI,EAAS/Q,EAAMoR,aAChB,IAEH,IAAMC,EAAcT,KACpB7H,qBAAU,WACN,GAAI+H,EAAO,CACP,IAAIE,EACA,cAACrH,EAAA,EAAD,CAAOzD,GAAI,GAAI4D,UAAWuH,EAAYxN,KAAtC,SACI,eAACiC,EAAA,EAAD,CAAMC,WAAS,EAACM,QAAQ,aAAaC,WAAW,UAAUN,UAAU,MAApE,UACI,cAACF,EAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,EAAGG,QAAQ,aAApC,SACI,cAACsD,EAAA,EAAD,CAAOG,UAAWqH,EAAeL,EAAMQ,UAAUzB,WAAYjG,UAAW,EAAxE,SACI,6BAAKkH,EAAMQ,UAAUzB,UAAYxK,EAAM3C,eAAeoO,EAAMQ,UAAUzB,WAAa,YAG3F,eAAC/J,EAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACK,WAAW,SAASD,QAAQ,SAASH,GAAI,GAA9D,UACI,cAACJ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SAEQhC,EACI,oBAAIK,MAAO,CAAE4B,aAAc,OAA3B,SAAqCd,EAAM7C,SAASsO,EAAMrO,QACxD,oBAAI8B,MAAO,CAAE4B,aAAc,OAA3B,SAAqCd,EAAM7C,SAASsO,EAAMrO,UAGxE,eAACqD,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,UACKb,EAAMrC,WAAW8N,EAAMS,iBAAiB,uBAAM,uBAC/C,cAACC,GAAA,EAAD,CAASjN,MAAO,CAAE8D,WAAY,wBAAyB1D,MAAO,yBAA0BkB,OAAQ,SAAW4L,UAAQ,OAGnHvN,EACI,eAAC4B,EAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,GAAIG,QAAQ,eAAeC,WAAW,WAA/D,UACI,eAACR,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAG3B,MAAO,CAAE2C,WAAY,QAAvC,UACI,sCADJ,IACiB,uBACb,6BAAK4J,EAAMY,YAAYjE,WAE3B,cAAC+D,GAAA,EAAD,CAASG,YAAY,WAAWpN,MAAO,CAAE8D,WAAY,wBAAyB1D,MAAO,SAAW8M,UAAQ,IACxG,eAAC3L,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,UACI,uCADJ,IACkB,uBACd,6BACK4K,EAAMY,YAAY7D,YAG3B,cAAC2D,GAAA,EAAD,CAASG,YAAY,WAAWpN,MAAO,CAAE8D,WAAY,wBAAyB1D,MAAO,QAASkB,OAAQ,QAAU4L,UAAQ,IACxH,eAAC3L,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAG3B,MAAO,CAAEqN,SAAU,eAArC,UACI,4CADJ,IACuB,uBACnB,6BACKd,EAAMY,YAAYlC,WAAWrF,sBAGtC,cAACqH,GAAA,EAAD,CAASG,YAAY,WAAWpN,MAAO,CAAE8D,WAAY,wBAAyB1D,MAAO,SAAW8M,UAAQ,IACxG,eAAC3L,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAG3B,MAAO,CAAEqN,SAAU,eAArC,UACI,6CADJ,IACwB,uBACpB,6BACKd,EAAMY,YAAYjC,YAAYtF,yBAK3C,eAACrE,EAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,GAAIG,QAAQ,eAAeC,WAAW,WAAWN,UAAU,MAApF,UACI,eAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAG3B,MAAO,CAAE2C,WAAY,QAAvC,UACI,sCADJ,IACiB,uBACb,6BAAK4J,EAAMY,YAAYjE,WAE3B,cAAC+D,GAAA,EAAD,CAASG,YAAY,WAAWpN,MAAO,CAAE8D,WAAY,wBAAyB1D,MAAO,SAAW8M,UAAQ,IACxG,eAAC3L,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,UACI,uCADJ,IACkB,uBACd,6BACK4K,EAAMY,YAAY7D,YAG3B,cAAC2D,GAAA,EAAD,CAASjN,MAAO,CAAE8D,WAAY,wBAAyB1D,MAAO,yBAA0BkB,OAAQ,SAAW4L,UAAQ,IAAG,uBACtH,eAAC3L,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAG3B,MAAO,CAAEqN,SAAU,eAArC,UACI,4CADJ,IACuB,uBACnB,6BACKd,EAAMY,YAAYlC,gBAG3B,cAACgC,GAAA,EAAD,CAASG,YAAY,WAAWpN,MAAO,CAAE8D,WAAY,wBAAyB1D,MAAO,QAASH,UAAW,SAAWiN,UAAQ,IAC5H,eAAC3L,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAG3B,MAAO,CAAEqN,SAAU,eAArC,UACI,6CADJ,IACwB,uBACpB,6BACKd,EAAMY,YAAYjC,4BAUvDwB,EAASD,MAEd,CAACF,EAAO5M,IAEX,IAAM2N,EAAezB,KAkBrB,OACI,8BAEiB,MAATU,EACI,cAAC5I,EAAA,EAAD,CAAY3D,MAAO,CAAEI,MAAO,0BAA4BuI,UAAWC,IAAMC,GAAE,iBAAY0D,EAAM/O,QAAlB,YAA6B/B,EAAM8R,KAA9G,SACI,cAACnI,EAAA,EAAD,CAAOG,UAtBP,SAACrH,GACjB,OAAQA,GACJ,IAAK,YACL,IAAK,YACL,IAAK,aACL,IAAK,aAAc,OAAOoP,EAAaxB,SACvC,IAAK,uBACL,IAAK,wBACL,IAAK,uBAAwB,OAAOwB,EAAanB,QACjD,IAAK,6BACL,IAAK,8BACL,IAAK,8BACL,IAAK,uBACL,QAAS,OAAOmB,EAAaxB,UASC0B,CAAYjB,EAAMrO,MAApC,SACKuO,MAIT,MC3ILgB,GATYpO,YAAW,CAClCqO,IAAK,CACD5J,WAAY,+EAEhB6J,MAAO,CACH7J,WAAY,kFCaL8J,GAfY,SAACnS,GAAW,IAAD,EACV6E,mBAAS7E,EAAM2N,MADL,mBAC3BA,EAD2B,KAG5ByE,GAH4B,KAGhBJ,MAClB,OACI,eAACrI,EAAA,EAAD,CAAOG,UAAW6D,EAAO,EAAIyE,EAAUH,IAAMG,EAAUF,MAAvD,UACI,cAACrI,EAAA,EAAD,CAAKtF,MAAO,CAAEtE,MAAO,QAAS+J,oBAAqB,MAAOC,qBAAsB,OAASF,WAAW,SAApG,kBACA,cAACF,EAAA,EAAD,CAAKtE,SAAS,OAAOhB,MAAO,CAAE8D,WAAY,SAA1C,SACKsF,IAEL,cAAC9D,EAAA,EAAD,CAAKtF,MAAO,CAAEtE,MAAO,QAASsF,SAAU,OAAQ6F,wBAAyB,MAAOC,uBAAwB,OAAStB,WAAW,SAA5H,sBCWGsI,GAtBY,SAACrS,GACxB,IAAMgE,EAAQC,cACRC,EAAaC,YAAcH,EAAMI,YAAYC,GAAG,OAEtD,OACI,eAACyB,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMK,QAAQ,SAASC,WAAW,UAAUkG,QAAS,EAAGjI,MAAO,CAAEI,MAAOT,EAAa,MAAQ,OAAvH,UACI,cAAC4B,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACuG,GAAA,EAAD,CAAU5G,OAAQ,SAEtB,cAACC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAImE,GAAI,EAAvB,SACI,cAACoC,GAAA,EAAD,CAAU5G,OAAQ,SAEtB,cAACC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGmE,GAAI,EAAtB,SACI,cAACoC,GAAA,EAAD,CAAU5G,OAAQ,SAEtB,cAACC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGmE,GAAI,EAAtB,SACI,cAACoC,GAAA,EAAD,CAAU5G,OAAQ,aCoCnByM,GAlDQ,SAACtS,GAAW,IAAD,EACA6E,mBAAS7E,EAAMuS,SADf,mBACvBA,EADuB,aAEU1N,mBAAS,OAFnB,mBAEvB2N,EAFuB,KAETC,EAFS,KAuB9B,OAJA1J,qBAAU,YAfe,WAAO,IACvB8E,EAA+B,EAAvB0B,EAA0B,EAAZ5B,EAAe,EAC1C4E,EAAQvD,SAAQ,SAAA8B,GACZjD,GAAUiD,EAAMY,YAAY7D,OAC5B0B,GAAgBuB,EAAMY,YAAYjE,MACA,IAA9BqD,EAAMQ,UAAUzB,WAChBlC,OAGR,IAAIH,EAAU+B,EAAe1B,EAC7B0B,GAA8BgD,EAAQxP,OAEtC0P,EADU,CAAEjF,UAAS+B,eAAc5B,SAKnC+E,KACD,CAACH,IAGA,8BAEyB,OAAjBC,EACI,eAAC1M,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMK,QAAQ,SAASC,WAAW,SAA5D,UACI,cAACR,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAI3B,MAAO,CAAEI,MAAO,SAAnC,SACI,oBAAIJ,MAAO,CAAEtE,MAAO,SAApB,SACwB,IAAnBsS,EAAQxP,OAAewP,EAAQxP,OAAS,SAAWwP,EAAQxP,OAAS,wBAG7E,cAAC+C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAImE,GAAI,EAAvB,SACI,cAAC,GAAD,CAAoBsD,KAAM6E,EAAa7E,SAE3C,cAAC7H,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGmE,GAAI,EAAtB,SACI,cAAC,EAAD,CAAgBjI,SAAS,KAAKC,KAAMmQ,EAAahF,YAErD,cAAC1H,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGmE,GAAI,EAAtB,SACI,cAAC,EAAD,CAAgBjI,SAAS,eAAeC,KAAMmQ,EAAajD,oBAInE,cAAC,GAAD,OC4BLoD,GAvEK,SAAC3S,GAAW,IAAD,EACG6E,mBAAS,IADZ,mBACpB+N,EADoB,KACXC,EADW,OAEKhO,mBAAS,IAFd,mBAEpBiO,EAFoB,KAEVC,EAFU,KAIrBnR,EAAU,uCAAG,4BAAAnB,EAAA,sEACE4E,EAAMzD,WAAWmL,mBAAmB/M,EAAMO,UAAWP,EAAMQ,UAD7D,OACXc,EADW,OAEf8H,QAAQC,IAAI/H,GACZyR,EAAY,CAAEjB,IAAKxQ,EAAKwQ,IAAKvR,SAAUe,EAAKf,SAAUyS,QAAS1R,EAAK0R,QAAU1R,EAAK0R,QAAU,OAC7FH,EAAWI,EAAgB3R,EAAKsR,UAJjB,2CAAH,qDAOVK,EAAkB,SAACL,GACrB,IAAIM,EAAW,EACXC,EAAW,GACXC,EAAiB,GAkBrB,OAjBAR,EAAQ5D,SAAQ,SAAC8B,EAAOuC,GACN,IAAVA,GAIKH,EAAWpC,EAAMS,gBAAkB,MAHxC2B,EAAWpC,EAAMS,gBACjB6B,EAAe3N,KAAKqL,KAOpBoC,EAAWpC,EAAMS,gBACjB4B,EAAS1N,KAAK2N,IACdA,EAAiB,IACF3N,KAAKqL,OAG5BqC,EAAS1N,KAAK2N,GACND,GAOZ,OAJApK,qBAAU,WACNnH,MACD,IAGC,gCACI,iDAEuB,IAAnBgR,EAAQ7P,OACJ6P,EAAQnJ,KAAI,SAAC8I,EAASc,GAClB,IAAIT,EAAUL,EAAQ9I,KAAI,SAACqH,GACvB,OAAO,cAAC,GAAD,CAAsCgB,IAAKgB,EAAShB,IAAKV,UAAWN,GAA7CA,EAAM/O,YAGxC,OACI,cAAC4H,EAAA,EAAD,CAAOpF,MAAO,CAAE8D,WAAY,WAA5B,SACI,eAACvC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMK,QAAQ,SAASC,WAAW,SAA5D,UACI,cAACR,EAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACD,UAAU,MAAMK,QAAQ,SAASC,WAAW,SAASJ,GAAI,GAA9E,SACI,cAAC,GAAD,CAAwCqM,QAASA,GAA5B,UAAYc,KAErC,cAACvN,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACK0M,YAOrB,cAAC9M,EAAA,EAAD,CAAMC,WAAS,EAACO,WAAW,SAASD,QAAQ,SAA5C,SACI,cAACoG,GAAA,EAAD,CAAU2C,QAAQ,OAAOvJ,OAAQ,IAAMlB,MAAM,c,SC5DtD2O,GATE1P,aAAW,SAACI,GAAD,MAAY,CACpCH,KAAK,gBACAG,EAAMI,YAAYC,GAAG,MAAQ,CAC1BkP,SAAU,SACVC,IAAK,QC0CFC,GAvCI,SAACzT,GAAW,IAAD,EACM6E,mBAAS7E,EAAM8Q,MAAM4C,OAAOnT,UADlC,mBACnBA,EADmB,aAEMsE,mBAAS7E,EAAM8Q,MAAM4C,OAAOlT,WAFlC,mBAEnBA,EAFmB,KAGpBwD,GAHoB,KAGZC,eACRC,EAAaC,YAAcH,EAAMI,YAAYC,GAAG,OAEhDsP,EAAiBL,KACvB,OACI,cAAC1N,EAAA,EAAD,UACI,eAACE,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMK,QAAQ,aAAaC,WAAW,aAAhE,UACI,cAACR,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAAC,EAAD,MAEJ,cAACJ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACKhC,EACG,+BACKmB,EAAMpD,sBAAsBzB,GADjC,IAC6CuM,mBAAmBxM,GAAU2J,iBAG1E,+BACI,sBAAM3F,MAAO,CAAE8H,cAAe,QAA9B,SAAyChH,EAAMpD,sBAAsBzB,KADzE,IAC4FuM,mBAAmBxM,GAAU2J,mBAGjI,cAACpE,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAImE,GAAI,EAAGP,UAAW6J,EAAe9P,KAApD,SACI,cAAC,GAAD,CAActD,SAAUA,EAAUC,SAAUA,MAEhD,eAACsF,EAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,GAAImE,GAAI,EAAGhE,QAAQ,SAA5C,UACI,cAACP,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAAC,GAAD,CAAY3F,SAAUA,EAAUC,SAAUA,MAE9C,cAACsF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAAC,GAAD,CAAa3F,SAAUA,EAAUC,SAAUA,e,mBCpBpDqP,GAlBGjM,YAAW,CACzBqM,MAAO,CACHhQ,MAAO,QACPoI,WAAY,kFACZ0B,WAAY,QAEhBmG,OAAQ,CACJjQ,MAAO,QACPoI,WAAY,0EACZ0B,WAAY,QAEhBoG,MAAO,CACHlQ,MAAO,QACPoI,WAAY,8EACZ0B,WAAY,UCgKL6J,GA1KG,SAAC5T,GAAW,IAAD,EACS6E,mBAAS7E,EAAM6T,WADxB,mBAClBA,EADkB,aAEahP,mBAAS7E,EAAM8T,cAF5B,mBAElBA,EAFkB,aAGOjP,oBAAS,IAHhB,mBAGlBkP,EAHkB,KAGRC,EAHQ,OAIHnP,mBAAS7E,EAAM8R,KAJZ,mBAIlBA,EAJkB,aAKDjN,mBAAS7E,EAAMyC,OALd,mBAKlBA,EALkB,KAOnBwR,GAPmB,KAOP,SAACC,GAEf,IADA,IAAIC,EAAkB,GACblL,EAAI,EAAGA,EAAI4K,EAAUK,GAASE,QAAQrR,OAAQkG,IAC/CA,GAAK4K,EAAUK,GAASE,QAAQrR,OAAS,EACzCoR,EAAkBA,EAAkBN,EAAUK,GAASE,QAAQnL,GAAG1I,SAAW,KAG7E4T,GAAoCN,EAAUK,GAASE,QAAQnL,GAAG1I,SAG1E,OAAO4T,IAGLE,EAAoB,SAACD,GACvB,IAAIE,GAAO,EAMX,GALAF,EAAQpF,SAAQ,SAAAuF,GACRA,EAAOzC,KAAOA,IACdwC,GAAO,MAGXA,EACA,MAAO,WAITE,EAAkB3E,KACxB,OACI,eAAClG,EAAA,EAAD,CAAOpF,MAAO,CAAE8D,WAAY,UAAWlC,aAAc,QAArD,UACI,cAAC6B,EAAA,EAAD,CAAQC,QAAS,kBAAM+L,GAAaD,IAAWU,WAAS,EAAxD,SACKV,EAAW,eAAClK,EAAA,EAAD,yBAAgB,cAAC,IAAD,CAAgBtF,MAAO,CAAE8H,cAAe,eAAuB,eAACxC,EAAA,EAAD,yBAAgB,cAAC,IAAD,CAAgBtF,MAAO,CAAE8H,cAAe,iBAEvJ,cAACxC,EAAA,EAAD,CAAK+D,QAASmG,EAAW,OAAS,OAAlC,SACI,eAACjO,EAAA,EAAD,CAAMC,WAAS,EAAf,UAEgB,aAARtD,EACI,cAACqD,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAImE,GAAI,EAAvB,SACI,cAACV,EAAA,EAAD,CAAOC,UAAW,EAAGrF,MAAO,CAAE4B,aAAc,QAA5C,SACI,cAACL,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMM,WAAW,UAAUD,QAAQ,aAA7D,SACI,cAACP,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,eAACJ,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASM,WAAW,SAASD,QAAQ,SAAS9B,MAAO,CAAEtE,MAAO,QAASoI,WAAY,WAA7G,UACI,cAACvC,EAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,GAAII,WAAW,SAASD,QAAQ,SAAS9B,MAAO,CAAE8D,WAAY,UAAW4B,qBAAsB,EAAGD,oBAAqB,GAAhJ,SACI,oBAAIzF,MAAO,CAAEgC,OAAQ,GAArB,8BAIJ,eAACT,EAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,GAAIF,UAAU,MAAMM,WAAW,SAASD,QAAQ,aAAa9B,MAAO,CAAE8D,WAAY,UAAW2B,oBAAqB,MAAOC,qBAAsB,OAAxK,UACI,cAACnE,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACyD,EAAA,EAAD,CAAOG,UAAW0K,EAAgBvE,MAAlC,iBAIJ,cAACnK,EAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,GAAIG,QAAQ,aAAaC,WAAW,SAAS/B,MAAO,CAAEsB,OAAQ,QAAvF,SACI,cAACgE,EAAA,EAAD,CAAKwF,UAAU,OAAOqF,YAAY,MAAMC,SAAS,MAAM1U,MAAOoU,EAAkBR,EAAU,GAAGO,SAA7F,SACKH,EAAU,OAGnB,cAACnO,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACK2N,EAAU,GAAGvC,UAAU7D,WAGhC,eAAC3H,EAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,GAAIF,UAAU,MAAMM,WAAW,SAASD,QAAQ,aAAa9B,MAAO,CAAE8D,WAAY,WAA3G,UACI,cAACvC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACyD,EAAA,EAAD,CAAOG,UAAW0K,EAAgBtE,OAAlC,iBAIJ,cAACpK,EAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,GAAIG,QAAQ,aAAaC,WAAW,SAAS/B,MAAO,CAAEsB,OAAQ,QAAvF,SACI,cAACgE,EAAA,EAAD,CAAKwF,UAAU,OAAOqF,YAAY,MAAMC,SAAS,MAAM1U,MAAOoU,EAAkBR,EAAU,GAAGO,SAA7F,SACKH,EAAU,OAGnB,cAACnO,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACK2N,EAAU,GAAGvC,UAAU7D,WAGhC,eAAC3H,EAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,GAAIF,UAAU,MAAMM,WAAW,SAASD,QAAQ,aAAa9B,MAAO,CAAE8D,WAAY,UAAWgD,uBAAwB,MAAOD,wBAAyB,OAA9K,UACI,cAACtF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACyD,EAAA,EAAD,CAAOG,UAAW0K,EAAgBrE,MAAlC,iBAIJ,cAACrK,EAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,GAAIG,QAAQ,aAAaC,WAAW,SAAS/B,MAAO,CAAEsB,OAAQ,QAAvF,SACI,cAACgE,EAAA,EAAD,CAAKwF,UAAU,OAAOqF,YAAY,MAAMC,SAAS,MAAM1U,MAAOoU,EAAkBR,EAAU,GAAGO,SAA7F,SACKH,EAAU,OAGnB,cAACnO,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACK2N,EAAU,GAAGvC,UAAU7D,sBAQlD,GAEV,cAAC3H,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAImE,GAAY,aAAR5H,EAAsB,EAAI,GAAjD,SACI,cAACkH,EAAA,EAAD,CAAOC,UAAW,EAAGrF,MAAO,CAAE4B,aAAc,QAA5C,SACI,cAACL,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMM,WAAW,UAAUD,QAAQ,aAA7D,SACI,cAACP,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,eAACJ,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASM,WAAW,SAASD,QAAQ,SAAS9B,MAAO,CAAEtE,MAAO,QAASoI,WAAY,WAA7G,UACI,cAACvC,EAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,GAAII,WAAW,SAASD,QAAQ,SAAS9B,MAAO,CAAE8D,WAAY,UAAW4B,qBAAsB,EAAGD,oBAAqB,GAAhJ,SACI,oBAAIzF,MAAO,CAAEgC,OAAQ,GAArB,gCAIJ,eAACT,EAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,GAAIF,UAAU,MAAMM,WAAW,SAASD,QAAQ,aAAa9B,MAAO,CAAE8D,WAAY,UAAW2B,oBAAqB,MAAOC,qBAAsB,OAAxK,UACI,cAACnE,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACyD,EAAA,EAAD,CAAOG,UAAW0K,EAAgBvE,MAAlC,iBAIJ,cAACnK,EAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,GAAIG,QAAQ,aAAaC,WAAW,SAAS/B,MAAO,CAAEsB,OAAQ,QAAvF,SACI,cAACgE,EAAA,EAAD,CAAKwF,UAAU,OAAOqF,YAAY,MAAMzU,MAAO6T,EAAY,GAAGhC,MAAQA,EAAM,UAAY,GAAxF,SACKgC,EAAY,GAAGvT,aAGxB,cAACuF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACK4N,EAAY,GAAGrG,WAGxB,eAAC3H,EAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,GAAIF,UAAU,MAAMM,WAAW,SAASD,QAAQ,aAAa9B,MAAO,CAAE8D,WAAY,WAA3G,UACI,cAACvC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACyD,EAAA,EAAD,CAAOG,UAAW0K,EAAgBtE,OAAlC,iBAIJ,cAACpK,EAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,GAAIG,QAAQ,aAAaC,WAAW,SAAS/B,MAAO,CAAEsB,OAAQ,QAAvF,SACI,cAACgE,EAAA,EAAD,CAAKwF,UAAU,OAAOqF,YAAY,MAAMzU,MAAO6T,EAAY,GAAGhC,MAAQA,EAAM,UAAY,GAAxF,SACKgC,EAAY,GAAGvT,aAGxB,cAACuF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACK4N,EAAY,GAAGrG,WAGxB,eAAC3H,EAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,GAAIF,UAAU,MAAMM,WAAW,SAASD,QAAQ,aAAa9B,MAAO,CAAE8D,WAAY,UAAWgD,uBAAwB,MAAOD,wBAAyB,OAA9K,UACI,cAACtF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACyD,EAAA,EAAD,CAAOG,UAAW0K,EAAgBrE,MAAlC,iBAIJ,cAACrK,EAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,GAAIG,QAAQ,aAAaC,WAAW,SAAS/B,MAAO,CAAEsB,OAAQ,QAAvF,SACI,cAACgE,EAAA,EAAD,CAAKwF,UAAU,OAAOqF,YAAY,MAAMzU,MAAO6T,EAAY,GAAGhC,MAAQA,EAAM,UAAY,GAAxF,SACKgC,EAAY,GAAGvT,aAGxB,cAACuF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACK4N,EAAY,GAAGrG,+B,wCCzGjDoC,GAvDGjM,aAAW,SAACI,GAAD,MAAY,CACrC8L,MAAO,CACHjK,OAAQ,OACRlB,MAAO,MACP4B,OAAQ,EACR8I,UAAW,SACXhH,WAAY,yEACZpI,MAAO,QACPgK,qBAAsB,EACtBmB,wBAAyB,EACzBwC,QAAS,OACTmC,cAAe,SACfC,eAAgB,UAEpBC,MAAO,CACHpK,OAAQ,OACRlB,MAAO,OACP4B,OAAQ,EACR8I,UAAW,SACXhH,WAAY,kFACZpI,MAAO,QACPgK,qBAAsB,EACtBmB,wBAAyB,EACzBwC,QAAS,OACTmC,cAAe,SACfC,eAAgB,UAEpBE,OAAQ,CACJrK,OAAQ,OACRlB,MAAO,OACP4B,OAAQ,EACR8I,UAAW,SACXhH,WAAY,0EACZpI,MAAO,QACPgK,qBAAsB,EACtBmB,wBAAyB,EACzBwC,QAAS,OACTmC,cAAe,SACfC,eAAgB,UAEpBG,MAAO,CACHtK,OAAQ,OACRlB,MAAO,OACP4B,OAAQ,EACR8I,UAAW,SACXhH,WAAY,8EACZpI,MAAO,QACPgK,qBAAsB,EACtBmB,wBAAyB,EACzBwC,QAAS,OACTmC,cAAe,SACfC,eAAgB,c,GCrDUlQ,EAAQ,IAAlC8U,G,GAAAA,WAAYC,G,GAAAA,UAkBLC,GAfSF,IAAW,iBAAO,CACtCG,KAAM,CACF1M,WAAY,UACZpI,MAAO,SAEXc,KAAM,CACFd,MAAO,QACP8J,WAAY,QAGhBlG,KAAM,CACFmR,aAAc,WAXEJ,CAapBC,I,GChB6B/U,EAAQ,IAAjC8U,G,GAAAA,WAAYK,G,GAAAA,SAWLC,GARQN,IAAW,iBAAO,CACrC/Q,KAAM,CACF,qBAAsB,CAClBC,gBAAiB,eAHN8Q,CAMnBK,ICUWE,GAhBQvR,YAAW,CAC9BwR,QAAS,CACL/M,WAAY,UACZlC,aAAc,QAElBkP,SAAU,CACNhN,WAAY,UACZlC,aAAc,OACd,QAAS,CACLmP,UACI,6EACJhJ,aAAc,UC8FXiJ,GApGE,SAACvV,GAAW,IAAD,EACA6E,mBAAS7E,EAAMwV,MADf,mBACjBA,EADiB,aAEU3Q,mBAAS7E,EAAMsR,YAFzB,mBAEjBA,EAFiB,aAGFzM,mBAAS7E,EAAM8R,MAHb,mBAGjBA,EAHiB,aAIgBjN,mBAAS,YAJzB,mBAIjB4Q,EAJiB,KAIHC,EAJG,OAKA7Q,mBAAS7E,EAAMyC,MALf,mBAKjBA,EALiB,KAOlByO,GAPkB,KAODrB,MA0BvB9G,qBAAU,YAZe,WACrB,IAAI4M,GAAY,EAChBH,EAAKxG,SAAQ,SAAAuF,GACLA,EAAOzC,MAAQA,IACf6D,GAAY,MAGhBA,GACAD,EAAgB,YAKpBE,KACD,IAEH,IAAMC,EAAYV,KAClB,OACI,cAACxL,EAAA,EAAD,CAAOG,UAAW+L,EAAUJ,GAAe7L,UAAW,GAAtD,SAEQ4L,EAAKzS,OAAS,EACV,eAAC+C,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMK,QAAQ,aAAaC,WAAW,UAAhE,UACI,cAACR,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAG4P,GAAI,EAAtB,SACI,cAACnM,EAAA,EAAD,CAAOG,UApCR,SAAC+F,GACpB,OAAkB,IAAdA,EACOqB,EAAejB,MAER,IAAdJ,EACOqB,EAAehB,OAER,IAAdL,EACOqB,EAAef,MAEnBe,EAAepB,MA0BgBqB,CAAeqE,EAAK,GAAGO,eAAgBnM,UAAW,EAApE,SACKvE,EAAM3C,eAAe8S,EAAK,GAAGO,mBAGtC,cAACjQ,EAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,GAAI4P,GAAI,GAAI9P,UAAU,SAASK,QAAQ,SAASC,WAAW,aAApF,SACI,cAAC0P,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,CAAO1R,MAAO,CAAEqN,SAAU,KAAOsE,aAAW,gBAA5C,UACI,cAACC,GAAA,EAAD,UACI,eAAC,GAAD,WACI,cAAC,GAAD,CAAiBC,MAAM,SAAS7R,MAAO,CAAEI,MAAO,WAChD,cAAC,GAAD,CAAiByR,MAAM,SAAvB,mBACA,cAAC,GAAD,CAAiBA,MAAM,SAAvB,oBACA,cAAC,GAAD,CAAiBA,MAAM,SAAvB,yBACA,cAAC,GAAD,CAAiBA,MAAM,SAAvB,0BACA,cAAC,GAAD,CAAiBA,MAAM,SAAS7R,MAAO,CAAE0F,qBAAsB,OAA/D,8BAGR,cAACoM,GAAA,EAAD,UACKb,EAAK/L,KAAI,SAAC8K,GACP,OAAO,eAAC,GAAD,CAAsChQ,MAAO,CAAE6G,wBAAyB,OAAxE,UACH,cAAC,GAAD,CAAiB8B,UAAU,KAAKoJ,MAAM,MAAtC,SACK/B,EAAOvB,QAAU,IAAMuB,EAAOvB,QAAU,KAAOuB,EAAOhU,SAAWgU,EAAOhU,WAE7E,cAAC,GAAD,CAAiB6V,MAAM,SAAvB,SAAiC7B,EAAO9G,QACxC,cAAC,GAAD,CAAiB2I,MAAM,SAAvB,SAAiC7B,EAAO1G,SACxC,cAAC,GAAD,CAAiBuI,MAAM,SAAvB,SAAiC7B,EAAO/E,WAAWrF,mBACnD,cAAC,GAAD,CAAiBiM,MAAM,SAAvB,SAAiC7B,EAAO9E,YAAYtF,mBACpD,cAAC,GAAD,CAAiBiM,MAAM,SAAvB,SAAiD,GAAhB7B,EAAO9G,OAAc8G,EAAO7E,UAAY6E,EAAO9G,MAAQ,KAAK3C,QAAQ,GAAK,IAAM,YARxFyJ,EAAOhU,eAYlC,aAARkC,EACG,cAAC0T,GAAA,EAAD,UACI,eAAC,GAAD,WACI,cAAC,GAAD,CAAiBjJ,UAAU,KAAKoJ,MAAM,MAAtC,0BAGA,cAAC,GAAD,CAAiBF,MAAM,SAAvB,SAAiC9E,EAAU7D,QAC3C,cAAC,GAAD,CAAiB2I,MAAM,SAAvB,SAAiC9E,EAAUzD,SAC3C,cAAC,GAAD,CAAiBuI,MAAM,SAAvB,SAAiC9E,EAAU9B,WAAWrF,mBACtD,cAAC,GAAD,CAAiBiM,MAAM,SAAvB,SAAiC9E,EAAU7B,YAAYtF,mBACvD,cAAC,GAAD,CAAiBiM,MAAM,SAAS7R,MAAO,CAAE6G,wBAAyB,OAAlE,SAA+F,GAAnBkG,EAAU7D,OAAc6D,EAAU5B,UAAY4B,EAAU7D,MAAQ,KAAK3C,QAAQ,GAAK,IAAM,eAG1K,aAMtB,MC3FLyL,GATK3S,YAAW,CAC3B4S,OAAQ,CACJnO,WAAY,UACZ,UAAW,CACPA,WAAY,c,GCNUvI,EAAQ,IAAlC8U,G,GAAAA,WAAYC,G,GAAAA,UAaL4B,GAVW7B,IAAW,iBAAO,CACxC7T,KAAM,CACFd,MAAO,UACP8J,WAAY,QAEhBlG,KAAM,CACFmR,aAAc,WANIJ,CAQtBC,ICsDW6B,GA3DU,SAAC1W,GAAW,IAAD,EACF6E,mBAAS7E,EAAMoU,SADb,mBACzBA,EADyB,aAEVvP,mBAAS7E,EAAM8R,MAFL,mBAEzBA,EAFyB,UAIhC,OACI,cAACnI,EAAA,EAAD,CAAOpF,MAAO,CAAE8D,WAAY,WAA5B,SACI,cAAC2N,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,WACI,cAACE,GAAA,EAAD,UACI,eAAC,GAAD,WACI,cAAC,GAAD,CAAiBC,MAAM,SAAS7R,MAAO,CAAEI,MAAO,WAChD,cAAC,GAAD,CAAiByR,MAAM,SAAvB,mBACA,cAAC,GAAD,CAAiBA,MAAM,SAAvB,oBACA,cAAC,GAAD,CAAiBA,MAAM,SAAvB,yBACA,cAAC,GAAD,CAAiBA,MAAM,SAAvB,0BACA,cAAC,GAAD,CAAiBA,MAAM,SAAS7R,MAAO,CAAE0F,qBAAsB,OAA/D,8BAGR,cAACoM,GAAA,EAAD,UAEQjC,EAAQrR,OAAS,EACbqR,EAAQ3K,KAAI,SAAC8K,GACT,OAEIA,EAAOzC,MAAQA,EACX,eAAC,GAAD,CAAsCvN,MAAO,CAAE6G,wBAAyB,OAAxE,UACI,cAAC,GAAD,CAAmB8B,UAAU,KAAKoJ,MAAM,MAAxC,SACK/B,EAAOvB,QAAU,IAAMuB,EAAOvB,QAAU,KAAOuB,EAAOhU,SAAWgU,EAAOhU,WAE7E,cAAC,GAAD,CAAmB6V,MAAM,SAAzB,SAAmC7B,EAAO9G,QAC1C,cAAC,GAAD,CAAmB2I,MAAM,SAAzB,SAAmC7B,EAAO1G,SAC1C,cAAC,GAAD,CAAmBuI,MAAM,SAAzB,SAAmC7B,EAAO/E,WAAWrF,mBACrD,cAAC,GAAD,CAAmBiM,MAAM,SAAzB,SAAmC7B,EAAO9E,YAAYtF,mBACtD,cAAC,GAAD,CAAmBiM,MAAM,SAAzB,SAAmD,GAAhB7B,EAAO9G,OAAc8G,EAAO7E,UAAY6E,EAAO9G,MAAQ,KAAK3C,QAAQ,GAAK,IAAM,YARjGyJ,EAAOhU,UAY5B,eAAC,GAAD,CAAsCgE,MAAO,CAAE6G,wBAAyB,OAAxE,UACI,cAAC,GAAD,CAAiB8B,UAAU,KAAKoJ,MAAM,MAAtC,SACK/B,EAAOvB,QAAU,IAAMuB,EAAOvB,QAAU,KAAOuB,EAAOhU,SAAWgU,EAAOhU,WAE7E,cAAC,GAAD,CAAiB6V,MAAM,SAAvB,SAAiC7B,EAAO9G,QACxC,cAAC,GAAD,CAAiB2I,MAAM,SAAvB,SAAiC7B,EAAO1G,SACxC,cAAC,GAAD,CAAiBuI,MAAM,SAAvB,SAAiC7B,EAAO/E,WAAWrF,mBACnD,cAAC,GAAD,CAAiBiM,MAAM,SAAvB,SAAiC7B,EAAO9E,YAAYtF,mBACpD,cAAC,GAAD,CAAiBiM,MAAM,SAAvB,SAAiD,GAAhB7B,EAAO9G,OAAc8G,EAAO7E,UAAY6E,EAAO9G,MAAQ,KAAK3C,QAAQ,GAAK,IAAM,YAR/FyJ,EAAOhU,aAaxC,aC4CjBoW,GA/FW,SAAC3W,GACvB,IAAMgE,EAAQC,cAGd,OAFmBE,YAAcH,EAAMI,YAAYC,GAAG,OAI9C,eAACyB,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASM,WAAW,SAASsQ,OAAO,SAASpK,QAAS,EAAGjI,MAAO,CAAEC,UAAW,QAAvG,UACI,cAACsB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAAC,EAAD,MAEJ,cAACJ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACuG,GAAA,EAAD,CAAU9H,MAAO,IAAKkB,OAAQ,OAElC,cAACC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACuG,GAAA,EAAD,CAAU9H,MAAO,IAAKkB,OAAQ,OAElC,cAACC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACuG,GAAA,EAAD,CAAU9H,MAAO,KAAMkB,OAAQ,OAEnC,cAACC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACuG,GAAA,EAAD,CAAU9H,MAAO,IAAKkB,OAAQ,OAElC,cAACC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACuG,GAAA,EAAD,CAAU9H,MAAO,KAAMkB,OAAQ,QAEnC,cAACC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACuG,GAAA,EAAD,CAAU9H,MAAO,KAAMkB,OAAQ,QAEnC,cAACC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACuG,GAAA,EAAD,CAAU9H,MAAO,KAAMkB,OAAQ,QAEnC,cAACC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACuG,GAAA,EAAD,CAAU9H,MAAO,KAAMkB,OAAQ,QAEnC,cAACC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACuG,GAAA,EAAD,CAAU9H,MAAO,KAAMkB,OAAQ,QAEnC,cAACC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACuG,GAAA,EAAD,CAAU9H,MAAO,KAAMkB,OAAQ,QAEnC,cAACC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACuG,GAAA,EAAD,CAAU9H,MAAO,KAAMkB,OAAQ,QAEnC,cAACC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACuG,GAAA,EAAD,CAAU9H,MAAO,KAAMkB,OAAQ,QAEnC,cAACC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACuG,GAAA,EAAD,CAAU9H,MAAO,KAAMkB,OAAQ,WAIvC,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASM,WAAW,SAASsQ,OAAO,SAASpK,QAAS,EAAGjI,MAAO,CAAEC,UAAW,QAAvG,UACI,cAACsB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACuG,GAAA,EAAD,CAAU9H,MAAO,IAAKkB,OAAQ,OAElC,cAACC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACuG,GAAA,EAAD,CAAU9H,MAAO,IAAKkB,OAAQ,OAElC,cAACC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACuG,GAAA,EAAD,CAAU9H,MAAO,IAAKkB,OAAQ,OAElC,cAACC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACuG,GAAA,EAAD,CAAU9H,MAAO,IAAKkB,OAAQ,QAElC,cAACC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACuG,GAAA,EAAD,CAAU9H,MAAO,IAAKkB,OAAQ,QAElC,cAACC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACuG,GAAA,EAAD,CAAU9H,MAAO,IAAKkB,OAAQ,QAElC,cAACC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACuG,GAAA,EAAD,CAAU9H,MAAO,IAAKkB,OAAQ,QAElC,cAACC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACuG,GAAA,EAAD,CAAU9H,MAAO,IAAKkB,OAAQ,QAElC,cAACC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACuG,GAAA,EAAD,CAAU9H,MAAO,IAAKkB,OAAQ,QAElC,cAACC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACuG,GAAA,EAAD,CAAU9H,MAAO,IAAKkB,OAAQ,QAElC,cAACC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACuG,GAAA,EAAD,CAAU9H,MAAO,IAAKkB,OAAQ,QAElC,cAACC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACuG,GAAA,EAAD,CAAU9H,MAAO,IAAKkB,OAAQ,QAElC,cAACC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACuG,GAAA,EAAD,CAAU9H,MAAO,IAAKkB,OAAQ,YC4JnCgR,GA/OW,SAAC7W,GAAW,IAAD,EACH6E,mBAAS7E,EAAM8Q,MAAM4C,OAAO3R,SADzB,mBAC1BA,EAD0B,aAEX8C,mBAAS7E,EAAM8Q,MAAM4C,OAAO5B,MAFjB,mBAE1BA,EAF0B,aAGPjN,mBAAS,KAHF,mBAG1BiS,EAH0B,KAGnBC,EAHmB,OAIClS,mBAAS,IAJV,mBAI1BuM,EAJ0B,KAIf4F,EAJe,OAKOnS,mBAAS,MALhB,mBAK1BoS,EAL0B,KAKZC,EALY,OAMWrS,mBAAS,MANpB,mBAM1BsS,EAN0B,KAMVC,EANU,OAOTvS,mBAAS,CAAC,SAAU,OAAQ,SAPnB,mBAO1BwS,EAP0B,KAOpBC,EAPoB,KAQ3BtT,EAAQC,cACRC,EAAaC,YAAcH,EAAMI,YAAYC,GAAG,OATrB,EAUHQ,mBAAS,SAVN,mBAU1B0S,EAV0B,KAUjBC,EAViB,OAWP3S,mBAAS,CAAC,SAAU,SAXb,mBAW1B4S,EAX0B,KAWnBC,EAXmB,OAYC7S,mBAAS,CAAC,SAAU,SAZrB,mBAY1B8S,EAZ0B,KAYfC,EAZe,OAaC/S,mBAAS,IAbV,oBAa1BgT,GAb0B,MAafC,GAbe,SAcHjT,mBAAS,IAdN,qBAc1BuP,GAd0B,MAcjB2D,GAdiB,MAgB3BC,GAAQ,uCAAG,8BAAAvX,EAAA,sEACI4E,EAAMvD,gBAAgBC,GAD1B,OACTR,EADS,OAEb6H,QAAQC,IAAI9H,GACR4H,EAAM,CACNoI,gBAAiBhQ,EAAKgQ,gBACtB9O,KAAMlB,EAAKkB,KACXwV,YAAa1W,EAAK0W,aAEtBlB,EAASxV,EAAKuV,OACdE,EAAa7N,GATA,2CAAH,qDA0CR+O,GAAS,SAACC,GACZ,IAAIC,EAAS,aAAOtB,GACpBsB,EAAUf,MAAK,SAAC5W,EAAG4X,GACf,MAAa,kBAATF,EACO1X,EAAE2T,QAAQ,GAAG+D,GAAQE,EAAEjE,QAAQ,GAAG+D,GAGrCE,EAAE/G,UAAU7D,QAAUhN,EAAE6Q,UAAU7D,MAC3B4K,EAAE/G,UAAU9B,WAAa/O,EAAE6Q,UAAU9B,WAEzC6I,EAAE/G,UAAU6G,GAAQ1X,EAAE6Q,UAAU6G,MAG/CpB,EAASqB,IAmBPE,GAAqB,SAAClE,GAOxB,OANaA,EAAQiD,MAAK,SAAC5W,EAAG4X,GAC1B,OAAIA,EAAE5K,QAAUhN,EAAEgN,MACP4K,EAAE7I,WAAa/O,EAAE+O,WAErB6I,EAAE5K,MAAQhN,EAAEgN,UAe3B1E,qBAAU,WACNsE,OAAOkL,SAAS,EAAG,GACnBP,OACD,CAACjW,IAEJgH,qBAAU,YAzCgB,WACtB,IAAM8O,EAAYf,EAAMrN,KAAI,SAAC+L,EAAMnC,GAC/B,GAA2B,GAAvBmC,EAAKpB,QAAQrR,OACb,OAAO,cAAC,GAAD,CAAqCN,KAAM2O,EAAU3O,KAAM+S,KAAMA,EAAKpB,QAAS9C,UAAWkE,EAAKlE,UAAWQ,IAAKA,GAAhG0D,EAAKpB,QAAQ,GAAGoB,SAG9CsC,GAAaD,GAoCbW,GACA,IAAI3E,EAzFgB,SAACiD,GACrB,GAAIA,EAAM/T,OAAS,EAQf,OAPa,aAAO+T,GACGO,MAAK,SAAC5W,EAAG4X,GAC5B,OAAIA,EAAE/G,UAAU7D,QAAUhN,EAAE6Q,UAAU7D,MAC3B4K,EAAE/G,UAAU9B,WAAa/O,EAAE6Q,UAAU9B,WAEzC6I,EAAE/G,UAAU7D,MAAQhN,EAAE6Q,UAAU7D,SAE7BgL,MAAM,EAAG,GAgFXC,CAAgB5B,GAC5BhD,EA7EkB,SAACgD,GACvB,GAAIA,EAAM/T,OAAS,EAAG,CAClB,IAAIqR,EAAU,GAWd,OAVA0C,EAAM9H,SAAQ,SAAAwG,GACV,IAAIxI,EAAOoH,EAAQuE,OAAOnD,EAAKpB,SAC/BA,EAAUpH,KAEdoH,EAAQiD,MAAK,SAAC5W,EAAG4X,GACb,OAAIA,EAAE5K,QAAUhN,EAAEgN,MACP4K,EAAE7I,WAAa/O,EAAE+O,WAErB6I,EAAE5K,MAAQhN,EAAEgN,SAEhB2G,EAAQqE,MAAM,EAAG,IAgEVG,CAAkB9B,GACpCI,EAAgBrD,GAChBuD,EAAkBtD,KACnB,CAACgD,IAEJ/N,qBAAU,WACiB,kBAAnBqI,EAAU3O,OACVyV,GAAO,SACPZ,EAAQ,CAAC,OAAQ,SAAU,YAEhC,CAAClG,IAEJ,IAAMyH,GAAoBtC,KAC1B,OACI,cAAC3Q,EAAA,EAAD,UAEQkR,EAAM/T,OAAS,EACX,eAAC+C,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASM,WAAW,UAAUsQ,OAAO,SAA/D,UACI,cAAC9Q,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAAC,EAAD,MAEJ,cAACJ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SAEQhC,EACI,oBAAIK,MAAO,CAAE4B,aAAc,KAA3B,SAAmCd,EAAM7C,SAAS4O,EAAU3O,QAC1D,oBAAI8B,MAAO,CAAE4B,aAAc,KAA3B,SAAmCd,EAAM7C,SAAS4O,EAAU3O,UAG1E,cAACqD,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,6BAAKb,EAAMrC,WAAWoO,EAAUG,qBAEpC,cAACzL,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACqB,MAAhB+Q,EAAuB,cAAC,GAAD,CAAWpD,UAAWoD,EAAcxU,KAAM2O,EAAU3O,KAAMqP,IAAKA,EAAKgC,YAAaqD,GAAqBF,EAAa,GAAG7C,QAAQ,GAAGoB,MAAW,cAAC1P,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SAAmB,cAACuG,GAAA,EAAD,CAAU9H,MAAO,KAAMkB,OAAQ,SAE1N,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,GAAIG,QAAQ,SAArC,UAE0B,aAAlB+K,EAAU3O,KACN,eAACqD,EAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,GAAImE,GAAI,EAAGrE,UAAU,SAASK,QAAQ,SAASC,WAAW,SAAnF,UACI,cAACR,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,oBAAI3B,MAAO,CAAEtE,MAAO,WAApB,wBAEJ,cAAC6F,EAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,GAAIG,QAAQ,SAASC,WAAW,UAAzD,SACI,eAACwS,GAAA,EAAD,CAAaC,KAAK,QAAQtE,WAAS,EAAnC,UACI,cAACzM,EAAA,EAAD,CAAQ8B,UAAW+O,GAAkBpB,EAAM,IAAKxP,QAAS,WAAQuP,EAAW,SAAUE,EAAS,CAAC,SAAU,UAA1G,mBACA,cAAC1P,EAAA,EAAD,CAAQ8B,UAAW+O,GAAkBpB,EAAM,IAAKxP,QAAS,WAA+B,IAAnBmM,GAAQrR,QA/EtG,WACf,IAAIqR,EAAU,GACd0C,EAAM9H,SAAQ,SAAAwG,GAAI,aAAI,EAAApB,GAAQ3O,KAAR,qBAAgB+P,EAAKpB,aAC3CA,EAAUkE,GAAmBlE,GAC7B2D,GAAW3D,GA2E0H4E,GAAgBxB,EAAW,WAAYE,EAAS,CAAC,OAAQ,YAAtJ,6BAKZ,KAGc,aAAlBtG,EAAU3O,KACN,cAACqD,EAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,EAAGG,QAAQ,SAASC,WAAW,SAAxD,SACI,cAACkL,GAAA,EAAD,CAASG,YAAY,WAAWpN,MAAO,CAAE8D,WAAY,eAGzD,KAER,eAACvC,EAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,GAAImE,GAAI,EAAGrE,UAAU,MAAMK,QAAQ,SAASC,WAAW,SAAhF,UACI,cAACR,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,oBAAI3B,MAAO,CAAEtE,MAAO,WAApB,uBAGa,UAAbsX,EACI,cAACzR,EAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,GAAIG,QAAQ,SAASC,WAAW,SAAzD,SAE2B,kBAAnB8K,EAAU3O,KACN,eAACqW,GAAA,EAAD,CAAaC,KAAK,QAAQtE,WAAS,EAAnC,UACI,cAACzM,EAAA,EAAD,CAAQ8B,UAAW+O,GAAkBxB,EAAK,IAAKpP,QAAS,WAAQiQ,GAAO,iBAAkBZ,EAAQ,CAAC,SAAU,OAAQ,UAApH,uBACA,cAACtP,EAAA,EAAD,CAAQ8B,UAAW+O,GAAkBxB,EAAK,IAAKpP,QAAS,WAAQiQ,GAAO,SAAUZ,EAAQ,CAAC,OAAQ,SAAU,UAA5G,mBACA,cAACtP,EAAA,EAAD,CAAQ8B,UAAW+O,GAAkBxB,EAAK,IAAKpP,QAAS,WAAQiQ,GAAO,cAAeZ,EAAQ,CAAC,OAAQ,OAAQ,YAA/G,uBAGJ,eAACwB,GAAA,EAAD,CAAaC,KAAK,QAAQtE,WAAS,EAAnC,UACI,cAACzM,EAAA,EAAD,CAAQ8B,UAAW+O,GAAkBxB,EAAK,IAAKpP,QAAS,WAAQiQ,GAAO,SAAUZ,EAAQ,CAAC,OAAQ,SAAU,UAA5G,mBACA,cAACtP,EAAA,EAAD,CAAQ8B,UAAW+O,GAAkBxB,EAAK,IAAKpP,QAAS,WAAQiQ,GAAO,cAAeZ,EAAQ,CAAC,OAAQ,OAAQ,YAA/G,yBAKhB,cAACxR,EAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,GAAIG,QAAQ,SAASC,WAAW,UAAzD,SACI,eAACwS,GAAA,EAAD,CAAaC,KAAK,QAAQtE,WAAS,EAAnC,UACI,cAACzM,EAAA,EAAD,CAAQ8B,UAAW+O,GAAkBlB,EAAU,IAC3C1P,QAAS,WACL,IAAIgR,EAASX,GAAmBlE,IAChC2D,GAAWkB,GACXrB,EAAa,CAAC,SAAU,UAJhC,mBAQA,cAAC5P,EAAA,EAAD,CAAQ8B,UAAW+O,GAAkBlB,EAAU,IAC3C1P,QAAS,WACL,IAAIgR,EA/G5B,SAAC7E,GAOzB,OANaA,EAAQiD,MAAK,SAAC5W,EAAG4X,GAC1B,OAAIA,EAAE7I,aAAe/O,EAAE+O,WACZ6I,EAAE5K,MAAQhN,EAAEgN,MAEhB4K,EAAE7I,WAAa/O,EAAE+O,cA0GiC0J,CAAoB9E,IACjC2D,GAAWkB,GACXrB,EAAa,CAAC,OAAQ,YAJ9B,+BAaxB,eAAC9R,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,UACI,uBAEgB,UAAZqR,EACIM,GAEA,cAAC,GAAD,CAA4CzD,QAASA,GAAStC,IAAKA,GAA5CsC,GAAQ,GAAG7T,gBAKlD,cAAC,GAAD,OCjOL4Y,GAbI,SAACnZ,GAChB,OACI,8BACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOoZ,KAAK,IAAIC,OAAK,EAACnM,UAAWtI,IACjC,cAAC,IAAD,CAAOwU,KAAK,8BAA8BlM,UAAWuG,KACrD,cAAC,IAAD,CAAO2F,KAAK,uBAAuBlM,UAAW2J,KAC9C,cAAC,IAAD,CAAOuC,KAAK,WAAWlM,UAAW9C,UCb1CkP,GAAmBxZ,EAAQ,IAA3BwZ,eAEFC,GAAYD,GAAe,CAC7BE,UAAW,CACPC,aAAc,CACV5V,KAAM,CACFC,gBAAiB,UACjB7D,MAAO,UACPoP,UAAW,SACXqK,WAAY,UACZnU,SAAU,GACVM,OAAQ,OACR+H,QAAS,OACTmC,cAAe,WAGvB4J,UAAW,CACP9V,KAAM,CACF5D,MAAO,UACP,uBAAwB,CACpB2Z,YAAa,2BAIzBC,cAAe,CACXhW,KAAM,CACF5D,MAAO,YAGf6Z,eAAgB,CACZjW,KAAM,CACF5D,MAAO,YAGf8Z,UAAW,CACPlW,KAAM,CACF5D,MAAO,WAEX+Z,KAAM,CACF/Z,MAAO,YAGfga,YAAa,CACTpW,KAAM,CACF5D,MAAO,YAGfia,SAAU,CACNrW,KAAM,CACFC,gBAAiB,QACjByC,OAAQ,MACR+F,aAAc,QAGtB6N,YAAa,CACTtW,KAAM,CACFyI,aAAc,SAI1BtM,MAAO,CACHyZ,aAAc,CACV9E,UAAU,GAEdgF,UAAW,CACPvK,QAAS,YAEbgL,aAAc,CACVhL,QAAS,SACT2J,KAAM,SAEVgB,UAAW,CACP3K,QAAS,UAEb+K,YAAa,CACTE,UAAW,OACXjL,QAAS,SAGjBkL,QAAS,CACLC,QAAS,CACLC,KAAM,WAEVC,UAAW,CACPD,KAAM,cCrEHE,ID0EIpB,GAAe,CAC9BE,UAAW,CACPC,aAAc,CACV5V,KAAM,CACFC,gBAAiB,SACjB7D,MAAO,UACPoP,UAAW,SACXqK,WAAY,UACZnU,SAAU,GACVM,OAAQ,QACR+H,QAAS,OACTmC,cAAe,YAI3B/P,MAAO,CACHyZ,aAAc,CACV9E,UAAU,MCrGV,WACV,OACE,qBAAK7K,UAAU,MAAf,SACE,cAAC6Q,EAAA,EAAD,CAAe3W,MAAOuV,GAAtB,SACE,cAAC,GAAD,UCGOqB,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB3Z,MAAK,YAAkD,IAA/C4Z,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAD,CAAeC,SAAS,mBAAxB,SACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.c721dfc2.chunk.js","sourcesContent":["const { SvgIcon } = require(\"@material-ui/core\");\r\n\r\nconst BattleIcon = (props) => {\r\n    return (\r\n        <SvgIcon {...props} color=\"primary\">\r\n            <path d=\"M19.92,10.76C19.92,10.76 22.5,12.24 22.5,13.89C22.5,15.5 19.5,16.06 16.18,15.9C16.18,15.9 14.77,17.87 13.42,18.7C14.88,21.44 16,22.5 15.97,22.5C15.97,22.5 15.23,22.69 13,19.04C11.66,19.89 10.17,20.23 9.56,19.7C8.94,19.17 9.42,18.28 9.68,17.85C9.41,18 8,18.83 6.75,18.83C5.26,18.83 5.05,17.72 5.05,17.15C5.05,15 7.12,12 7.12,12C7.12,12 6.16,9.88 6.05,8.22C4.17,8.06 2,8.39 1.53,8.54C1.4,8.54 1.84,8.22 2,8.18C2.15,8.13 3.91,7.67 6,7.67C6,5.93 6.35,4.33 7.41,4.33C8.13,4.33 8.71,5.45 8.71,5.45C8.71,5.45 8.7,1.5 10.74,1.5C12.8,1.5 15,6.11 15,6.11C15,6.11 17.22,6.32 18.85,7.09C19.5,5.73 20.09,5.11 20.81,3C21,3.7 20.2,5.5 19.35,7.3V7.3H19.35C19.35,7.3 21.65,8.5 21.65,9.83C21.65,10.84 19.92,10.76 19.92,10.76M10.68,18.58C11.36,18.69 12.41,18.1 12.4,18.1L11.58,16.57L10.4,17.4C10.39,17.41 9.64,18.38 10.68,18.58M20.15,9.76C20.15,9.1 18.95,8.35 18.81,8.27L17.89,9.75L19.17,10.37C19.59,10.34 20.15,10.35 20.15,9.76M8,5.63C7.7,5.63 7.09,6.07 7.09,7.64L8.83,7.7L8.72,6.3C8.6,6 8.3,5.63 8,5.63M10.18,15.78C8.92,15.13 8.16,14.06 7.54,12.9C7.54,12.9 5.96,15.55 6.97,16.22C8,16.89 9.64,16.16 10.18,15.78M12.97,17.76C14.11,16.89 17.19,14.73 17.45,11.08C14.57,9.44 10.62,8.71 10.62,8.71C10.62,8.71 10.61,8.21 10.7,7.86C11.64,7.97 14.59,8.47 17.03,9.43C16.35,8.28 15.84,7.85 15.37,7.5C16.53,7.76 17.36,9.26 17.36,9.26L18.28,7.96C18.28,7.96 13.91,5.61 10.19,7.42C10.11,10.3 11.59,14.56 11.59,14.56L10.82,14.89C10.3,13.84 9.63,12.09 9,8.67C8.7,9.08 8.17,9.55 8.16,11.09C7.7,9.8 8.66,8.43 8.67,8.42L7.07,8.26C7.17,9.92 8.05,14.2 10.68,15.53C13,14.21 15.5,11.54 16.13,10.77L16.82,11.28L12.35,15.97C13.59,16 14.32,15.72 14.82,15.5C14.1,16.25 12.86,16.32 12.27,16.32C12.28,16.34 12.57,17.07 12.97,17.76M14.03,6.05C14,5.97 12.66,3.69 11.47,3.86C10.69,4.11 10.24,5.43 10.23,6.87C10.76,6.56 12,6 14.03,6.05M16.71,15.07C16.71,15.07 20,15 19.9,13.76C19.9,12.56 17.92,11.33 17.92,11.35C17.93,13.47 16.71,15.07 16.71,15.07Z\" />\r\n        </SvgIcon>\r\n    )\r\n}\r\n\r\nconst PSNIcon = (props) => {\r\n    return (\r\n        <SvgIcon {...props} color=\"primary\">\r\n            <path d=\"M9.5,4.27C10.88,4.53 12.9,5.14 14,5.5C16.75,6.45 17.69,7.63 17.69,10.29C17.69,12.89 16.09,13.87 14.05,12.89V8.05C14.05,7.5 13.95,6.97 13.41,6.82C13,6.69 12.76,7.07 12.76,7.63V19.73L9.5,18.69V4.27M13.37,17.62L18.62,15.75C19.22,15.54 19.31,15.24 18.83,15.08C18.34,14.92 17.47,14.97 16.87,15.18L13.37,16.41V14.45L13.58,14.38C13.58,14.38 14.59,14 16,13.87C17.43,13.71 19.17,13.89 20.53,14.4C22.07,14.89 22.25,15.61 21.86,16.1C21.46,16.6 20.5,16.95 20.5,16.95L13.37,19.5V17.62M3.5,17.42C1.93,17 1.66,16.05 2.38,15.5C3.05,15 4.18,14.65 4.18,14.65L8.86,13V14.88L5.5,16.09C4.9,16.3 4.81,16.6 5.29,16.76C5.77,16.92 6.65,16.88 7.24,16.66L8.86,16.08V17.77L8.54,17.83C6.92,18.09 5.2,18 3.5,17.42Z\" />\r\n        </SvgIcon>\r\n    )\r\n}\r\n\r\nconst XBLIcon = (props) => {\r\n    return (\r\n        <SvgIcon {...props} color=\"primary\">\r\n            <path d=\"M6.43,3.72C6.5,3.66 6.57,3.6 6.62,3.56C8.18,2.55 10,2 12,2C13.88,2 15.64,2.5 17.14,3.42C17.25,3.5 17.54,3.69 17.7,3.88C16.25,2.28 12,5.7 12,5.7C10.5,4.57 9.17,3.8 8.16,3.5C7.31,3.29 6.73,3.5 6.46,3.7M19.34,5.21C19.29,5.16 19.24,5.11 19.2,5.06C18.84,4.66 18.38,4.56 18,4.59C17.61,4.71 15.9,5.32 13.8,7.31C13.8,7.31 16.17,9.61 17.62,11.96C19.07,14.31 19.93,16.16 19.4,18.73C21,16.95 22,14.59 22,12C22,9.38 21,7 19.34,5.21M15.73,12.96C15.08,12.24 14.13,11.21 12.86,9.95C12.59,9.68 12.3,9.4 12,9.1C12,9.1 11.53,9.56 10.93,10.17C10.16,10.94 9.17,11.95 8.61,12.54C7.63,13.59 4.81,16.89 4.65,18.74C4.65,18.74 4,17.28 5.4,13.89C6.3,11.68 9,8.36 10.15,7.28C10.15,7.28 9.12,6.14 7.82,5.35L7.77,5.32C7.14,4.95 6.46,4.66 5.8,4.62C5.13,4.67 4.71,5.16 4.71,5.16C3.03,6.95 2,9.35 2,12A10,10 0 0,0 12,22C14.93,22 17.57,20.74 19.4,18.73C19.4,18.73 19.19,17.4 17.84,15.5C17.53,15.07 16.37,13.69 15.73,12.96Z\" />\r\n        </SvgIcon>\r\n    )\r\n}\r\n\r\nexport { BattleIcon, PSNIcon, XBLIcon }","import { BattleIcon, PSNIcon, XBLIcon } from '../mui/icons'\r\n\r\n// const serverURL = \"http://localhost:8000/graphql\"\r\nconst serverURL = \"https://rankedzone-server.herokuapp.com/graphql\"\r\n\r\n\r\nconst getProfile = async (username, platform) => {\r\n\r\n    const weeklyModeData = `\r\n        kdRatio\r\n        kills\r\n        deaths\r\n        avgLifetime\r\n        score\r\n        headshots\r\n        killsPerGame\r\n        scorePerMinute\r\n        scorePerGame\r\n        timePlayed\r\n        headshotPercentage\r\n        matchesPlayed\r\n        damageDone\r\n        damageTaken\r\n    `\r\n\r\n    const query = `\r\n    query GetProfile($username: String, $platform: String) {\r\n        getProfile(username: $username, platform: $platform) {\r\n            username\r\n            platform\r\n            level\r\n            prestige\r\n            lifetime {\r\n                kdRatio\r\n                wins\r\n                kills\r\n                deaths\r\n                downs\r\n                topTen\r\n                topFive\r\n                contracts\r\n                revives\r\n                score\r\n                timePlayed\r\n                gamesPlayed\r\n                scorePerMinute\r\n            }\r\n            weekly {\r\n                all {\r\n                    ${weeklyModeData}\r\n                }\r\n                brSolo {\r\n                    ${weeklyModeData}\r\n                }\r\n                brDous {\r\n                    ${weeklyModeData}\r\n                }\r\n                brTrios {\r\n                    ${weeklyModeData}\r\n                }\r\n                brQuads {\r\n                    ${weeklyModeData}\r\n                }\r\n                rebirthDous {\r\n                    ${weeklyModeData}\r\n                }\r\n                rebirthTrios {\r\n                    ${weeklyModeData}\r\n                }\r\n                rebirthQuads {\r\n                    ${weeklyModeData}\r\n                }\r\n            }\r\n        }\r\n    }`\r\n\r\n    let resp = await fetch(serverURL, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n            query,\r\n            variables: { username, platform }\r\n        })\r\n    }).then(r => r.json())\r\n        .then(data => { return data });\r\n\r\n    if (resp.errors) {\r\n        return resp\r\n    }\r\n    else {\r\n        return resp.data.getProfile;\r\n    }\r\n}\r\n\r\nconst searchProfile = async (username, platform) => {\r\n\r\n    const query = `\r\n    query GetProfile($username: String, $platform: String) {\r\n        getProfile(username: $username, platform: $platform) {\r\n            username\r\n            platform\r\n        }\r\n    }`\r\n\r\n    let resp = await fetch(serverURL, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n            query,\r\n            variables: { username, platform }\r\n        })\r\n    }).then(r => r.json())\r\n        .then(data => { return data });\r\n\r\n    if (resp.errors) {\r\n        return resp\r\n    }\r\n    else {\r\n        return resp.data.getProfile;\r\n    }\r\n}\r\n\r\nconst getLifetimeStats = async (username, platform) => {\r\n    const query = `\r\n    query GetProfile($username: String, $platform: String) {\r\n        getProfile(username: $username, platform: $platform) {\r\n            username\r\n            platform\r\n            level\r\n            prestige\r\n            lifetime {\r\n                kdRatio\r\n                wins\r\n                kills\r\n                deaths\r\n                downs\r\n                topTen\r\n                topFive\r\n                contracts\r\n                revives\r\n                score\r\n                timePlayed\r\n                gamesPlayed\r\n                scorePerMinute\r\n            }\r\n        }\r\n    }`\r\n\r\n    let resp = await fetch(serverURL, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n            query,\r\n            variables: { username, platform }\r\n        })\r\n    }).then(r => r.json())\r\n        .then(data => { return data });\r\n\r\n    if (resp.errors) {\r\n        return resp\r\n    }\r\n    else {\r\n        return resp.data.getProfile;\r\n    }\r\n}\r\n\r\nconst getWeeklyStats = async (username, platform) => {\r\n    const weeklyModeData = `\r\n        kdRatio\r\n        kills\r\n        deaths\r\n        avgLifetime\r\n        score\r\n        headshots\r\n        killsPerGame\r\n        scorePerMinute\r\n        scorePerGame\r\n        timePlayed\r\n        headshotPercentage\r\n        matchesPlayed\r\n        damageDone\r\n        damageTaken\r\n    `\r\n\r\n    const query = `\r\n    query GetProfile($username: String, $platform: String) {\r\n        getProfile(username: $username, platform: $platform) {\r\n            username\r\n            platform\r\n            level\r\n            prestige\r\n            weekly {\r\n                all {\r\n                    ${weeklyModeData}\r\n                }\r\n                brSolo {\r\n                    ${weeklyModeData}\r\n                }\r\n                brDous {\r\n                    ${weeklyModeData}\r\n                }\r\n                brTrios {\r\n                    ${weeklyModeData}\r\n                }\r\n                brQuads {\r\n                    ${weeklyModeData}\r\n                }\r\n                rebirthDous {\r\n                    ${weeklyModeData}\r\n                }\r\n                rebirthTrios {\r\n                    ${weeklyModeData}\r\n                }\r\n                rebirthQuads {\r\n                    ${weeklyModeData}\r\n                }\r\n                resurgenceDous {\r\n                    ${weeklyModeData}\r\n                }\r\n                resurgenceTrios {\r\n                    ${weeklyModeData}\r\n                }\r\n                resurgenceQuads {\r\n                    ${weeklyModeData}\r\n                }\r\n            }\r\n        }\r\n    }`\r\n\r\n    let resp = await fetch(serverURL, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n            query,\r\n            variables: { username, platform }\r\n        })\r\n    }).then(r => r.json())\r\n        .then(data => { return data });\r\n\r\n    if (resp.errors) {\r\n        return resp\r\n    }\r\n    else {\r\n        return resp.data.getProfile;\r\n    }\r\n}\r\n\r\nconst getMatches = async (username, platform) => {\r\n    const query = `\r\n    query GetMatches($username: String, $platform: String) {\r\n        getMatchesByPlayer(username: $username, platform: $platform) {\r\n            uno\r\n            username\r\n            clantag\r\n            matches {\r\n                matchID\r\n                mode\r\n                utcStartSeconds\r\n                playerStats {\r\n                kills\r\n                deaths\r\n                damageDone\r\n                damageTaken\r\n                headshots\r\n                kdRatio\r\n                }\r\n                teamStats {\r\n                    placement\r\n                    team\r\n                }\r\n            }\r\n        }\r\n    }\r\n    `\r\n\r\n    let resp = await fetch(serverURL, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n            query,\r\n            variables: { username, platform }\r\n        })\r\n    }).then(r => r.json())\r\n        .then(data => { return data });\r\n\r\n    if (resp.errors) {\r\n        return resp\r\n    }\r\n    else {\r\n        return resp.data.getMatchesByPlayer;\r\n    }\r\n}\r\n\r\nconst getMatchDetails = async (matchID) => {\r\n    const query = `\r\n    query GetMatch($matchID: String) {\r\n        getMatchByID(id: $matchID) {\r\n            utcStartSeconds\r\n            mode\r\n            playerCount\r\n            teams {\r\n                players {\r\n                    uno\r\n                username\r\n                clantag\r\n                team\r\n                kills\r\n                deaths\r\n                kdRatio\r\n                totalXp\r\n                headshots\r\n                teamPlacement\r\n                damageDone\r\n                damageTaken\r\n                }\r\n                teamStats {\r\n                    kills\r\n                    deaths\r\n                    damageDone\r\n                    damageTaken\r\n                    headshots\r\n                }\r\n            }\r\n        }\r\n    }\r\n    `\r\n\r\n    let resp = await fetch(serverURL, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n            query,\r\n            variables: { matchID }\r\n        })\r\n    }).then(r => r.json())\r\n        .then(data => { return data });\r\n\r\n    if (resp.errors) {\r\n        return resp\r\n    }\r\n    else {\r\n        return resp.data.getMatchByID;\r\n    }\r\n}\r\n\r\nconst showSelectedValueIcon = (value) => {\r\n    if (value === \"battle\") {\r\n        return <BattleIcon />\r\n    }\r\n    if (value === \"psn\") {\r\n        return <PSNIcon />\r\n    }\r\n    if (value === \"xbl\") {\r\n        return <XBLIcon />\r\n    }\r\n}\r\n\r\n\r\nconst getRankingDesign = (statType, stat) => {\r\n    switch (statType) {\r\n        case \"kd\": {\r\n            if (stat < 0.53) {\r\n                return { design: \"wood\", nextLevel: [\"bronze\", 0.53] }\r\n            }\r\n            if (stat >= 0.53 && stat < 0.74) {\r\n                return { design: \"bronze\", nextLevel: [\"silver\", 0.74] }\r\n            }\r\n            if (stat >= 0.74 && stat < 0.92) {\r\n                return { design: \"silver\", nextLevel: [\"gold\", 0.92] }\r\n            }\r\n            if (stat >= 0.92 && stat < 1.14) {\r\n                return { design: \"gold\", nextLevel: [\"platinum\", 1.14] }\r\n            }\r\n            if (stat >= 1.14 && stat < 2.08) {\r\n                return { design: \"platinum\", nextLevel: [\"damascus\", 2.08] }\r\n            }\r\n            if (stat >= 2.08 && stat < 3.57) {\r\n                return { design: \"damascus\", nextLevel: [\"obsidian\", 3.57] }\r\n            }\r\n            if (stat >= 3.57) {\r\n                return { design: \"obsidian\" }\r\n            }\r\n        }\r\n\r\n        case \"kills\": {\r\n            if (stat < 100) {\r\n                return { design: \"wood\", nextLevel: [\"bronze\", 100] }\r\n            }\r\n            if (stat >= 100 && stat < 450) {\r\n                return { design: \"bronze\", nextLevel: [\"silver\", 450] }\r\n            }\r\n            if (stat >= 450 && stat < 1024) {\r\n                return { design: \"silver\", nextLevel: [\"gold\", 1024] }\r\n            }\r\n            if (stat >= 1024 && stat < 2075) {\r\n                return { design: \"gold\", nextLevel: [\"platinum\", 2075] }\r\n            }\r\n            if (stat >= 2075 && stat < 7616) {\r\n                return { design: \"platinum\", nextLevel: [\"damascus\", 7616] }\r\n            }\r\n            if (stat >= 7616 && stat < 12875) {\r\n                return { design: \"damascus\", nextLevel: [\"obsidian\", 12875] }\r\n            }\r\n            if (stat >= 12875) {\r\n                return { design: \"obsidian\" }\r\n            }\r\n        }\r\n\r\n        case \"weeklyKills\": {\r\n            if (stat < 100) {\r\n                return { design: \"wood\", nextLevel: [\"bronze\", 100] }\r\n            }\r\n            if (stat >= 100 && stat < 250) {\r\n                return { design: \"bronze\", nextLevel: [\"silver\", 250] }\r\n            }\r\n            if (stat >= 250 && stat < 500) {\r\n                return { design: \"silver\", nextLevel: [\"gold\", 500] }\r\n            }\r\n            if (stat >= 500 && stat < 800) {\r\n                return { design: \"gold\", nextLevel: [\"platinum\", 800] }\r\n            }\r\n            if (stat >= 800 && stat < 1000) {\r\n                return { design: \"platinum\", nextLevel: [\"damascus\", 1000] }\r\n            }\r\n            if (stat >= 1000 && stat < 1200) {\r\n                return { design: \"damascus\", nextLevel: [\"obsidian\", 1200] }\r\n            }\r\n            if (stat >= 1200) {\r\n                return { design: \"obsidian\" }\r\n            }\r\n        }\r\n\r\n        case \"wins\": {\r\n            if (stat < 1) {\r\n                return { design: \"wood\", nextLevel: [\"bronze\", 1] }\r\n            }\r\n            if (stat >= 1 && stat < 3) {\r\n                return { design: \"bronze\", nextLevel: [\"silver\", 3] }\r\n            }\r\n            if (stat >= 3 && stat < 8) {\r\n                return { design: \"silver\", nextLevel: [\"gold\", 8] }\r\n            }\r\n            if (stat >= 8 && stat < 19) {\r\n                return { design: \"gold\", nextLevel: [\"platinum\", 19] }\r\n            }\r\n            if (stat >= 19 && stat < 105) {\r\n                return { design: \"platinum\", nextLevel: [\"damascus\", 105] }\r\n            }\r\n            if (stat >= 105 && stat < 232) {\r\n                return { design: \"damascus\", nextLevel: [\"obsidian\", 232] }\r\n            }\r\n            if (stat >= 232) {\r\n                return { design: \"obsidian\" }\r\n            }\r\n        }\r\n\r\n        case \"winPercentage\": {\r\n            if (stat < 0.19) {\r\n                return { design: \"wood\", nextLevel: [\"bronze\", 0.19] }\r\n            }\r\n            if (stat >= 0.19 && stat < 0.99) {\r\n                return { design: \"bronze\", nextLevel: [\"silver\", 0.99] }\r\n            }\r\n            if (stat >= 0.99 && stat < 1.89) {\r\n                return { design: \"silver\", nextLevel: [\"gold\", 1.89] }\r\n            }\r\n            if (stat >= 1.89 && stat < 3.13) {\r\n                return { design: \"gold\", nextLevel: [\"platinum\", 3.13] }\r\n            }\r\n            if (stat >= 3.13 && stat < 9.72) {\r\n                return { design: \"platinum\", nextLevel: [\"damascus\", 9.72] }\r\n            }\r\n            if (stat >= 9.72 && stat < 25) {\r\n                return { design: \"damascus\", nextLevel: [\"obsidian\", 25] }\r\n            }\r\n            if (stat >= 25) {\r\n                return { design: \"obsidian\" }\r\n            }\r\n        }\r\n\r\n        case \"killsPerGame\": {\r\n            if (stat < 1.42) {\r\n                return { design: \"wood\", nextLevel: [\"bronze\", 1.42] }\r\n            }\r\n            if (stat >= 1.42 && stat < 1.96) {\r\n                return { design: \"bronze\", nextLevel: [\"silver\", 1.96] }\r\n            }\r\n            if (stat >= 1.96 && stat < 2.43) {\r\n                return { design: \"silver\", nextLevel: [\"gold\", 2.43] }\r\n            }\r\n            if (stat >= 2.43 && stat < 3.02) {\r\n                return { design: \"gold\", nextLevel: [\"platinum\", 3.02] }\r\n            }\r\n            if (stat >= 3.02 && stat < 5.31) {\r\n                return { design: \"platinum\", nextLevel: [\"damascus\", 5.31] }\r\n            }\r\n            if (stat >= 5.31 && stat < 8.93) {\r\n                return { design: \"damascus\", nextLevel: [\"obsidian\", 8.93] }\r\n            }\r\n            if (stat >= 8.93) {\r\n                return { design: \"obsidian\" }\r\n            }\r\n        }\r\n        default: return \"default\"\r\n    }\r\n\r\n}\r\n\r\nconst modeName = (mode) => {\r\n    switch (mode) {\r\n        case \"br_brsolo\": return \"BR SOLO\";\r\n        case \"br_brduos\": return \"BR DOUS\";\r\n        case \"br_brtrios\": return \"BR TRIOS\";\r\n        case \"br_brquads\": return \"BR QUADS\";\r\n        case \"br_rebirth_rbrthduos\": return \"REBIRTH RESURGENCE DOUS\";\r\n        case \"br_rebirth_rbrthtrios\": return \"REBIRTH RESURGENCE TRIOS\";\r\n        case \"br_rebirth_rbrthquad\": return \"REBIRTH RESURGENCE QUADS\";\r\n        case \"br_rebirth_resurgence_dous\": return \"VERDANSK RESURGENCE DOUS\";\r\n        case \"br_rebirth_resurgence_trios\": return \"VERDANSK RESURGENCE TRIOS\";\r\n        case \"br_rebirth_resurgence_quads\": return \"VERDANSK RESURGENCE QUADS\";\r\n        case \"br_bodycount_pwergrb\": return \"POWER GRAB\";\r\n        case \"br_dmz_plnbld\": return \"PLUNDER\"\r\n        default: return mode;\r\n    }\r\n}\r\n\r\nconst ordinalNumbers = (num) => {\r\n    if (num === null) {\r\n        return \"N/A\"\r\n    }\r\n    let numString = String(num);\r\n    let lastNum = numString[numString.length - 1];\r\n    if (numString == 11 || numString == 12 || numString == 13 || numString == 111 || numString == 112 || numString == 113) {\r\n        return num + \"th\"\r\n    }\r\n    if (lastNum == 1) {\r\n        return num + \"st\"\r\n    }\r\n    if (lastNum == 2) {\r\n        return num + \"nd\"\r\n    }\r\n    if (lastNum == 3) {\r\n        return num + \"rd\"\r\n    }\r\n    return num + \"th\"\r\n}\r\n\r\nconst formatDate = (milis) => {\r\n    let formatMilis = parseInt(milis + \"000\")\r\n    let matchStart = new Date(formatMilis);\r\n    let time = matchStart.toTimeString().substring(0, 5);\r\n    let date = matchStart.toDateString();\r\n    return String(date.substring(0, 3) + \", \" + date.substring(4, 10) + \" | \" + time);\r\n}\r\n\r\nexport default {\r\n    getProfile, searchProfile, getLifetimeStats, getWeeklyStats, getMatches,\r\n    getMatchDetails, showSelectedValueIcon, getRankingDesign, modeName, ordinalNumbers, formatDate\r\n}","import { makeStyles } from \"@material-ui/core\"\r\n\r\nconst homepagePlatforms = makeStyles({\r\n    root: {\r\n        backgroundColor: \"#212121\",\r\n    }\r\n})\r\n\r\nexport { homepagePlatforms };","export default __webpack_public_path__ + \"static/media/RANKEDZONE.4c3ad2ef.png\";","import rankedzone from '../icons/RANKEDZONE.png'\r\nimport { useMediaQuery, useTheme } from '@material-ui/core';\r\n\r\nconst LogoComp = (props) => {\r\n    const theme = useTheme();\r\n    const screenSize = useMediaQuery(theme.breakpoints.up('md'));\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                screenSize ?\r\n                    <a href=\"/rankedzonebuild\">\r\n                        <img style={{ marginTop: \"20px\" }} src={rankedzone} width=\"40%\" />\r\n                    </a>\r\n                    :\r\n                    <a href=\"/rankedzonebuild\">\r\n                        <img style={{ marginTop: \"20px\" }} src={rankedzone} width=\"90%\" />\r\n                    </a>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LogoComp","import { Button, MenuItem, Select, TextField, Container, ListItemIcon, Grid, ButtonBase } from '@material-ui/core'\r\nimport { useState } from 'react'\r\nimport utils from './utils'\r\nimport { BattleIcon, PSNIcon, XBLIcon } from '../mui/icons'\r\nimport { homepagePlatforms } from '../mui/homepagePlatforms'\r\nimport LogoComp from './LogoComp'\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\n\r\nconst HomePage = (props) => {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [platform, setPlatform] = useState(\"battle\")\r\n    const [alert, setAlert] = useState(\"\");\r\n\r\n    const getProfile = async (e) => {\r\n        e.preventDefault();\r\n        if (username != \"\") {\r\n            setAlert(<span><LinearProgress style={{ width: \"275px\" }} color=\"secondary\" /></span>)\r\n            let resp = await utils.searchProfile(username, platform);\r\n            if (resp.errors) {\r\n                if (resp.errors[0].message === \"Cannot return null for non-nullable field profileType.username.\") {\r\n                    setAlert(<p style={{ marginTop: \"-10px\", fontSize: 16 }}>Username Not Found!</p>)\r\n                }\r\n            }\r\n            else {\r\n                props.history.push(`/player/${resp.platform}/${encodeURIComponent(resp.username)}`)\r\n            }\r\n        }\r\n        else {\r\n            setAlert(<p style={{ marginTop: \"-10px\", fontSize: 16 }}>Please enter a username!</p>)\r\n        }\r\n    }\r\n\r\n    const platformsStyle = homepagePlatforms();\r\n    return (\r\n        <Container style={{ height: \"100vh\" }}>\r\n            <Grid container direction=\"column\" >\r\n                <Grid item xs={12} style={{ marginTop: \"130px\", marginBottom: \"-1%\" }}>\r\n                    <LogoComp />\r\n                </Grid><br /><br />\r\n                <form onSubmit={(e) => getProfile(e)}>\r\n                    <Grid container item direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                        <Grid item xs={10} style={{ margin: 1, padding: 0, flexBasis: \"15%\" }}>\r\n                            <TextField type=\"text\" label=\"Username\" InputLabelProps={{ shrink: true }} placeholder='e.g. \"Davidi74#2560\"' style={{ width: \"100%\" }} onChange={e => setUsername(e.target.value)} />\r\n                        </Grid>\r\n                        <Grid item xs={2} style={{ margin: 0, padding: 0, flexBasis: 0, paddingTop: \"25px\" }}>\r\n                            <Select value={platform} style={{ width: \"65px\", height: \"47.5px\", paddingBottom: \"20%\" }} MenuProps={{\r\n                                classes: { paper: platformsStyle.root },\r\n                                anchorOrigin: { vertical: \"bottom\", horizontal: \"left\" },\r\n                                transformOrigin: { vertical: \"top\", horizontal: \"left\" },\r\n                                getContentAnchorEl: null,\r\n                            }}\r\n                                renderValue={(value) => <ListItemIcon>{utils.showSelectedValueIcon(value)}</ListItemIcon>}\r\n                                onChange={e => setPlatform(e.target.value)} >\r\n                                <MenuItem value=\"battle\">\r\n                                    <ListItemIcon >\r\n                                        <BattleIcon />\r\n                                    </ListItemIcon>\r\n                                    Battle.net\r\n                                </MenuItem>\r\n                                <MenuItem value=\"psn\">\r\n                                    <ListItemIcon>\r\n                                        <PSNIcon />\r\n                                    </ListItemIcon>\r\n                                    PlayStation\r\n                                </MenuItem>\r\n                                <MenuItem value=\"xbl\">\r\n                                    <ListItemIcon>\r\n                                        <XBLIcon />\r\n                                    </ListItemIcon>\r\n                                    XBOX\r\n                                </MenuItem>\r\n                            </Select><br /><br />\r\n                        </Grid>\r\n                        <Grid container item justify=\"center\" xs={12} style={{ height: \"20px\" }}>\r\n                            {\r\n                                alert != \"\" ?\r\n                                    alert\r\n                                    :\r\n                                    null\r\n                            }\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Button onClick={getProfile} type=\"submit\" style={{ width: \"290px\" }}>Search</Button>\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                </form>\r\n            </Grid>\r\n            <footer>\r\n                <br /><br /><div>\r\n                    RANKEDZONE is a mobile-friendly web application used for ranking and tracking Call of Duty: Warzone statistics,\r\n                    integrating with COD's official API. <br /><br />\r\n                    RANKEDZONE was created by Davidi Shohat <br /> <br />\r\n                    <ButtonBase href=\"https://github.com/Davidi-74\">\r\n                        <GitHubIcon />\r\n                    </ButtonBase>\r\n                </div>\r\n            </footer>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default HomePage","import { makeStyles } from \"@material-ui/core\";\r\n\r\n\r\nconst ranking = makeStyles({\r\n    wood: {\r\n        background: \"linear-gradient(250deg, #443022 0%, #2f2117 21%, #443022 40%, #2f2117 100%)\"\r\n    },\r\n    bronze: {\r\n        background: \"linear-gradient(227deg, #A46628 0%, #b68453 21%, #A46628 60%, #b68453 100%)\"\r\n    },\r\n    silver: {\r\n        background: \"linear-gradient(227deg, #3d3f3f 30%, #585b5b)\"\r\n    },\r\n    gold: {\r\n        background: \"linear-gradient(227deg, gold 0%, goldenrod 81%, goldenrod 100%, goldenrod 100%)\"\r\n    },\r\n    platinum: {\r\n        background: \"linear-gradient(227deg, grey 0%, silver 81%, dimgrey 100%, silver 100%)\"\r\n    },\r\n    damascus: {\r\n        background: \"linear-gradient(227deg, #fb3527 0%, #643bc7 81%, #00c1fb 100%, #643bc7 100%)\"\r\n    },\r\n    obsidian: {\r\n        background: \"linear-gradient(230deg, #313131 5%, black 70%, #313131 81%, black 100%)\"\r\n    }\r\n})\r\n\r\nexport default ranking","import { useEffect, useState } from \"react\"\r\nimport utils from './utils'\r\nimport ranking from '../mui/rankingDesign'\r\nimport { Box, Paper } from \"@material-ui/core\";\r\n\r\nconst SpecificRankedStat = (props) => {\r\n    const [statType, setStat] = useState(props.statType);\r\n    const [rankingData, setRankingData] = useState([]);\r\n\r\n    const getStats = () => {\r\n        let currentRank = 0;\r\n        let rankingData = [];\r\n        for (let i = 0; i < 7; i++) {\r\n            let statData = utils.getRankingDesign(statType, currentRank);\r\n            if (statData.design != \"obsidian\") {\r\n                let obj = [statData.design, currentRank, statData.nextLevel[1]]\r\n                rankingData.push(obj);\r\n                currentRank = statData.nextLevel[1];\r\n            }\r\n            else {\r\n                let obj = [statData.design, currentRank];\r\n                rankingData.push(obj);\r\n            }\r\n        }\r\n        console.log(rankingData);\r\n        setRankingData(rankingData.reverse());\r\n    }\r\n\r\n    useEffect(() => {\r\n        getStats();\r\n    }, [])\r\n\r\n    const rankingDesign = ranking();\r\n    return (\r\n        <div>\r\n            {\r\n                rankingData.length > 0 ?\r\n                    (\r\n                        rankingData.map((rank) => {\r\n                            return (\r\n                                <Paper elevation={3} style={{ width: \"100%\", marginBottom: \"8px\" }}>\r\n                                    <Box className={rankingDesign[rank[0]]} color=\"white\" fontWeight=\"bold\" style={{ borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\" }}>\r\n                                        {rank[0].toUpperCase()}\r\n                                    </Box>\r\n                                    {rank[0] !== \"obsidian\" ? rank[1].toLocaleString(2) + \"-\" + rank[2].toLocaleString(2) : rank[1].toLocaleString(2) + \"+\"}\r\n                                </Paper>\r\n                            )\r\n                        })\r\n                    )\r\n                    :\r\n                    \"\"\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SpecificRankedStat","import { Container, Grid } from \"@material-ui/core\"\r\nimport SpecificRankedStat from \"./SpecificRankedStat\"\r\nimport LogoComp from './LogoComp'\r\n\r\nconst HowWeRank = (props) => {\r\n\r\n    return (\r\n        <Container>\r\n            <Grid container direction=\"row\" alignItems=\"center\" justify=\"center\" style={{ marginBottom: \"100px\" }}>\r\n                <Grid item xs={12}>\r\n                    <LogoComp />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <h1>HOW WE RANK</h1>\r\n                </Grid>\r\n                <Grid container item xs={12} md={6} direction=\"column\" alignItems=\"center\">\r\n                    <Grid item xs={12}>\r\n                        <h3>K/D RATIO</h3>\r\n                    </Grid>\r\n                    <Grid item xs={12} style={{ width: \"90%\" }}>\r\n                        <SpecificRankedStat statType=\"kd\" />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container item xs={12} md={6} direction=\"column\" alignItems=\"center\">\r\n                    <Grid item xs={12}>\r\n                        <h3>KILLS</h3>\r\n                    </Grid>\r\n                    <Grid item xs={12} style={{ width: \"90%\" }}>\r\n                        <SpecificRankedStat statType=\"kills\" />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container item xs={12} md={6} direction=\"column\" alignItems=\"center\">\r\n                    <Grid item xs={12}>\r\n                        <h3>WEEKLY KILLS</h3>\r\n                    </Grid>\r\n                    <Grid item xs={12} style={{ width: \"90%\" }}>\r\n                        <SpecificRankedStat statType=\"weeklyKills\" />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container item xs={12} md={6} direction=\"column\" alignItems=\"center\">\r\n                    <Grid item xs={12}>\r\n                        <h3>WINS</h3>\r\n                    </Grid>\r\n                    <Grid item xs={12} style={{ width: \"90%\" }}>\r\n                        <SpecificRankedStat statType=\"wins\" />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container item xs={12} md={6} direction=\"column\" alignItems=\"center\">\r\n                    <Grid item xs={12}>\r\n                        <h3>% WINS</h3>\r\n                    </Grid>\r\n                    <Grid item xs={12} style={{ width: \"90%\" }}>\r\n                        <SpecificRankedStat statType=\"winPercentage\" />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container item xs={12} md={6} direction=\"column\" alignItems=\"center\">\r\n                    <Grid item xs={12}>\r\n                        <h3>KILLS PER GAME</h3>\r\n                    </Grid>\r\n                    <Grid item xs={12} style={{ width: \"90%\" }}>\r\n                        <SpecificRankedStat statType=\"killsPerGame\" />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default HowWeRank","import { makeStyles } from \"@material-ui/core\";\r\n\r\n\r\nconst nextRankTooltip = makeStyles({\r\n    wood: {\r\n        background: \"linear-gradient(250deg, #443022 0%, #2f2117 21%, #443022 40%, #2f2117 100%)\",\r\n        fontSize: \"12px\",\r\n        fontWeight: \"bold\"\r\n    },\r\n    bronze: {\r\n        background: \"linear-gradient(227deg, #A46628 0%, #b68453 21%, #A46628 60%, #b68453 100%)\",\r\n        fontSize: \"12px\",\r\n        fontWeight: \"bold\"\r\n    },\r\n    silver: {\r\n        background: \"linear-gradient(227deg, #3d3f3f 30%, #585b5b)\",\r\n        fontSize: \"12px\",\r\n        fontWeight: \"bold\"\r\n    },\r\n    gold: {\r\n        background: \"linear-gradient(227deg, gold 0%, goldenrod 81%, goldenrod 100%, goldenrod 100%)\",\r\n        fontSize: \"12px\",\r\n        fontWeight: \"bold\"\r\n    },\r\n    platinum: {\r\n        background: \"linear-gradient(227deg, grey 0%, silver 81%, dimgrey 100%, silver 100%)\",\r\n        fontSize: \"12px\",\r\n        fontWeight: \"bold\"\r\n    },\r\n    damascus: {\r\n        background: \"linear-gradient(227deg, #fb3527 0%, #643bc7 81%, #00c1fb 100%, #643bc7 100%)\",\r\n        fontSize: \"12px\",\r\n        fontWeight: \"bold\"\r\n\r\n    },\r\n    obsidian: {\r\n        background: \"linear-gradient(230deg, #313131 5%, black 70%, #313131 81%, black 100%)\",\r\n        fontSize: \"12px\",\r\n        fontWeight: \"bold\"\r\n    }\r\n})\r\n\r\nexport default nextRankTooltip","import { Paper, Box, Tooltip } from \"@material-ui/core\"\r\nimport { useEffect, useState } from \"react\"\r\nimport utils from './utils'\r\nimport ranking from '../mui/rankingDesign'\r\nimport nextRankTooltip from '../mui/nextRankTooltip'\r\n\r\nconst SingleStatComp = (props) => {\r\n    const [statType, setStatType] = useState(props.statType);\r\n    const [stat, setStat] = useState(props.stat);\r\n    const [design, setDesign] = useState(\"\");\r\n    const [nextLevel, setNextLevel] = useState(\"MAX RANK\");\r\n\r\n    const getDesign = () => {\r\n        let designData = utils.getRankingDesign(statType, stat);\r\n        setDesign(designData.design);\r\n        if (designData.nextLevel) {\r\n            setNextLevel(formatNextLevel(designData.nextLevel))\r\n        }\r\n    }\r\n\r\n    const displayStat = (stat) => {\r\n        switch (stat) {\r\n            case \"kd\": return \"K/D Ratio\"\r\n            case \"kills\": return \"Kills\"\r\n            case \"weeklyKills\": return \"Kills\"\r\n            case \"wins\": return \"Wins\"\r\n            case \"winPercentage\": return \"% Wins\"\r\n            case \"killsPerGame\": return \"Kills / Game\"\r\n        }\r\n    }\r\n\r\n    const formatNextLevel = (nextLevel) => {\r\n        const nextLevelName = nextLevel[0].toUpperCase();\r\n        if (statType === \"kd\" || statType === \"killsPerGame\") {\r\n            return nextLevel[1].toFixed(2) + \" 🠖 \" + nextLevelName;\r\n        }\r\n        if (statType === \"winPercentage\") {\r\n            return nextLevel[1].toFixed(2) + \"%\" + \" 🠖 \" + nextLevelName;\r\n        }\r\n        return nextLevel[1].toLocaleString() + \" 🠖 \" + nextLevelName;\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDesign();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        getDesign();\r\n    }, [stat])\r\n\r\n    const rankingDesign = ranking();\r\n    const tooltipDesign = nextRankTooltip();\r\n    return (\r\n        <Tooltip title={nextLevel} classes={{ tooltip: tooltipDesign[design] }} >\r\n            <Paper className={rankingDesign[design]} elevation={3}>\r\n                <Box style={{ color: \"white\", borderTopLeftRadius: \"3px\", borderTopRightRadius: \"3px\" }} fontWeight=\"bolder\">{displayStat(statType)}</Box>\r\n                <Box fontSize=\"30px\" style={{ background: \"white\" }}>\r\n                    {statType === \"kd\" || statType === \"killsPerGame\" ? stat.toFixed(2) : statType === \"winPercentage\" ? stat.toFixed(2) + \"%\" : stat.toLocaleString()}\r\n                </Box>\r\n                <Box style={{ color: \"white\", fontSize: \"14px\", borderBottomRightRadius: \"3px\", borderBottomLeftRadius: \"3px\" }} fontWeight=\"bolder\">{design == \"default\" ? \"\" : design.toUpperCase()}</Box>\r\n            </Paper>\r\n        </Tooltip>\r\n    )\r\n}\r\n\r\nexport default SingleStatComp","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst plainDesign = makeStyles({\r\n    root: {\r\n        background: \"linear-gradient(130deg, #29b6f6 0%, #29b6f6 11%, #29b6f6 40%, #53c4f7 100%)\",\r\n        color: \"white\"\r\n    }\r\n})\r\n\r\nexport default plainDesign","import { Paper, Box } from \"@material-ui/core\"\r\nimport plainDesign from '../mui/plainStatDesign'\r\nimport { useState } from \"react\"\r\n\r\nconst PlainStatComp = (props) => {\r\n    const [statType, setStatType] = useState(props.statType);\r\n    const [stat, setStat] = useState(props.stat);\r\n\r\n    const displayStat = (stat) => {\r\n        switch (stat) {\r\n            case \"matches\": return \"Matches\"\r\n            case \"deaths\": return \"Deaths\"\r\n            case \"topFive\": return \"Top 5\"\r\n            case \"topTen\": return \"Top 10\"\r\n            case \"downs\": return \"Downs\"\r\n            case \"revives\": return \"Revives\"\r\n            case \"contracts\": return \"Contracts\"\r\n            case \"score\": return \"Score\"\r\n            case \"timePlayed\": return \"Time Played\"\r\n            case \"damageDone\": return \"Damage Done\"\r\n            case \"damageTaken\": return \"Damage Taken\"\r\n            case \"avgLifetime\": return \"Avg. Lifetime\"\r\n            case \"headshots\": return \"Headshots\"\r\n            case \"headshotPercentage\": return \"% Headshots\"\r\n        }\r\n    }\r\n\r\n    const secondsToDhms = (seconds) => {\r\n        seconds = Number(seconds);\r\n        let d = Math.floor(seconds / (3600 * 24));\r\n        let h = Math.floor(seconds % (3600 * 24) / 3600);\r\n        let m = Math.floor(seconds % 3600 / 60);\r\n\r\n        let dDisplay, hDisplay, mDisplay = null;\r\n        dDisplay = d > 0 ? d + \"D\" : \"\";\r\n        hDisplay = h > 0 ? dDisplay ? \", \" + h + \"H\" : h + \"H\" : \"\";\r\n        mDisplay = m > 0 ? dDisplay || hDisplay ? \", \" + m + \"M\" : m + \" Minutes\" : \"\";\r\n        return dDisplay + hDisplay + mDisplay;\r\n    }\r\n\r\n    const formatHsPercentage = (hs) => {\r\n        if (hs === 0) {\r\n            return 0 + \"%\";\r\n        }\r\n        let temp = hs * 100;\r\n        let hsString = String(temp);\r\n        return hsString[0] + hsString[1] + \"%\";\r\n    }\r\n\r\n    const design = plainDesign();\r\n    return (\r\n        <Paper className={design.root} elevation={3}>\r\n            <Box style={{ borderTopLeftRadius: \"3px\", borderTopRightRadius: \"3px\" }} fontWeight=\"bolder\">{displayStat(statType)}</Box>\r\n            <Box fontSize=\"20px\" style={{ background: \"white\", color: \"#212121\", borderBottomLeftRadius: \"3px\", borderBottomRightRadius: \"3px\" }}>\r\n                {statType === \"timePlayed\" ? secondsToDhms(stat) : statType === \"avgLifetime\" ? secondsToDhms(stat) : statType === \"headshotPercentage\" ? formatHsPercentage(stat) : stat.toLocaleString()}\r\n            </Box>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default PlainStatComp","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst helpOutlineDesign = makeStyles({\r\n    root: {\r\n        verticalAlign: \"-8px\",\r\n        padding: \"5px\",\r\n        borderRadius: \"4px\",\r\n        \"&:hover\": {\r\n            background: \"#353535\"\r\n        }\r\n    },\r\n    tooltip: {\r\n        background: \"#212121\",\r\n        fontSize: \"12px\",\r\n        fontWeight: \"bold\"\r\n    }\r\n})\r\n\r\nexport default helpOutlineDesign","import { Grid } from \"@material-ui/core\"\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\nconst LifetimeCompSkel = (props) => {\r\n\r\n    return (\r\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"stretch\" spacing={1}>\r\n            <Grid item xs={12} >\r\n                <Skeleton height={79.2} />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <Skeleton height={79.2} />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <Skeleton height={79.2} />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <Skeleton height={79.2} />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <Skeleton height={79.2} />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Skeleton height={37.17} />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default LifetimeCompSkel","import { Box, Button, Grid, Tooltip, ButtonBase } from \"@material-ui/core\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { Link } from \"react-router-dom\";\r\nimport SingleStatComp from \"./SingleStatComp\";\r\nimport utils from './utils'\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport PlainStatComp from \"./PlainStatComp\";\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\nimport helpOutlineDesign from '../mui/helpOutlineDesign'\r\nimport LifetimeCompSkel from './skeletons/LifetimeCompSkel'\r\n\r\nconst LifetimeComp = (props) => {\r\n    const [stats, setStats] = useState(\"\");\r\n    const [otherStats, setOtherStats] = useState(false);\r\n\r\n    const getLifetimeStats = async () => {\r\n        let temp = await utils.getLifetimeStats(decodeURIComponent(props.username), props.platform);\r\n        setStats(temp);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getLifetimeStats();\r\n    }, [])\r\n\r\n    const helpDesign = helpOutlineDesign();\r\n    return (\r\n        <Box style={{ paddingTop: \"3.5px\" }}>\r\n            <h3 style={{ paddingBottom: \"9px\" }}>\r\n                Lifetime BR Stats&nbsp;\r\n                <Tooltip title=\"HOW WE RANK\" classes={{ tooltip: helpDesign.tooltip }}>\r\n                    <ButtonBase component={Link} to=\"/ranking\" onClick={(e) => { e.preventDefault(); window.open(\"/rankedzonebuild/ranking\") }}>\r\n                        <HelpOutlineIcon fontSize=\"small\" className={helpDesign.root} />\r\n                    </ButtonBase>\r\n                </Tooltip>\r\n            </h3>\r\n            <Box width=\"100%\">\r\n                {stats != \"\" ?\r\n                    <Grid container direction=\"row\" justify=\"center\" alignItems=\"stretch\">\r\n                        <Grid item xs={12}>\r\n                            <SingleStatComp statType=\"kd\" stat={stats.lifetime.kdRatio} />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <SingleStatComp statType=\"kills\" stat={stats.lifetime.kills} />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <SingleStatComp statType=\"killsPerGame\" stat={stats.lifetime.kills / stats.lifetime.gamesPlayed} />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <SingleStatComp statType=\"wins\" stat={stats.lifetime.wins} />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <SingleStatComp statType=\"winPercentage\" stat={stats.lifetime.wins / stats.lifetime.gamesPlayed * 100} />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Button style={{ width: \"98.2%\" }} onClick={() => { setOtherStats(!otherStats) }} >\r\n                                {otherStats ? <Box >Other Stats <ExpandLessIcon style={{ verticalAlign: \"middle\" }} /></Box> : <Box >Other Stats <ExpandMoreIcon style={{ verticalAlign: \"middle\" }} /></Box>}\r\n                            </Button>\r\n                        </Grid>\r\n                        <Box display={otherStats ? \"flex\" : \"none\"} width=\"100%\">\r\n                            <Grid container>\r\n                                <Grid item xs={6}>\r\n                                    <PlainStatComp statType=\"matches\" stat={stats.lifetime.gamesPlayed} />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <PlainStatComp statType=\"deaths\" stat={stats.lifetime.deaths} />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <PlainStatComp statType=\"topFive\" stat={stats.lifetime.topFive} />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <PlainStatComp statType=\"topTen\" stat={stats.lifetime.topTen} />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <PlainStatComp statType=\"downs\" stat={stats.lifetime.downs} />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <PlainStatComp statType=\"revives\" stat={stats.lifetime.revives} />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <PlainStatComp statType=\"contracts\" stat={stats.lifetime.contracts} />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <PlainStatComp statType=\"score\" stat={stats.lifetime.score} />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <PlainStatComp statType=\"timePlayed\" stat={stats.lifetime.timePlayed} />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Box>\r\n                    </Grid>\r\n                    :\r\n                    <LifetimeCompSkel />}\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default LifetimeComp","import { Grid } from \"@material-ui/core\"\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\nconst WeeklyCompSkel = (props) => {\r\n\r\n    return (\r\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"stretch\" spacing={1} style={{ margin: 1 }}>\r\n            <Grid item xs={12} md={4} >\r\n                <Skeleton height={79.2} />\r\n            </Grid>\r\n            <Grid item xs={6} md={4}>\r\n                <Skeleton height={79.2} />\r\n            </Grid>\r\n            <Grid item xs={6} md={4}>\r\n                <Skeleton height={79.2} />\r\n            </Grid>\r\n            <Grid item xs={6} md={3}>\r\n                <Skeleton height={49.6} />\r\n            </Grid>\r\n            <Grid item xs={6} md={3}>\r\n                <Skeleton height={49.6} />\r\n            </Grid>\r\n            <Grid item xs={6} md={3}>\r\n                <Skeleton height={49.6} />\r\n            </Grid>\r\n            <Grid item xs={6} md={3}>\r\n                <Skeleton height={49.6} />\r\n            </Grid>\r\n            <Grid item xs={6} md={3}>\r\n                <Skeleton height={49.6} />\r\n            </Grid>\r\n            <Grid item xs={6} md={3}>\r\n                <Skeleton height={49.6} />\r\n            </Grid>\r\n            <Grid item xs={6} md={3}>\r\n                <Skeleton height={49.6} />\r\n            </Grid>\r\n            <Grid item xs={6} md={3}>\r\n                <Skeleton height={49.6} />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default WeeklyCompSkel","import { Grid, MenuItem, Select } from \"@material-ui/core\"\r\nimport { useEffect, useState } from \"react\"\r\nimport SingleStatComp from \"./SingleStatComp\";\r\nimport utils from './utils'\r\nimport { homepagePlatforms } from '../mui/homepagePlatforms'\r\nimport PlainStatComp from \"./PlainStatComp\";\r\nimport WeeklyCompSkel from \"./skeletons/WeeklyCompSkel\";\r\n\r\nconst WeeklyComp = (props) => {\r\n    const [stats, setStats] = useState(\"\");\r\n    const [currentMode, setCurrentMode] = useState(\"all\");\r\n    const [optionalModes, setOptionalModes] = useState(null);\r\n\r\n    const getWeeklyStats = async () => {\r\n        let temp = await utils.getWeeklyStats(decodeURIComponent(props.username), props.platform);\r\n        setStats(temp);\r\n    }\r\n\r\n    const getOptionalModes = () => {\r\n        let modes = [];\r\n        console.log(stats.weekly);\r\n        if (stats.weekly) {\r\n            Object.keys(stats.weekly).forEach(mode => {\r\n                if (stats.weekly[mode]) {\r\n                    modes.push(mode);\r\n                }\r\n            })\r\n        }\r\n        setOptionalModes(modes);\r\n    }\r\n\r\n    const formatModeName = (mode) => {\r\n        if (mode === \"all\") {\r\n            return \"All Modes\"\r\n        }\r\n        if (mode === \"brSolo\") {\r\n            return \"BR Solo\"\r\n        }\r\n        if (mode === \"brDous\") {\r\n            return \"BR Dous\"\r\n        }\r\n        if (mode === \"brTrios\") {\r\n            return \"BR Trios\"\r\n        }\r\n        if (mode === \"brQuads\") {\r\n            return \"BR Quads\"\r\n        }\r\n        if (mode === \"resurgenceDous\") {\r\n            return \"Resurgence Dous\"\r\n        }\r\n        if (mode === \"resurgenceTrios\") {\r\n            return \"Resurgence Trios\"\r\n        }\r\n        if (mode === \"resurgenceQuads\") {\r\n            return \"Resurgence Quads\"\r\n        }\r\n        if (mode === \"rebirthDous\") {\r\n            return \"Rebirth Dous\"\r\n        }\r\n        if (mode === \"rebirthTrios\") {\r\n            return \"Rebirth Trios\"\r\n        }\r\n        if (mode === \"rebirthQuads\") {\r\n            return \"Rebirth Quads\"\r\n        }\r\n    }\r\n\r\n    const selectList = () => {\r\n        if (optionalModes) {\r\n            let modes = optionalModes.map((mode) => {\r\n                return <MenuItem key={mode} value={mode}>{formatModeName(mode)}</MenuItem>\r\n            })\r\n            return modes\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getWeeklyStats();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        getOptionalModes();\r\n    }, [stats])\r\n\r\n    const selectDesign = homepagePlatforms();\r\n    return (\r\n        <div >\r\n            <h3 style={{ color: \"white\" }}>\r\n                Weekly Battle Royale Stats for&nbsp;\r\n                <Select MenuProps={{\r\n                    classes: { paper: selectDesign.root },\r\n                    anchorOrigin: { vertical: \"bottom\", horizontal: \"left\" },\r\n                    transformOrigin: { vertical: \"top\", horizontal: \"left\" },\r\n                    getContentAnchorEl: null\r\n                }}\r\n                    defaultValue=\"all\"\r\n                    variant=\"outlined\"\r\n                    style={{ width: \"175px\", height: \"44px\", textAlign: \"left\", fontSize: \"20px\", fontWeight: \"bold\" }}\r\n                    onChange={(e) => setCurrentMode(e.target.value)}>\r\n                    {selectList()}\r\n                </Select>\r\n            </h3>\r\n            {\r\n                stats !== \"\" ?\r\n                    <Grid container direction=\"row\">\r\n                        <Grid item xs={12} md={4}>\r\n                            <SingleStatComp key={stats.weekly[currentMode].kdRatio} statType=\"kd\" stat={stats.weekly[currentMode].kdRatio} />\r\n                        </Grid>\r\n                        <Grid item xs={6} md={4}>\r\n                            <SingleStatComp key={stats.weekly[currentMode].kills} statType=\"weeklyKills\" stat={stats.weekly[currentMode].kills} />\r\n                        </Grid>\r\n                        <Grid item xs={6} md={4}>\r\n                            <SingleStatComp key={stats.weekly[currentMode].killsPerGame} statType=\"killsPerGame\" stat={stats.weekly[currentMode].killsPerGame} />\r\n                        </Grid>\r\n                        <Grid item xs={6} md={3}>\r\n                            <PlainStatComp key={stats.weekly[currentMode].damageDone} statType={\"damageDone\"} stat={stats.weekly[currentMode].damageDone} />\r\n                        </Grid>\r\n                        <Grid item xs={6} md={3}>\r\n                            <PlainStatComp key={stats.weekly[currentMode].damageTaken} statType={\"damageTaken\"} stat={stats.weekly[currentMode].damageTaken} />\r\n                        </Grid>\r\n                        <Grid item xs={6} md={3}>\r\n                            <PlainStatComp key={stats.weekly[currentMode].headshots} statType={\"headshots\"} stat={stats.weekly[currentMode].headshots} />\r\n                        </Grid>\r\n                        <Grid item xs={6} md={3}>\r\n                            <PlainStatComp key={stats.weekly[currentMode].headshotPercentage} statType={\"headshotPercentage\"} stat={stats.weekly[currentMode].headshotPercentage} />\r\n                        </Grid>\r\n                        <Grid item xs={6} md={3}>\r\n                            <PlainStatComp key={stats.weekly[currentMode].timePlayed} statType={\"timePlayed\"} stat={stats.weekly[currentMode].timePlayed} />\r\n                        </Grid>\r\n                        <Grid item xs={6} md={3}>\r\n                            <PlainStatComp key={stats.weekly[currentMode].avgLifetime} statType={\"avgLifetime\"} stat={stats.weekly[currentMode].avgLifetime} />\r\n                        </Grid>\r\n                        <Grid item xs={6} md={3}>\r\n                            <PlainStatComp key={stats.weekly[currentMode].deaths} statType={\"deaths\"} stat={stats.weekly[currentMode].deaths} />\r\n                        </Grid>\r\n                        <Grid item xs={6} md={3}>\r\n                            <PlainStatComp key={stats.weekly[currentMode].score} statType={\"score\"} stat={stats.weekly[currentMode].score} />\r\n                        </Grid>\r\n                    </Grid>\r\n                    :\r\n                    <WeeklyCompSkel />\r\n            }\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default WeeklyComp","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst placement = makeStyles((theme) => ({\r\n    other: {\r\n        height: \"100%\",\r\n        width: \"60px\",\r\n        margin: 0,\r\n        textAlign: \"center\",\r\n        background: 'linear-gradient(90deg,rgba(14,13,13, 0.6) 10%, rgba(255, 255, 255, 0))',\r\n        color: \"white\",\r\n        borderTopRightRadius: 0,\r\n        borderBottomRightRadius: 0,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        fontSize: 14\r\n    },\r\n    first: {\r\n        height: \"100%\",\r\n\r\n        width: \"60px\",\r\n        margin: 0,\r\n        textAlign: \"center\",\r\n        background: 'linear-gradient(90deg, rgba(214, 175, 54, 0.6) 10%, rgba(255, 255, 255, 0))',\r\n        color: \"white\",\r\n        borderTopRightRadius: 0,\r\n        borderBottomRightRadius: 0,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        fontSize: 14\r\n    },\r\n    second: {\r\n        height: \"100%\",\r\n        width: \"60px\",\r\n        margin: 0,\r\n        textAlign: \"center\",\r\n        background: 'linear-gradient(90deg, rgba(167, 167, 173, 0.6) 10%, rgba(255, 255, 255, 0))',\r\n        color: \"white\",\r\n        borderTopRightRadius: 0,\r\n        borderBottomRightRadius: 0,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        fontSize: 14\r\n    },\r\n    third: {\r\n        height: \"100%\",\r\n        width: \"60px\",\r\n        margin: 0,\r\n        textAlign: \"center\",\r\n        background: 'linear-gradient(90deg, rgba(167, 112, 68, 0.6) 10%, rgba(255, 255, 255, 0))',\r\n        color: \"white\",\r\n        borderTopRightRadius: 0,\r\n        borderBottomRightRadius: 0,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        fontSize: 14\r\n    }\r\n}))\r\n\r\nexport default placement;","export default __webpack_public_path__ + \"static/media/verdansk84.3b6783f2.jpg\";","export default __webpack_public_path__ + \"static/media/rebirthisland.4e9fbceb.jpg\";","import { makeStyles } from \"@material-ui/core\";\r\nimport verdansk84 from '../icons/verdansk84.jpg'\r\nimport rebirthIsland from '../icons/rebirthisland.jpg'\r\n\r\nconst bgImage = makeStyles({\r\n    verdansk: {\r\n        backgroundImage: `url(${verdansk84})`,\r\n        backgroundSize: \"cover\",\r\n        backgroundPositionY: \"25%\",\r\n        margin: \"3px\",\r\n        width: \"-webkit-fill-available\"\r\n    },\r\n    rebirth: {\r\n        backgroundImage: `url(${rebirthIsland})`,\r\n        backgroundSize: \"cover\",\r\n        backgroundPositionY: \"45%\",\r\n        margin: \"3px\",\r\n        width: \"-webkit-fill-available\"\r\n    }\r\n})\r\n\r\nexport default bgImage","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst miniMatchSummary = makeStyles({\r\n    root: {\r\n        width: \"-webkit-fill-available\",\r\n        margin: 0,\r\n        fontSize: 16,\r\n        backgroundColor: \"rgba(0,0,0,0.3)\",\r\n        color: \"white\",\r\n        \"&:hover\": {\r\n            backgroundColor: \"rgba(0,0,0,0.4)\"\r\n        }\r\n    }\r\n})\r\n\r\nexport default miniMatchSummary","import { ButtonBase, Divider, Grid, Paper, useMediaQuery, useTheme } from \"@material-ui/core\"\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport placement from '../mui/placementPaper'\r\nimport bgImage from '../mui/matchBgImage'\r\nimport miniMatchSummary from '../mui/miniMatchSummary'\r\nimport utils from './utils'\r\n\r\nconst MiniMatchSummary = (props) => {\r\n    const [match, setMatch] = useState(null);\r\n    const [items, setItems] = useState(\"\");\r\n    const theme = useTheme();\r\n    const screenSize = useMediaQuery(theme.breakpoints.up('md'));\r\n\r\n    const placementStyle = placement();\r\n    const placementColor = (placement) => {\r\n        if (placement === 1) {\r\n            return placementStyle.first;\r\n        }\r\n        if (placement === 2) {\r\n            return placementStyle.second;\r\n        }\r\n        if (placement === 3) {\r\n            return placementStyle.third;\r\n        }\r\n        return placementStyle.other\r\n    }\r\n\r\n    useEffect(() => {\r\n        setMatch(props.matchData)\r\n    }, [])\r\n\r\n    const paperDesign = miniMatchSummary();\r\n    useEffect(() => {\r\n        if (match) {\r\n            let items = (\r\n                <Paper xs={12} className={paperDesign.root}>\r\n                    <Grid container justify=\"flex-start\" alignItems=\"stretch\" direction=\"row\"  >\r\n                        <Grid container item xs={1} justify=\"flex-start\"  >\r\n                            <Paper className={placementColor(match.teamStats.placement)} elevation={0}>\r\n                                <h2>{match.teamStats.placement ? utils.ordinalNumbers(match.teamStats.placement) : \"N/A\"}</h2>\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid container item alignItems=\"center\" justify=\"center\" xs={11}>\r\n                            <Grid item xs={12}>\r\n                                {\r\n                                    screenSize ?\r\n                                        <h2 style={{ marginBottom: \"8px\" }}>{utils.modeName(match.mode)}</h2>\r\n                                        : <h3 style={{ marginBottom: \"8px\" }}>{utils.modeName(match.mode)}</h3>\r\n                                }\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                {utils.formatDate(match.utcStartSeconds)}<br /><br />\r\n                                <Divider style={{ background: \"rgba(125,125,125,0.5)\", width: \"-webkit-fill-available\", height: \"1.5px\" }} flexItem />\r\n                            </Grid>\r\n                            {\r\n                                screenSize ?\r\n                                    <Grid container item xs={12} justify=\"space-evenly\" alignItems=\"flex-end\">\r\n                                        <Grid item xs={2} style={{ paddingTop: \"10px\" }}>\r\n                                            <b>KILLS</b> <br />\r\n                                            <h2>{match.playerStats.kills}</h2>\r\n                                        </Grid>\r\n                                        <Divider orientation=\"vertical\" style={{ background: \"rgba(125,125,125,0.5)\", width: \"1.5px\" }} flexItem />\r\n                                        <Grid item xs={2} >\r\n                                            <b>DEATHS</b> <br />\r\n                                            <h2>\r\n                                                {match.playerStats.deaths}\r\n                                            </h2>\r\n                                        </Grid>\r\n                                        <Divider orientation=\"vertical\" style={{ background: \"rgba(125,125,125,0.5)\", width: \"1.5px\", height: \"90px\" }} flexItem />\r\n                                        <Grid item xs={2} style={{ minWidth: \"fit-content\" }}>\r\n                                            <b>DAMAGE DONE</b> <br />\r\n                                            <h2>\r\n                                                {match.playerStats.damageDone.toLocaleString()}\r\n                                            </h2>\r\n                                        </Grid>\r\n                                        <Divider orientation=\"vertical\" style={{ background: \"rgba(125,125,125,0.5)\", width: \"1.5px\" }} flexItem />\r\n                                        <Grid item xs={2} style={{ minWidth: \"fit-content\" }}>\r\n                                            <b>DAMAGE TAKEN</b> <br />\r\n                                            <h2>\r\n                                                {match.playerStats.damageTaken.toLocaleString()}\r\n                                            </h2>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    :\r\n                                    <Grid container item xs={12} justify=\"space-evenly\" alignItems=\"flex-end\" direction=\"row\">\r\n                                        <Grid item xs={5} style={{ paddingTop: \"10px\" }}>\r\n                                            <b>KILLS</b> <br />\r\n                                            <h2>{match.playerStats.kills}</h2>\r\n                                        </Grid>\r\n                                        <Divider orientation=\"vertical\" style={{ background: \"rgba(125,125,125,0.5)\", width: \"1.5px\" }} flexItem />\r\n                                        <Grid item xs={5} >\r\n                                            <b>DEATHS</b> <br />\r\n                                            <h2>\r\n                                                {match.playerStats.deaths}\r\n                                            </h2>\r\n                                        </Grid>\r\n                                        <Divider style={{ background: \"rgba(125,125,125,0.5)\", width: \"-webkit-fill-available\", height: \"1.5px\" }} flexItem /><br />\r\n                                        <Grid item xs={5} style={{ minWidth: \"fit-content\" }}>\r\n                                            <b>DAMAGE DONE</b> <br />\r\n                                            <h2>\r\n                                                {match.playerStats.damageDone}\r\n                                            </h2>\r\n                                        </Grid>\r\n                                        <Divider orientation=\"vertical\" style={{ background: \"rgba(125,125,125,0.5)\", width: \"1.5px\", marginTop: \"-20px\" }} flexItem />\r\n                                        <Grid item xs={5} style={{ minWidth: \"fit-content\" }}>\r\n                                            <b>DAMAGE TAKEN</b> <br />\r\n                                            <h2>\r\n                                                {match.playerStats.damageTaken}\r\n                                            </h2>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                            }\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            )\r\n\r\n            setItems(items);\r\n        }\r\n    }, [match, screenSize])\r\n\r\n    const matchBgImage = bgImage();\r\n    const pickBgImage = (mode) => {\r\n        switch (mode) {\r\n            case \"br_brsolo\": return matchBgImage.verdansk;\r\n            case \"br_brduos\": return matchBgImage.verdansk;\r\n            case \"br_brtrios\": return matchBgImage.verdansk;\r\n            case \"br_brquads\": return matchBgImage.verdansk;\r\n            case \"br_rebirth_rbrthduos\": return matchBgImage.rebirth;\r\n            case \"br_rebirth_rbrthtrios\": return matchBgImage.rebirth;\r\n            case \"br_rebirth_rbrthquad\": return matchBgImage.rebirth;\r\n            case \"br_rebirth_resurgence_dous\": return matchBgImage.verdansk;\r\n            case \"br_rebirth_resurgence_trios\": return matchBgImage.verdansk;\r\n            case \"br_rebirth_resurgence_quads\": return matchBgImage.verdansk;\r\n            case \"br_bodycount_pwergrb\": return matchBgImage.verdansk;\r\n            default: return matchBgImage.verdansk;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                match != null ?\r\n                    <ButtonBase style={{ width: \"-webkit-fill-available\" }} component={Link} to={`/match/${match.matchID}/${props.uno}`}>\r\n                        <Paper className={pickBgImage(match.mode)}>\r\n                            {items}\r\n                        </Paper>\r\n                    </ButtonBase>\r\n                    :\r\n                    \"\"\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MiniMatchSummary","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst sessionSummaryWins = makeStyles({\r\n    win: {\r\n        background: \"linear-gradient(130deg, #29b6f6 0%, #29b6f6 11%, #29b6f6 40%, #53c4f7 100%)\"\r\n    },\r\n    noWin: {\r\n        background: \"linear-gradient(145deg, #c62828 0%, #8a1c1c 81%, #c62828 100%, #8a1c1c 100%)\"\r\n    }\r\n})\r\n\r\nexport default sessionSummaryWins","import { Paper, Box } from \"@material-ui/core\";\r\nimport { useState } from \"react\"\r\nimport sessionSummaryWins from \"../mui/sessionSummaryWin\";\r\n\r\n\r\nconst SessionSummaryWins = (props) => {\r\n    const [wins, setWins] = useState(props.wins);\r\n\r\n    const winDesign = sessionSummaryWins();\r\n    return (\r\n        <Paper className={wins > 0 ? winDesign.win : winDesign.noWin}>\r\n            <Box style={{ color: \"white\", borderTopLeftRadius: \"3px\", borderTopRightRadius: \"3px\" }} fontWeight=\"bolder\">Wins</Box>\r\n            <Box fontSize=\"30px\" style={{ background: \"white\" }}>\r\n                {wins}\r\n            </Box>\r\n            <Box style={{ color: \"white\", fontSize: \"14px\", borderBottomRightRadius: \"3px\", borderBottomLeftRadius: \"3px\" }} fontWeight=\"bolder\">&nbsp;</Box>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default SessionSummaryWins","import { Grid } from \"@material-ui/core\"\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport { useMediaQuery, useTheme } from \"@material-ui/core\";\r\n\r\nconst SessionSummarySkel = (props) => {\r\n    const theme = useTheme();\r\n    const screenSize = useMediaQuery(theme.breakpoints.up('md'));\r\n\r\n    return (\r\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"stretch\" spacing={1} style={{ width: screenSize ? 621.1 : 530.4 }}>\r\n            <Grid item xs={12} >\r\n                <Skeleton height={79.2} />\r\n            </Grid>\r\n            <Grid item xs={12} md={4} >\r\n                <Skeleton height={79.2} />\r\n            </Grid>\r\n            <Grid item xs={6} md={4}>\r\n                <Skeleton height={79.2} />\r\n            </Grid>\r\n            <Grid item xs={6} md={4}>\r\n                <Skeleton height={79.2} />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default SessionSummarySkel","import { Grid } from \"@material-ui/core\";\r\nimport { useEffect, useState } from \"react\"\r\nimport SessionSummaryWins from \"./SessionSummaryWins\";\r\nimport SingleStatComp from \"./SingleStatComp\";\r\nimport SessionSummarySkel from \"./skeletons/SessionSummarySkel\";\r\n\r\nconst SessionSummary = (props) => {\r\n    const [session, setSession] = useState(props.session);\r\n    const [sessionStats, setSessionStats] = useState(null)\r\n\r\n    const summarizeSession = () => {\r\n        let [deaths, killsPerGame, wins] = [0, 0, 0];\r\n        session.forEach(match => {\r\n            deaths += match.playerStats.deaths;\r\n            killsPerGame += match.playerStats.kills;\r\n            if (match.teamStats.placement === 1) {\r\n                wins++;\r\n            }\r\n        });\r\n        let kdRatio = killsPerGame / deaths;\r\n        killsPerGame = killsPerGame / session.length;\r\n        let obj = { kdRatio, killsPerGame, wins };\r\n        setSessionStats(obj);\r\n    }\r\n\r\n    useEffect(() => {\r\n        summarizeSession();\r\n    }, [session])\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                sessionStats !== null ?\r\n                    <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                        <Grid item xs={12} style={{ width: \"300px\" }}>\r\n                            <h4 style={{ color: \"white\" }}>\r\n                                {session.length === 1 ? session.length + \" MATCH\" : session.length + \" MATCHES IN A ROW\"}\r\n                            </h4>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={4}>\r\n                            <SessionSummaryWins wins={sessionStats.wins} />\r\n                        </Grid>\r\n                        <Grid item xs={6} md={4}>\r\n                            <SingleStatComp statType=\"kd\" stat={sessionStats.kdRatio} />\r\n                        </Grid>\r\n                        <Grid item xs={6} md={4}>\r\n                            <SingleStatComp statType=\"killsPerGame\" stat={sessionStats.killsPerGame} />\r\n                        </Grid>\r\n                    </Grid>\r\n                    :\r\n                    <SessionSummarySkel />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SessionSummary","import { Grid, Paper } from \"@material-ui/core\"\r\nimport { useEffect, useState } from \"react\"\r\nimport utils from './utils'\r\nimport MiniMatchSummary from './MiniMatchSummary'\r\nimport SessionSummary from \"./SessionSummary\"\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\nconst MatchesComp = (props) => {\r\n    const [matches, setMatches] = useState([]);\r\n    const [userData, setUserData] = useState(\"\");\r\n\r\n    const getMatches = async () => {\r\n        let data = await utils.getMatches(decodeURIComponent(props.username), props.platform);\r\n        console.log(data);\r\n        setUserData({ uno: data.uno, username: data.username, clantag: data.clantag ? data.clantag : null });\r\n        setMatches(splitToSessions(data.matches));\r\n    }\r\n\r\n    const splitToSessions = (matches) => {\r\n        let prevTime = 0;\r\n        let sessions = [];\r\n        let currentSession = [];\r\n        matches.forEach((match, index) => {\r\n            if (index === 0) {\r\n                prevTime = match.utcStartSeconds;\r\n                currentSession.push(match)\r\n            }\r\n            else if (prevTime - match.utcStartSeconds < 7200) {\r\n                prevTime = match.utcStartSeconds;\r\n                currentSession.push(match)\r\n            }\r\n            else {\r\n                prevTime = match.utcStartSeconds;\r\n                sessions.push(currentSession);\r\n                currentSession = [];\r\n                currentSession.push(match)\r\n            }\r\n        })\r\n        sessions.push(currentSession);\r\n        return (sessions)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getMatches();\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <h3>Last 20 Matches</h3>\r\n            {\r\n                matches.length !== 0 ?\r\n                    matches.map((session, index) => {\r\n                        let matches = session.map((match) => {\r\n                            return <MiniMatchSummary key={match.matchID} uno={userData.uno} matchData={match} />\r\n                        })\r\n\r\n                        return (\r\n                            <Paper style={{ background: \"#272727\" }}>\r\n                                <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                                    <Grid container item direction=\"row\" justify=\"center\" alignItems=\"center\" xs={12} >\r\n                                        <SessionSummary key={\"session\" + index} session={session} />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        {matches}\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Paper>\r\n                        )\r\n                    })\r\n                    :\r\n                    <Grid container alignItems=\"center\" justify=\"center\">\r\n                        <Skeleton variant=\"rect\" height={1000} width=\"98%\" />\r\n                    </Grid>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MatchesComp","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst isSticky = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up('md')]: {\r\n            position: \"sticky\",\r\n            top: 0\r\n        }\r\n    }\r\n}))\r\n\r\nexport default isSticky;","import { useState } from 'react'\r\nimport { Container, Grid, useMediaQuery, useTheme } from '@material-ui/core'\r\nimport utils from './utils'\r\nimport LifetimeComp from './LifetimeComp'\r\nimport WeeklyComp from './WeeklyComp'\r\nimport MatchesComp from './MatchesComp'\r\nimport LogoComp from './LogoComp'\r\nimport isSticky from '../mui/stickyLifetime'\r\n\r\nconst PlayerComp = (props) => {\r\n    const [username, setUsername] = useState(props.match.params.username);\r\n    const [platform, setPlatform] = useState(props.match.params.platform);\r\n    const theme = useTheme();\r\n    const screenSize = useMediaQuery(theme.breakpoints.up('md'));\r\n\r\n    const stickyLifetime = isSticky();\r\n    return (\r\n        <Container >\r\n            <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\"  >\r\n                <Grid item xs={12}>\r\n                    <LogoComp />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    {screenSize ?\r\n                        <h1>\r\n                            {utils.showSelectedValueIcon(platform)} {decodeURIComponent(username).toUpperCase()}\r\n                        </h1>\r\n                        :\r\n                        <h2>\r\n                            <span style={{ verticalAlign: \"-2px\" }}>{utils.showSelectedValueIcon(platform)}</span> {decodeURIComponent(username).toUpperCase()}\r\n                        </h2>}\r\n                </Grid>\r\n                <Grid item xs={12} md={3} className={stickyLifetime.root}>\r\n                    <LifetimeComp username={username} platform={platform} />\r\n                </Grid>\r\n                <Grid container item xs={12} md={9} justify=\"center\">\r\n                    <Grid item xs={12}>\r\n                        <WeeklyComp username={username} platform={platform} />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <MatchesComp username={username} platform={platform} />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default PlayerComp","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst placement = makeStyles({\r\n    first: {\r\n        color: \"white\",\r\n        background: \"linear-gradient(227deg, gold 0%, goldenrod 81%, goldenrod 100%, goldenrod 100%)\",\r\n        fontWeight: \"bold\"\r\n    },\r\n    second: {\r\n        color: \"white\",\r\n        background: \"linear-gradient(227deg, grey 0%, silver 81%, dimgrey 100%, silver 100%)\",\r\n        fontWeight: \"bold\"\r\n    },\r\n    third: {\r\n        color: \"white\",\r\n        background: \"linear-gradient(227deg, #A46628 0%, #b68453 21%, #A46628 60%, #b68453 100%)\",\r\n        fontWeight: \"bold\"\r\n    }\r\n})\r\n\r\nexport default placement","import { Box, Button, Grid, Paper } from \"@material-ui/core\"\r\nimport { useState } from \"react\"\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport placement from '../mui/matchMVPPlacement'\r\n\r\nconst MatchMVPs = (props) => {\r\n    const [teamKills, setTeamKills] = useState(props.teamKills)\r\n    const [playerKills, setPlayerKills] = useState(props.playerKills)\r\n    const [showComp, setShowComp] = useState(false);\r\n    const [uno, setUno] = useState(props.uno)\r\n    const [mode, setMode] = useState(props.mode);\r\n\r\n    const teammates = (teamNum) => {\r\n        let teammatesString = \"\";\r\n        for (let i = 0; i < teamKills[teamNum].players.length; i++) {\r\n            if (i != teamKills[teamNum].players.length - 1) {\r\n                teammatesString = teammatesString + teamKills[teamNum].players[i].username + \", \";\r\n            }\r\n            else {\r\n                teammatesString = teammatesString + teamKills[teamNum].players[i].username\r\n            }\r\n        }\r\n        return teammatesString;\r\n    }\r\n\r\n    const specificTeammates = (players) => {\r\n        let flag = false\r\n        players.forEach(player => {\r\n            if (player.uno == uno) {\r\n                flag = true;\r\n            }\r\n        })\r\n        if (flag) {\r\n            return \"#29b6f6\"\r\n        }\r\n    }\r\n\r\n    const placementDesign = placement();\r\n    return (\r\n        <Paper style={{ background: \"#353535\", marginBottom: \"10px\" }}>\r\n            <Button onClick={() => setShowComp(!showComp)} fullWidth>\r\n                {showComp ? <Box>Match MVPs <ExpandLessIcon style={{ verticalAlign: \"middle\" }} /></Box> : <Box>Match MVPs <ExpandMoreIcon style={{ verticalAlign: \"middle\" }} /></Box>}\r\n            </Button>\r\n            <Box display={showComp ? \"flex\" : \"none\"} >\r\n                <Grid container>\r\n                    {\r\n                        mode != \"br_brsolo\" ?\r\n                            <Grid item xs={12} md={6}>\r\n                                <Paper elevation={0} style={{ marginBottom: \"10px\" }}>\r\n                                    <Grid container direction=\"row\" alignItems=\"stretch\" justify=\"flex-start\">\r\n                                        <Grid item xs={12}>\r\n                                            <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\" style={{ color: \"white\", background: \"#353535\" }}>\r\n                                                <Grid container item xs={12} alignItems=\"center\" justify=\"center\" style={{ background: \"#353535\", borderTopRightRadius: 0, borderTopLeftRadius: 0 }}>\r\n                                                    <h4 style={{ margin: 8 }}>\r\n                                                        TOP TEAM KILLS\r\n                                                    </h4>\r\n                                                </Grid>\r\n                                                <Grid container item xs={12} direction=\"row\" alignItems=\"center\" justify=\"flex-start\" style={{ background: \"#4d4d4d\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\" }}>\r\n                                                    <Grid item xs={1} >\r\n                                                        <Paper className={placementDesign.first}>\r\n                                                            1\r\n                                                        </Paper>\r\n                                                    </Grid>\r\n                                                    <Grid container item xs={10} justify=\"flex-start\" alignItems=\"center\" style={{ height: \"50px\" }} >\r\n                                                        <Box textAlign=\"left\" paddingLeft=\"5px\" maxWidth=\"90%\" color={specificTeammates(teamKills[0].players)}>\r\n                                                            {teammates(0)}\r\n                                                        </Box>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={1}>\r\n                                                        {teamKills[0].teamStats.kills}\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                                <Grid container item xs={12} direction=\"row\" alignItems=\"center\" justify=\"flex-start\" style={{ background: \"#707070\" }}>\r\n                                                    <Grid item xs={1}>\r\n                                                        <Paper className={placementDesign.second}>\r\n                                                            2\r\n                                                        </Paper>\r\n                                                    </Grid>\r\n                                                    <Grid container item xs={10} justify=\"flex-start\" alignItems=\"center\" style={{ height: \"50px\" }} >\r\n                                                        <Box textAlign=\"left\" paddingLeft=\"5px\" maxWidth=\"90%\" color={specificTeammates(teamKills[1].players)}>\r\n                                                            {teammates(1)}\r\n                                                        </Box>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={1}>\r\n                                                        {teamKills[1].teamStats.kills}\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                                <Grid container item xs={12} direction=\"row\" alignItems=\"center\" justify=\"flex-start\" style={{ background: \"#4d4d4d\", borderBottomLeftRadius: \"4px\", borderBottomRightRadius: \"4px\" }}>\r\n                                                    <Grid item xs={1}>\r\n                                                        <Paper className={placementDesign.third}>\r\n                                                            3\r\n                                                        </Paper>\r\n                                                    </Grid>\r\n                                                    <Grid container item xs={10} justify=\"flex-start\" alignItems=\"center\" style={{ height: \"50px\" }}>\r\n                                                        <Box textAlign=\"left\" paddingLeft=\"5px\" maxWidth=\"90%\" color={specificTeammates(teamKills[2].players)}>\r\n                                                            {teammates(2)}\r\n                                                        </Box>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={1}>\r\n                                                        {teamKills[2].teamStats.kills}\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Paper>\r\n                            </Grid>\r\n                            : \"\"\r\n                    }\r\n                    <Grid item xs={12} md={mode != \"br_brsolo\" ? 6 : 12}>\r\n                        <Paper elevation={0} style={{ marginBottom: \"10px\" }}>\r\n                            <Grid container direction=\"row\" alignItems=\"stretch\" justify=\"flex-start\">\r\n                                <Grid item xs={12}>\r\n                                    <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\" style={{ color: \"white\", background: \"#353535\" }}>\r\n                                        <Grid container item xs={12} alignItems=\"center\" justify=\"center\" style={{ background: \"#353535\", borderTopRightRadius: 0, borderTopLeftRadius: 0 }}>\r\n                                            <h4 style={{ margin: 8 }}>\r\n                                                TOP PLAYER KILLS\r\n                                            </h4>\r\n                                        </Grid>\r\n                                        <Grid container item xs={12} direction=\"row\" alignItems=\"center\" justify=\"flex-start\" style={{ background: \"#4d4d4d\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\" }}>\r\n                                            <Grid item xs={1}>\r\n                                                <Paper className={placementDesign.first}>\r\n                                                    1\r\n                                                </Paper>\r\n                                            </Grid>\r\n                                            <Grid container item xs={10} justify=\"flex-start\" alignItems=\"center\" style={{ height: \"50px\" }} >\r\n                                                <Box textAlign=\"left\" paddingLeft=\"5px\" color={playerKills[0].uno === uno ? \"#29b6f6\" : \"\"}>\r\n                                                    {playerKills[0].username}\r\n                                                </Box>\r\n                                            </Grid>\r\n                                            <Grid item xs={1}>\r\n                                                {playerKills[0].kills}\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid container item xs={12} direction=\"row\" alignItems=\"center\" justify=\"flex-start\" style={{ background: \"#707070\" }}>\r\n                                            <Grid item xs={1}>\r\n                                                <Paper className={placementDesign.second}>\r\n                                                    2\r\n                                                </Paper>\r\n                                            </Grid>\r\n                                            <Grid container item xs={10} justify=\"flex-start\" alignItems=\"center\" style={{ height: \"50px\" }} >\r\n                                                <Box textAlign=\"left\" paddingLeft=\"5px\" color={playerKills[1].uno === uno ? \"#29b6f6\" : \"\"} >\r\n                                                    {playerKills[1].username}\r\n                                                </Box>\r\n                                            </Grid>\r\n                                            <Grid item xs={1}>\r\n                                                {playerKills[1].kills}\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid container item xs={12} direction=\"row\" alignItems=\"center\" justify=\"flex-start\" style={{ background: \"#4d4d4d\", borderBottomLeftRadius: \"4px\", borderBottomRightRadius: \"4px\" }}>\r\n                                            <Grid item xs={1}>\r\n                                                <Paper className={placementDesign.third}>\r\n                                                    3\r\n                                                </Paper>\r\n                                            </Grid>\r\n                                            <Grid container item xs={10} justify=\"flex-start\" alignItems=\"center\" style={{ height: \"50px\" }}>\r\n                                                <Box textAlign=\"left\" paddingLeft=\"5px\" color={playerKills[2].uno === uno ? \"#29b6f6\" : \"\"}>\r\n                                                    {playerKills[2].username}\r\n                                                </Box>\r\n                                            </Grid>\r\n                                            <Grid item xs={1}>\r\n                                                {playerKills[2].kills}\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default MatchMVPs","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst placement = makeStyles((theme) => ({\r\n    other: {\r\n        height: \"100%\",\r\n        width: \"95%\",\r\n        margin: 0,\r\n        textAlign: \"center\",\r\n        background: 'linear-gradient(90deg,rgba(14,13,13, 0.6) 10%, rgba(255, 255, 255, 0))',\r\n        color: \"white\",\r\n        borderTopRightRadius: 0,\r\n        borderBottomRightRadius: 0,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\"\r\n    },\r\n    first: {\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        margin: 0,\r\n        textAlign: \"center\",\r\n        background: 'linear-gradient(227deg, gold 0%, goldenrod 81%, goldenrod 100%, goldenrod 100%)',\r\n        color: \"white\",\r\n        borderTopRightRadius: 0,\r\n        borderBottomRightRadius: 0,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\"\r\n    },\r\n    second: {\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        margin: 0,\r\n        textAlign: \"center\",\r\n        background: 'linear-gradient(150deg, grey 0%, silver 81%, dimgrey 100%, silver 100%)',\r\n        color: \"white\",\r\n        borderTopRightRadius: 0,\r\n        borderBottomRightRadius: 0,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\"\r\n    },\r\n    third: {\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        margin: 0,\r\n        textAlign: \"center\",\r\n        background: 'linear-gradient(180deg, #A46628 0%, #b68453 21%, #A46628 60%, #b68453 100%)',\r\n        color: \"white\",\r\n        borderTopRightRadius: 0,\r\n        borderBottomRightRadius: 0,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\"\r\n    }\r\n}))\r\n\r\nexport default placement;","const { withStyles, TableCell } = require(\"@material-ui/core\");\r\n\r\n\r\nconst StyledTableCell = withStyles(() => ({\r\n    head: {\r\n        background: \"#353535\",\r\n        color: \"white\",\r\n    },\r\n    body: {\r\n        color: \"white\",\r\n        fontWeight: \"bold\"\r\n\r\n    },\r\n    root: {\r\n        borderBottom: \"none\",\r\n    }\r\n}))(TableCell)\r\n\r\nexport default StyledTableCell","const { withStyles, TableRow } = require(\"@material-ui/core\");\r\n\r\n\r\nconst StyledTableRow = withStyles(() => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: \"#4d4d4d\"\r\n        }\r\n    },\r\n}))(TableRow);\r\n\r\nexport default StyledTableRow","import { makeStyles } from \"@material-ui/core\";\r\n\r\n\r\nconst teamCompDesign = makeStyles({\r\n    general: {\r\n        background: \"#707070\",\r\n        marginBottom: \"10px\"\r\n    },\r\n    specific: {\r\n        background: \"#707070\",\r\n        marginBottom: \"10px\",\r\n        \"& > *\": {\r\n            boxShadow:\r\n                \"0px 3px 1px 0px #29b6f6, 0px 0px 3px 3px #29b6f6 ,0px 0px 15px 3px #29b6f6\",\r\n            borderRadius: \"3px\"\r\n        }\r\n    }\r\n})\r\n\r\nexport default teamCompDesign","import { Paper, Grid, TableContainer, TableHead, TableBody, Table } from \"@material-ui/core\"\r\nimport { useEffect, useState } from \"react\"\r\nimport placement from '../mui/tablePlacementPaper'\r\nimport StyledTableCell from '../mui/styledTableCell'\r\nimport StyledTableRow from '../mui/styledTableRow'\r\nimport utils from './utils'\r\nimport teamCompDesign from '../mui/teamCompDesign'\r\n\r\nconst TeamComp = (props) => {\r\n    const [team, setTeam] = useState(props.team);\r\n    const [teamStats, setTeamStats] = useState(props.teamStats);\r\n    const [uno, setUno] = useState(props.uno);\r\n    const [specificTeam, setSpecificTeam] = useState(\"general\");\r\n    const [mode, setMode] = useState(props.mode);\r\n\r\n    const placementStyle = placement();\r\n    const placementColor = (placement) => {\r\n        if (placement === 1) {\r\n            return placementStyle.first;\r\n        }\r\n        if (placement === 2) {\r\n            return placementStyle.second;\r\n        }\r\n        if (placement === 3) {\r\n            return placementStyle.third;\r\n        }\r\n        return placementStyle.other\r\n    }\r\n\r\n    const isSpecificPlayer = () => {\r\n        let unoExists = false;\r\n        team.forEach(player => {\r\n            if (player.uno === uno) {\r\n                unoExists = true;\r\n            }\r\n        })\r\n        if (unoExists) {\r\n            setSpecificTeam(\"specific\")\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        isSpecificPlayer();\r\n    }, [])\r\n\r\n    const teamPaper = teamCompDesign();\r\n    return (\r\n        <Paper className={teamPaper[specificTeam]} elevation={10}>\r\n            {\r\n                team.length > 0 ?\r\n                    <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"stretch\">\r\n                        <Grid item xs={2} sm={1}>\r\n                            <Paper className={placementColor(team[0].teamPlacement)} elevation={0}>\r\n                                {utils.ordinalNumbers(team[0].teamPlacement)}\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid container item xs={10} sm={11} direction=\"column\" justify=\"center\" alignItems=\"flex-start\">\r\n                            <TableContainer >\r\n                                <Table style={{ minWidth: 650 }} aria-label=\"a dense table\">\r\n                                    <TableHead>\r\n                                        <StyledTableRow>\r\n                                            <StyledTableCell align=\"center\" style={{ width: \"200px\" }}></StyledTableCell>\r\n                                            <StyledTableCell align=\"center\" >KILLS</StyledTableCell>\r\n                                            <StyledTableCell align=\"center\">DEATHS</StyledTableCell>\r\n                                            <StyledTableCell align=\"center\">DAMAGE DONE</StyledTableCell>\r\n                                            <StyledTableCell align=\"center\">DAMAGE TAKEN</StyledTableCell>\r\n                                            <StyledTableCell align=\"center\" style={{ borderTopRightRadius: \"4px\" }}>% HEADSHOTS</StyledTableCell>\r\n                                        </StyledTableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {team.map((player) => {\r\n                                            return <StyledTableRow key={player.username} style={{ borderBottomRightRadius: \"4px\" }}>\r\n                                                <StyledTableCell component=\"th\" scope=\"row\" >\r\n                                                    {player.clantag ? \"[\" + player.clantag + \"] \" + player.username : player.username}\r\n                                                </StyledTableCell>\r\n                                                <StyledTableCell align=\"center\">{player.kills}</StyledTableCell>\r\n                                                <StyledTableCell align=\"center\">{player.deaths}</StyledTableCell>\r\n                                                <StyledTableCell align=\"center\">{player.damageDone.toLocaleString()}</StyledTableCell>\r\n                                                <StyledTableCell align=\"center\">{player.damageTaken.toLocaleString()}</StyledTableCell>\r\n                                                <StyledTableCell align=\"center\">{player.kills != 0 ? (player.headshots / player.kills * 100).toFixed(2) + \"%\" : \"0.00%\"}</StyledTableCell>\r\n                                            </StyledTableRow>\r\n                                        })}\r\n                                    </TableBody>\r\n                                    {mode != \"br_brsolo\" ?\r\n                                        <TableHead>\r\n                                            <StyledTableRow>\r\n                                                <StyledTableCell component=\"th\" scope=\"row\" >\r\n                                                    TEAM SUMMARY\r\n                                                </StyledTableCell>\r\n                                                <StyledTableCell align=\"center\">{teamStats.kills}</StyledTableCell>\r\n                                                <StyledTableCell align=\"center\">{teamStats.deaths}</StyledTableCell>\r\n                                                <StyledTableCell align=\"center\">{teamStats.damageDone.toLocaleString()}</StyledTableCell>\r\n                                                <StyledTableCell align=\"center\">{teamStats.damageTaken.toLocaleString()}</StyledTableCell>\r\n                                                <StyledTableCell align=\"center\" style={{ borderBottomRightRadius: \"4px\" }}>{teamStats.kills != 0 ? (teamStats.headshots / teamStats.kills * 100).toFixed(2) + \"%\" : \"0.00%\"}</StyledTableCell>\r\n                                            </StyledTableRow>\r\n                                        </TableHead>\r\n                                        : \"\"}\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </Grid>\r\n                    </Grid>\r\n                    :\r\n                    \"\"\r\n            }\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default TeamComp","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst sortButtons = makeStyles({\r\n    picked: {\r\n        background: \"#707070\",\r\n        \"&:hover\": {\r\n            background: \"#656565\"\r\n        }\r\n    }\r\n})\r\n\r\nexport default sortButtons","const { withStyles, TableCell } = require(\"@material-ui/core\");\r\n\r\n\r\nconst SpecificTableCell = withStyles(() => ({\r\n    body: {\r\n        color: \"#29b6f6\",\r\n        fontWeight: \"bold\"\r\n    },\r\n    root: {\r\n        borderBottom: \"none\",\r\n    }\r\n}))(TableCell)\r\n\r\nexport default SpecificTableCell","import { Table, TableBody, TableContainer, TableHead, Paper } from \"@material-ui/core\";\r\nimport { useState } from \"react\"\r\nimport StyledTableCell from '../mui/styledTableCell'\r\nimport StyledTableRow from '../mui/styledTableRow'\r\nimport SpecificTableCell from '../mui/specificTableCell'\r\n\r\nconst GroupedByPlayers = (props) => {\r\n    const [players, setPlayers] = useState(props.players)\r\n    const [uno, setUno] = useState(props.uno);\r\n\r\n    return (\r\n        <Paper style={{ background: \"#707070\" }}>\r\n            <TableContainer>\r\n                <Table>\r\n                    <TableHead>\r\n                        <StyledTableRow>\r\n                            <StyledTableCell align=\"center\" style={{ width: \"200px\" }}></StyledTableCell>\r\n                            <StyledTableCell align=\"center\" >KILLS</StyledTableCell>\r\n                            <StyledTableCell align=\"center\">DEATHS</StyledTableCell>\r\n                            <StyledTableCell align=\"center\">DAMAGE DONE</StyledTableCell>\r\n                            <StyledTableCell align=\"center\">DAMAGE TAKEN</StyledTableCell>\r\n                            <StyledTableCell align=\"center\" style={{ borderTopRightRadius: \"4px\" }}>% HEADSHOTS</StyledTableCell>\r\n                        </StyledTableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            players.length > 0 ?\r\n                                players.map((player) => {\r\n                                    return (\r\n\r\n                                        player.uno === uno ?\r\n                                            <StyledTableRow key={player.username} style={{ borderBottomRightRadius: \"3px\" }}>\r\n                                                <SpecificTableCell component=\"th\" scope=\"row\" >\r\n                                                    {player.clantag ? \"[\" + player.clantag + \"] \" + player.username : player.username}\r\n                                                </SpecificTableCell>\r\n                                                <SpecificTableCell align=\"center\">{player.kills}</SpecificTableCell>\r\n                                                <SpecificTableCell align=\"center\">{player.deaths}</SpecificTableCell>\r\n                                                <SpecificTableCell align=\"center\">{player.damageDone.toLocaleString()}</SpecificTableCell>\r\n                                                <SpecificTableCell align=\"center\">{player.damageTaken.toLocaleString()}</SpecificTableCell>\r\n                                                <SpecificTableCell align=\"center\">{player.kills != 0 ? (player.headshots / player.kills * 100).toFixed(2) + \"%\" : \"0.00%\"}</SpecificTableCell>\r\n                                            </StyledTableRow>\r\n\r\n                                            :\r\n                                            <StyledTableRow key={player.username} style={{ borderBottomRightRadius: \"3px\" }}>\r\n                                                <StyledTableCell component=\"th\" scope=\"row\" >\r\n                                                    {player.clantag ? \"[\" + player.clantag + \"] \" + player.username : player.username}\r\n                                                </StyledTableCell>\r\n                                                <StyledTableCell align=\"center\">{player.kills}</StyledTableCell>\r\n                                                <StyledTableCell align=\"center\">{player.deaths}</StyledTableCell>\r\n                                                <StyledTableCell align=\"center\">{player.damageDone.toLocaleString()}</StyledTableCell>\r\n                                                <StyledTableCell align=\"center\">{player.damageTaken.toLocaleString()}</StyledTableCell>\r\n                                                <StyledTableCell align=\"center\">{player.kills != 0 ? (player.headshots / player.kills * 100).toFixed(2) + \"%\" : \"0.00%\"}</StyledTableCell>\r\n                                            </StyledTableRow>\r\n                                    )\r\n                                })\r\n                                :\r\n                                \"\"\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default GroupedByPlayers","import { Grid } from \"@material-ui/core\"\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport { useMediaQuery, useTheme } from \"@material-ui/core\";\r\nimport LogoComp from '../LogoComp'\r\n\r\nconst SpecificMatchSkel = (props) => {\r\n    const theme = useTheme();\r\n    const screenSize = useMediaQuery(theme.breakpoints.up('md'));\r\n\r\n    return (\r\n        screenSize ?\r\n            <Grid container direction=\"column\" alignItems=\"center\" jusity=\"center\" spacing={1} style={{ marginTop: \"30px\" }}>\r\n                <Grid item xs={12}>\r\n                    <LogoComp />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Skeleton width={500} height={37} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Skeleton width={200} height={37} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Skeleton width={1463} height={37} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Skeleton width={610} height={71} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Skeleton width={1463} height={320} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Skeleton width={1463} height={320} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Skeleton width={1463} height={320} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Skeleton width={1463} height={320} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Skeleton width={1463} height={320} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Skeleton width={1463} height={320} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Skeleton width={1463} height={320} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Skeleton width={1463} height={320} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Skeleton width={1463} height={320} />\r\n                </Grid>\r\n            </Grid>\r\n            :\r\n            <Grid container direction=\"column\" alignItems=\"center\" jusity=\"center\" spacing={1} style={{ marginTop: \"30px\" }}>\r\n                <Grid item xs={12}>\r\n                    <Skeleton width={300} height={25} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Skeleton width={200} height={21} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Skeleton width={443} height={37} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Skeleton width={451} height={142} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Skeleton width={443} height={360} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Skeleton width={443} height={360} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Skeleton width={443} height={360} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Skeleton width={443} height={360} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Skeleton width={443} height={360} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Skeleton width={443} height={360} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Skeleton width={443} height={360} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Skeleton width={443} height={360} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Skeleton width={443} height={360} />\r\n                </Grid>\r\n            </Grid>\r\n    )\r\n}\r\n\r\nexport default SpecificMatchSkel","import { ButtonGroup, Container, Grid, Button, useMediaQuery, useTheme, Divider } from \"@material-ui/core\"\r\nimport { useEffect, useState } from \"react\"\r\nimport MatchMVPs from \"./MatchMVPs\";\r\nimport TeamComp from \"./TeamComp\";\r\nimport utils from './utils'\r\nimport sortButtons from '../mui/sortButtons'\r\nimport GroupedByPlayers from \"./GroupedByPlayers\";\r\nimport SpecificMatchSkel from \"./skeletons/SpecificMatchSkel\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport LogoComp from './LogoComp'\r\n\r\nconst SpecificMatchComp = (props) => {\r\n    const [matchID, setMatchID] = useState(props.match.params.matchID);\r\n    const [uno, setUno] = useState(props.match.params.uno);\r\n    const [teams, setTeams] = useState([]);\r\n    const [matchData, setMatchData] = useState(\"\");\r\n    const [topTeamKills, setTopTeamKills] = useState(null);\r\n    const [topPlayerKills, setTopPlayerKills] = useState(null);\r\n    const [sort, setSort] = useState([\"picked\", \"root\", \"root\"])\r\n    const theme = useTheme();\r\n    const screenSize = useMediaQuery(theme.breakpoints.up('md'));\r\n    const [groupBy, setGroupBy] = useState(\"teams\");\r\n    const [group, setGroup] = useState([\"picked\", \"root\"])\r\n    const [groupSort, setGroupSort] = useState([\"picked\", \"root\"])\r\n    const [teamComps, setTeamComps] = useState([]);\r\n    const [players, setPlayers] = useState([]);\r\n\r\n    const getMatch = async () => {\r\n        let resp = await utils.getMatchDetails(matchID);\r\n        console.log(resp);\r\n        let obj = {\r\n            utcStartSeconds: resp.utcStartSeconds,\r\n            mode: resp.mode,\r\n            playerCount: resp.playerCount\r\n        }\r\n        setTeams(resp.teams)\r\n        setMatchData(obj);\r\n    }\r\n\r\n    const getTopTeamKills = (teams) => {\r\n        if (teams.length > 0) {\r\n            let teamsCopy = [...teams];\r\n            let sorted = teamsCopy.sort((a, b) => {\r\n                if (b.teamStats.kills === a.teamStats.kills) {\r\n                    return b.teamStats.damageDone - a.teamStats.damageDone\r\n                }\r\n                return b.teamStats.kills - a.teamStats.kills;\r\n            })\r\n            return sorted.slice(0, 3);\r\n        }\r\n    }\r\n\r\n    const getTopPlayerKills = (teams) => {\r\n        if (teams.length > 0) {\r\n            let players = [];\r\n            teams.forEach(team => {\r\n                let temp = players.concat(team.players);\r\n                players = temp;\r\n            })\r\n            players.sort((a, b) => {\r\n                if (b.kills === a.kills) {\r\n                    return b.damageDone - a.damageDone;\r\n                }\r\n                return b.kills - a.kills\r\n            })\r\n            return players.slice(0, 3);\r\n        }\r\n    }\r\n\r\n    const sortBy = (prop) => {\r\n        let teamsCopy = [...teams];\r\n        teamsCopy.sort((a, b) => {\r\n            if (prop === \"teamPlacement\") {\r\n                return a.players[0][prop] - b.players[0][prop];\r\n            }\r\n            else {\r\n                if (b.teamStats.kills === a.teamStats.kills) {\r\n                    return b.teamStats.damageDone - a.teamStats.damageDone\r\n                }\r\n                return b.teamStats[prop] - a.teamStats[prop];\r\n            }\r\n        })\r\n        setTeams(teamsCopy)\r\n    }\r\n\r\n    const createTeamsDesign = () => {\r\n        const teamComps = teams.map((team, index) => {\r\n            if (team.players.length != 0) {\r\n                return <TeamComp key={team.players[0].team} mode={matchData.mode} team={team.players} teamStats={team.teamStats} uno={uno} />\r\n            }\r\n        })\r\n        setTeamComps(teamComps);\r\n    }\r\n\r\n    const getPlayers = () => {\r\n        let players = [];\r\n        teams.forEach(team => players.push(...team.players));\r\n        players = sortPlayersByKills(players)\r\n        setPlayers(players);\r\n    }\r\n\r\n    const sortPlayersByKills = (players) => {\r\n        const temp = players.sort((a, b) => {\r\n            if (b.kills === a.kills) {\r\n                return b.damageDone - a.damageDone;\r\n            }\r\n            return b.kills - a.kills\r\n        })\r\n        return temp;\r\n    }\r\n\r\n    const sortPlayersByDamage = (players) => {\r\n        const temp = players.sort((a, b) => {\r\n            if (b.damageDone === a.damageDone) {\r\n                return b.kills - a.kills;\r\n            }\r\n            return b.damageDone - a.damageDone\r\n        })\r\n        return temp\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n        getMatch();\r\n    }, [matchID])\r\n\r\n    useEffect(() => {\r\n        createTeamsDesign();\r\n        let teamKills = getTopTeamKills(teams);\r\n        let playerKills = getTopPlayerKills(teams);\r\n        setTopTeamKills(teamKills)\r\n        setTopPlayerKills(playerKills)\r\n    }, [teams])\r\n\r\n    useEffect(() => {\r\n        if (matchData.mode === \"br_dmz_plnbld\") {\r\n            sortBy(\"kills\")\r\n            setSort([\"root\", \"picked\", \"root\"])\r\n        }\r\n    }, [matchData])\r\n\r\n    const sortButtonsDesign = sortButtons();\r\n    return (\r\n        <Container>\r\n            {\r\n                teams.length > 0 ?\r\n                    <Grid container direction=\"column\" alignItems=\"stretch\" jusity=\"center\">\r\n                        <Grid item xs={12}>\r\n                            <LogoComp />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            {\r\n                                screenSize ?\r\n                                    <h2 style={{ marginBottom: \"0\" }}>{utils.modeName(matchData.mode)}</h2>\r\n                                    : <h4 style={{ marginBottom: \"0\" }}>{utils.modeName(matchData.mode)}</h4>\r\n                            }\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <h5>{utils.formatDate(matchData.utcStartSeconds)}</h5>\r\n                        </Grid>\r\n                        <Grid item xs={12} >\r\n                            {topTeamKills != null ? <MatchMVPs teamKills={topTeamKills} mode={matchData.mode} uno={uno} playerKills={topPlayerKills} key={topTeamKills[0].players[0].team} /> : <Grid item xs={12}><Skeleton width={1463} height={37} /></Grid>}\r\n                        </Grid>\r\n                        <Grid container item xs={12} justify=\"center\">\r\n                            {\r\n                                matchData.mode != \"br_brsolo\" ?\r\n                                    <Grid container item xs={12} md={3} direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n                                        <Grid item xs={12}>\r\n                                            <h5 style={{ color: \"#909090\" }}>GROUP BY</h5>\r\n                                        </Grid>\r\n                                        <Grid container item xs={12} justify=\"center\" alignItems=\"stretch\">\r\n                                            <ButtonGroup size=\"small\" fullWidth>\r\n                                                <Button className={sortButtonsDesign[group[0]]} onClick={() => { setGroupBy(\"teams\"); setGroup([\"picked\", \"root\"]) }}>TEAMS</Button>\r\n                                                <Button className={sortButtonsDesign[group[1]]} onClick={() => { if (players.length === 0) { getPlayers() }; setGroupBy(\"players\"); setGroup([\"root\", \"picked\"]) }}>PLAYERS</Button>\r\n                                            </ButtonGroup>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    :\r\n                                    null\r\n                            }\r\n                            {\r\n                                matchData.mode != \"br_brsolo\" ?\r\n                                    <Grid container item xs={1} justify=\"center\" alignItems=\"center\">\r\n                                        <Divider orientation=\"vertical\" style={{ background: \"#909090\" }} />\r\n                                    </Grid>\r\n                                    :\r\n                                    null\r\n                            }\r\n                            <Grid container item xs={12} md={3} direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                                <Grid item xs={12}>\r\n                                    <h5 style={{ color: \"#909090\" }}>SORT BY</h5>\r\n                                </Grid>\r\n                                {\r\n                                    groupBy === (\"teams\") ?\r\n                                        <Grid container item xs={12} justify=\"center\" alignItems=\"center\">\r\n                                            {\r\n                                                matchData.mode !== \"br_dmz_plnbld\" ?\r\n                                                    <ButtonGroup size=\"small\" fullWidth>\r\n                                                        <Button className={sortButtonsDesign[sort[0]]} onClick={() => { sortBy(\"teamPlacement\"); setSort([\"picked\", \"root\", \"root\"]) }}>Placement</Button>\r\n                                                        <Button className={sortButtonsDesign[sort[1]]} onClick={() => { sortBy(\"kills\"); setSort([\"root\", \"picked\", \"root\"]) }}>Kills</Button>\r\n                                                        <Button className={sortButtonsDesign[sort[2]]} onClick={() => { sortBy(\"damageDone\"); setSort([\"root\", \"root\", \"picked\"]) }}>Damage</Button>\r\n                                                    </ButtonGroup>\r\n                                                    :\r\n                                                    <ButtonGroup size=\"small\" fullWidth>\r\n                                                        <Button className={sortButtonsDesign[sort[1]]} onClick={() => { sortBy(\"kills\"); setSort([\"root\", \"picked\", \"root\"]) }}>Kills</Button>\r\n                                                        <Button className={sortButtonsDesign[sort[2]]} onClick={() => { sortBy(\"damageDone\"); setSort([\"root\", \"root\", \"picked\"]) }}>Damage</Button>\r\n                                                    </ButtonGroup>\r\n                                            }\r\n                                        </Grid>\r\n                                        :\r\n                                        <Grid container item xs={12} justify=\"center\" alignItems=\"stretch\">\r\n                                            <ButtonGroup size=\"small\" fullWidth>\r\n                                                <Button className={sortButtonsDesign[groupSort[0]]}\r\n                                                    onClick={() => {\r\n                                                        let sorted = sortPlayersByKills(players)\r\n                                                        setPlayers(sorted)\r\n                                                        setGroupSort([\"picked\", \"root\"])\r\n                                                    }}>\r\n                                                    KILLS\r\n                                                </Button>\r\n                                                <Button className={sortButtonsDesign[groupSort[1]]}\r\n                                                    onClick={() => {\r\n                                                        let sorted = sortPlayersByDamage(players);\r\n                                                        setPlayers(sorted)\r\n                                                        setGroupSort([\"root\", \"picked\"])\r\n                                                    }}>\r\n                                                    DAMAGE\r\n                                                </Button>\r\n                                            </ButtonGroup>\r\n                                        </Grid>\r\n                                }\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <br />\r\n                            {\r\n                                groupBy === \"teams\" ?\r\n                                    teamComps\r\n                                    :\r\n                                    <GroupedByPlayers key={players[0].username} players={players} uno={uno} />\r\n                            }\r\n                        </Grid>\r\n                    </Grid>\r\n                    :\r\n                    <SpecificMatchSkel />\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default SpecificMatchComp","import { Route, Switch } from \"react-router-dom\"\r\nimport HomePage from './HomePage'\r\nimport HowWeRank from \"./HowWeRank\";\r\nimport PlayerComp from \"./PlayerComp\";\r\nimport SpecificMatchComp from \"./SpecificMatchComp\";\r\n\r\nconst RouterComp = (props) => {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route path=\"/\" exact component={HomePage} />\r\n                <Route path=\"/player/:platform/:username\" component={PlayerComp} />\r\n                <Route path=\"/match/:matchID/:uno\" component={SpecificMatchComp} />\r\n                <Route path=\"/ranking\" component={HowWeRank} />\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RouterComp;","const { createMuiTheme } = require(\"@material-ui/core\");\r\n\r\nconst darkTheme = createMuiTheme({\r\n    overrides: {\r\n        MuiContainer: {\r\n            root: {\r\n                backgroundColor: \"#212121\",\r\n                color: \"#f7fbfc\",\r\n                textAlign: \"center\",\r\n                fontFamily: \"Calibri\",\r\n                fontSize: 20,\r\n                height: \"100%\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\"\r\n            }\r\n        },\r\n        MuiButton: {\r\n            root: {\r\n                color: \"#f7fbfc\",\r\n                '&.MuiButton-outlined': {\r\n                    borderColor: \"rgba(125,125,125,0.8)\"\r\n                }\r\n            }\r\n        },\r\n        MuiInputLabel: {\r\n            root: {\r\n                color: \"#f7fbfc\",\r\n            },\r\n        },\r\n        MuiFilledInput: {\r\n            root: {\r\n                color: \"#f7fbfc\",\r\n            },\r\n        },\r\n        MuiSelect: {\r\n            root: {\r\n                color: \"#f7fbfc\",\r\n            },\r\n            icon: {\r\n                color: \"#f7fbfc\"\r\n            }\r\n        },\r\n        MuiMenuItem: {\r\n            root: {\r\n                color: \"#f7fbfc\"\r\n            }\r\n        },\r\n        MuiPaper: {\r\n            root: {\r\n                backgroundColor: \"white\",\r\n                margin: \"4px\",\r\n                borderRadius: \"4px\"\r\n            }\r\n        },\r\n        MuiSkeleton: {\r\n            root: {\r\n                borderRadius: \"4px\"\r\n            }\r\n        }\r\n    },\r\n    props: {\r\n        MuiContainer: {\r\n            maxWidth: false\r\n        },\r\n        MuiButton: {\r\n            variant: \"outlined\"\r\n        },\r\n        MuiTextField: {\r\n            variant: \"filled\",\r\n            size: \"small\"\r\n        },\r\n        MuiSelect: {\r\n            variant: \"filled\"\r\n        },\r\n        MuiSkeleton: {\r\n            animation: \"wave\",\r\n            variant: \"rect\"\r\n        }\r\n    },\r\n    palette: {\r\n        primary: {\r\n            main: \"#FFFFFF\"\r\n        },\r\n        secondary: {\r\n            main: \"#29b6f6\"\r\n        }\r\n    }\r\n})\r\n\r\nconst lightTheme = createMuiTheme({\r\n    overrides: {\r\n        MuiContainer: {\r\n            root: {\r\n                backgroundColor: \"yellow\",\r\n                color: \"#f7fbfc\",\r\n                textAlign: \"center\",\r\n                fontFamily: \"Calibri\",\r\n                fontSize: 20,\r\n                height: \"100vh\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\"\r\n            }\r\n        }\r\n    },\r\n    props: {\r\n        MuiContainer: {\r\n            maxWidth: false\r\n        }\r\n    }\r\n})\r\n\r\nexport { lightTheme, darkTheme };","import { ThemeProvider } from '@material-ui/styles';\nimport './App.css';\nimport RouterComp from './comps/RouterComp'\nimport { lightTheme, darkTheme } from './mui/theme'\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={darkTheme}>\n        <RouterComp />\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter basename=\"/rankedzonebuild\">\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}